[
  {
    "type": "assembly",
    "name": "mscorlib",
    "size": 208264,
    "children": [
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit Interop extends System.Object",
        "size": 8,
        "children": [
          {
            "type": "method",
            "name": "void GetRandomBytes(uint8* buffer, int32 length)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit Locale extends System.Object",
        "size": 2,
        "children": [
          {
            "type": "method",
            "name": "string GetText(string msg)",
            "size": 2,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit SR extends System.Object",
        "size": 29,
        "children": [
          {
            "type": "method",
            "name": "string Format(string resourceFormat, object p1)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "string Format(string resourceFormat, object p1, object p2)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetResourceString(string str)",
            "size": 2,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit Mono.Runtime extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.RuntimeClassHandle extends System.ValueType",
        "size": 109,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(valuetype Mono.RuntimeStructs/MonoClass* \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype Mono.RuntimeStructs/MonoClass* get_Value()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 57,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeTypeHandle GetTypeHandle()",
            "size": 17,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.RuntimeGenericParamInfoHandle extends System.ValueType",
        "size": 146,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int ptr)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] get_Constraints()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.GenericParameterAttributes get_Attributes()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetConstraints()",
            "size": 72,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetConstraintsCount()",
            "size": 42,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.RuntimeEventHandle extends System.ValueType",
        "size": 87,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int v)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int get_Value()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.RuntimePropertyHandle extends System.ValueType",
        "size": 87,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int v)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int get_Value()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.RuntimeGPtrArrayHandle extends System.ValueType",
        "size": 95,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int ptr)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Length()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int get_Item(int32 i)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int Lookup(int32 i)",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "void DestroyAndFree(valuetype Mono.RuntimeGPtrArrayHandle\u0026 h)",
            "size": 20,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit Mono.RuntimeMarshal extends System.Object",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "valuetype Mono.SafeStringMarshal MarshalString(string str)",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit Mono.RuntimeStructs extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.ValueTuple extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.ValueTuple\u00601\u003CT1\u003E extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.ValueTuple\u00602\u003CT1,T2\u003E extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.ValueTuple\u00603\u003CT1,T2,T3\u003E extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.ValueTuple\u00604\u003CT1,T2,T3,T4\u003E extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.ValueTuple\u00605\u003CT1,T2,T3,T4, T5\u003E extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.SafeGPtrArrayHandle extends System.ValueType implements System.IDisposable",
        "size": 50,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int ptr)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Length()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int get_Item(int32 i)",
            "size": 13,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.SafeStringMarshal extends System.ValueType implements System.IDisposable",
        "size": 110,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string str)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "int get_Value()",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 41,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit Mono.Security.StrongName extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit Microsoft.Win32.Win32Native extends System.Object",
        "size": 26,
        "children": [
          {
            "type": "method",
            "name": "string GetMessage(int32 hr)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 MakeHRFromErrorCode(int32 errorCode)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit Microsoft.Win32.SafeHandles.SafeFileHandle extends Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid",
        "size": 34,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int preexistingHandle, bool ownsHandle)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool ReleaseHandle()",
            "size": 19,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit Microsoft.Win32.SafeHandles.SafeWaitHandle extends Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid",
        "size": 28,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int existingHandle, bool ownsHandle)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool ReleaseHandle()",
            "size": 13,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi beforefieldinit Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid extends System.Runtime.InteropServices.SafeHandle",
        "size": 46,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(bool ownsHandle)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsInvalid()",
            "size": 33,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Action extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Action\u00601\u003C- T\u003E extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Action\u00602\u003C- T1,- T2\u003E extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Func\u00601\u003C\u002B TResult\u003E extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Func\u00602\u003C- T,\u002B TResult\u003E extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Comparison\u00601\u003C- T\u003E extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Predicate\u00601\u003C- T\u003E extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.AggregateException extends System.Exception",
        "size": 723,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Collections.Generic.IEnumerable\u00601\u003Cclass System.Exception\u003E innerExceptions)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Exception[] innerExceptions)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Collections.Generic.IEnumerable\u00601\u003Cclass System.Exception\u003E innerExceptions)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Exception[] innerExceptions)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Collections.Generic.IList\u00601\u003Cclass System.Exception\u003E innerExceptions)",
            "size": 108,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Collections.Generic.IEnumerable\u00601\u003Cclass System.Runtime.ExceptionServices.ExceptionDispatchInfo\u003E innerExceptionInfos)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Collections.Generic.IEnumerable\u00601\u003Cclass System.Runtime.ExceptionServices.ExceptionDispatchInfo\u003E innerExceptionInfos)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Collections.Generic.IList\u00601\u003Cclass System.Runtime.ExceptionServices.ExceptionDispatchInfo\u003E innerExceptionInfos)",
            "size": 132,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 76,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Message()",
            "size": 138,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 133,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.ApplicationException extends System.Exception",
        "size": 71,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Exception innerException)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.ArgumentException extends System.SystemException",
        "size": 146,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, string paramName)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Message()",
            "size": 52,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.ArgumentNullException extends System.ArgumentException",
        "size": 76,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string paramName)",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string paramName, string message)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.ArgumentOutOfRangeException extends System.ArgumentException",
        "size": 187,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string paramName)",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string paramName, string message)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string paramName, object actualValue, string message)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Message()",
            "size": 57,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.ArithmeticException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.ArrayTypeMismatchException extends System.SystemException",
        "size": 32,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.AssemblyLoadEventArgs extends System.EventArgs",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Reflection.Assembly loadedAssembly)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed System.AssemblyLoadEventHandler extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed System.AsyncCallback extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.AttributeTargets extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.AttributeUsageAttribute extends System.Attribute",
        "size": 78,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(valuetype System.AttributeTargets validOn)",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_AllowMultiple()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_AllowMultiple(bool \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_Inherited()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_Inherited(bool \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 16,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.BadImageFormatException extends System.SystemException",
        "size": 379,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, string fileName)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Message()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetMessageField()",
            "size": 65,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 190,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed System.BitConverter extends System.Object",
        "size": 32,
        "children": [
          {
            "type": "method",
            "name": "int64 DoubleToInt64Bits(float64 \u0027value\u0027)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 SingleToInt32Bits(float32 \u0027value\u0027)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 22,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Boolean extends System.ValueType implements System.IComparable, System.IConvertible, class System.IComparable\u00601\u003Cbool\u003E, class System.IEquatable\u00601\u003Cbool\u003E",
        "size": 149,
        "children": [
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(bool obj)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(object obj)",
            "size": 44,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(bool \u0027value\u0027)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 21,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Byte extends System.ValueType implements System.IComparable, System.IConvertible, System.IFormattable, class System.IComparable\u00601\u003Cuint8\u003E, class System.IEquatable\u00601\u003Cuint8\u003E, System.ISpanFormattable",
        "size": 145,
        "children": [
          {
            "type": "method",
            "name": "int32 CompareTo(object \u0027value\u0027)",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(uint8 \u0027value\u0027)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(uint8 obj)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format, class System.IFormatProvider provider)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, [opt] valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, [opt] class System.IFormatProvider provider)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.CLSCompliantAttribute extends System.Attribute",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(bool isCompliant)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Char extends System.ValueType implements System.IComparable, class System.IComparable\u00601\u003Cchar\u003E, class System.IEquatable\u00601\u003Cchar\u003E, System.IConvertible",
        "size": 440,
        "children": [
          {
            "type": "method",
            "name": "bool IsLatin1(char ch)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(char obj)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(object \u0027value\u0027)",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(char \u0027value\u0027)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(char c)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsWhiteSpaceLatin1(char c)",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsWhiteSpace(char c)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsSurrogate(char c)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsSurrogate(string s, int32 index)",
            "size": 47,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsHighSurrogate(char c)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsHighSurrogate(string s, int32 index)",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsLowSurrogate(char c)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 ConvertToUtf32(char highSurrogate, char lowSurrogate)",
            "size": 76,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 27,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.CharEnumerator extends System.Object implements System.Collections.IEnumerator, class System.Collections.Generic.IEnumerator\u00601\u003Cchar\u003E, System.IDisposable",
        "size": 190,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string str)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool MoveNext()",
            "size": 79,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "char get_Current()",
            "size": 57,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Convert extends System.Object",
        "size": 271,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode(object \u0027value\u0027)",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowInt64OverflowException()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowUInt64OverflowException()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "uint8 ToByte(bool \u0027value\u0027)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(object \u0027value\u0027, class System.IFormatProvider provider)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(bool \u0027value\u0027)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(char \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(int8 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(uint8 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(int16 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(uint16 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(int32 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(uint32 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(uint64 \u0027value\u0027)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(float32 \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(float64 \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(string \u0027value\u0027, class System.IFormatProvider provider)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(object \u0027value\u0027, class System.IFormatProvider provider)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(bool \u0027value\u0027)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(char \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(int8 \u0027value\u0027)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(uint8 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(int16 \u0027value\u0027)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(uint16 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(int32 \u0027value\u0027)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(uint32 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(int64 \u0027value\u0027)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(float32 \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(float64 \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(string \u0027value\u0027, class System.IFormatProvider provider)",
            "size": 15,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.DBNull extends System.Object implements System.IConvertible",
        "size": 65,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.DateTime extends System.ValueType implements System.IComparable, System.IFormattable, System.IConvertible, class System.IComparable\u00601\u003Cvaluetype System.DateTime\u003E, class System.IEquatable\u00601\u003Cvaluetype System.DateTime\u003E, System.ISpanFormattable",
        "size": 1967,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(uint64 dateData)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int64 ticks, valuetype System.DateTimeKind kind)",
            "size": 71,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int64 ticks, valuetype System.DateTimeKind kind, bool isAmbiguousDst)",
            "size": 65,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 year, int32 month, int32 day)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 202,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 get_InternalTicks()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 get_InternalKind()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Compare(valuetype System.DateTime t1, valuetype System.DateTime t2)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(object \u0027value\u0027)",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(valuetype System.DateTime \u0027value\u0027)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 DateToTicks(int32 year, int32 month, int32 day)",
            "size": 120,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 DaysInMonth(int32 year, int32 month)",
            "size": 56,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object \u0027value\u0027)",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(valuetype System.DateTime \u0027value\u0027)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime SpecifyKind(valuetype System.DateTime \u0027value\u0027, valuetype System.DateTimeKind kind)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime get_Date()",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetDatePart(int32 part)",
            "size": 217,
            "children": null
          },
          {
            "type": "method",
            "name": "void GetDatePart([out] int32\u0026 year, [out] int32\u0026 month, [out] int32\u0026 day)",
            "size": 206,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Day()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DayOfWeek get_DayOfWeek()",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Hour()",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTimeKind get_Kind()",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Minute()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Month()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime get_Now()",
            "size": 87,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Second()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 get_Ticks()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TimeSpan get_TimeOfDay()",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Year()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsLeapYear(int32 year)",
            "size": 54,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format, class System.IFormatProvider provider)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, [opt] valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, [opt] class System.IFormatProvider provider)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime ToUniversalTime()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime op_Addition(valuetype System.DateTime d, valuetype System.TimeSpan t)",
            "size": 69,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime op_Subtraction(valuetype System.DateTime d, valuetype System.TimeSpan t)",
            "size": 66,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(valuetype System.DateTime d1, valuetype System.DateTime d2)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_LessThan(valuetype System.DateTime t1, valuetype System.DateTime t2)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_LessThanOrEqual(valuetype System.DateTime t1, valuetype System.DateTime t2)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_GreaterThan(valuetype System.DateTime t1, valuetype System.DateTime t2)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_GreaterThanOrEqual(valuetype System.DateTime t1, valuetype System.DateTime t2)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime get_UtcNow()",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 100,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.DateTimeKind extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.DayOfWeek extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.DivideByZeroException extends System.ArithmeticException",
        "size": 32,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.DllNotFoundException extends System.TypeLoadException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Double extends System.ValueType implements System.IComparable, System.IConvertible, System.IFormattable, class System.IComparable\u00601\u003Cfloat64\u003E, class System.IEquatable\u00601\u003Cfloat64\u003E, System.ISpanFormattable",
        "size": 390,
        "children": [
          {
            "type": "method",
            "name": "bool IsFinite(float64 d)",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsNaN(float64 d)",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsNegative(float64 d)",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(object \u0027value\u0027)",
            "size": 75,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(float64 \u0027value\u0027)",
            "size": 44,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(float64 obj)",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 54,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format, class System.IFormatProvider provider)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, [opt] valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, [opt] class System.IFormatProvider provider)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.EntryPointNotFoundException extends System.TypeLoadException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.EventArgs extends System.Object",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.EventHandler extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.EventHandler\u00601\u003CTEventArgs\u003E extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.ExecutionEngineException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.FieldAccessException extends System.MemberAccessException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.FlagsAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.FormatException extends System.SystemException",
        "size": 71,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Exception innerException)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Gen2GcCallback extends System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
        "size": 114,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void Register(class System.Func\u00602\u003Cobject,bool\u003E callback, object targetObj)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void Setup(class System.Func\u00602\u003Cobject,bool\u003E callback, object targetObj)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void Finalize()",
            "size": 73,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.DateTimeFormat extends System.Object",
        "size": 5073,
        "children": [
          {
            "type": "method",
            "name": "void FormatDigits(class System.Text.StringBuilder outputBuffer, int32 \u0027value\u0027, int32 len)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "void FormatDigits(class System.Text.StringBuilder outputBuffer, int32 \u0027value\u0027, int32 len, bool overrideLengthLimit)",
            "size": 98,
            "children": null
          },
          {
            "type": "method",
            "name": "void HebrewFormatDigits(class System.Text.StringBuilder outputBuffer, int32 digits)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 ParseRepeatPattern(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, int32 pos, char patternChar)",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatDayOfWeek(int32 dayOfWeek, int32 repeat, class System.Globalization.DateTimeFormatInfo dtfi)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatMonth(int32 month, int32 repeatCount, class System.Globalization.DateTimeFormatInfo dtfi)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatHebrewMonthName(valuetype System.DateTime time, int32 month, int32 repeatCount, class System.Globalization.DateTimeFormatInfo dtfi)",
            "size": 67,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 ParseQuoteString(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, int32 pos, class System.Text.StringBuilder result)",
            "size": 145,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 ParseNextChar(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, int32 pos)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsUseGenitiveForm(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, int32 index, int32 tokenLen, char patternToMatch)",
            "size": 148,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder FormatCustomized(valuetype System.DateTime dateTime, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.Globalization.DateTimeFormatInfo dtfi, valuetype System.TimeSpan offset, class System.Text.StringBuilder result)",
            "size": 1707,
            "children": null
          },
          {
            "type": "method",
            "name": "void FormatCustomizedTimeZone(valuetype System.DateTime dateTime, valuetype System.TimeSpan offset, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, int32 tokenLen, bool timeOnly, class System.Text.StringBuilder result)",
            "size": 222,
            "children": null
          },
          {
            "type": "method",
            "name": "void FormatCustomizedRoundripTimeZone(valuetype System.DateTime dateTime, valuetype System.TimeSpan offset, class System.Text.StringBuilder result)",
            "size": 132,
            "children": null
          },
          {
            "type": "method",
            "name": "void Append2DigitNumber(class System.Text.StringBuilder result, int32 val)",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetRealFormat(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.Globalization.DateTimeFormatInfo dtfi)",
            "size": 360,
            "children": null
          },
          {
            "type": "method",
            "name": "string ExpandPredefinedFormat(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, valuetype System.DateTime\u0026 dateTime, class System.Globalization.DateTimeFormatInfo\u0026 dtfi, valuetype System.TimeSpan\u0026 offset)",
            "size": 358,
            "children": null
          },
          {
            "type": "method",
            "name": "string Format(valuetype System.DateTime dateTime, string format, class System.IFormatProvider provider)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "string Format(valuetype System.DateTime dateTime, string format, class System.IFormatProvider provider, valuetype System.TimeSpan offset)",
            "size": 174,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.DateTime dateTime, valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.IFormatProvider provider)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.DateTime dateTime, valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.IFormatProvider provider, valuetype System.TimeSpan offset)",
            "size": 145,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder FormatStringBuilder(valuetype System.DateTime dateTime, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.Globalization.DateTimeFormatInfo dtfi, valuetype System.TimeSpan offset)",
            "size": 198,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormatO(valuetype System.DateTime dateTime, valuetype System.TimeSpan offset, valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten)",
            "size": 396,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormatR(valuetype System.DateTime dateTime, valuetype System.TimeSpan offset, valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten)",
            "size": 374,
            "children": null
          },
          {
            "type": "method",
            "name": "void WriteTwoDecimalDigits(uint32 \u0027value\u0027, valuetype System.Span\u00601\u003Cchar\u003E destination, int32 offset)",
            "size": 44,
            "children": null
          },
          {
            "type": "method",
            "name": "void WriteFourDecimalDigits(uint32 \u0027value\u0027, valuetype System.Span\u00601\u003Cchar\u003E buffer, [opt] int32 startingIndex)",
            "size": 102,
            "children": null
          },
          {
            "type": "method",
            "name": "void WriteDigits(uint64 \u0027value\u0027, valuetype System.Span\u00601\u003Cchar\u003E buffer)",
            "size": 66,
            "children": null
          },
          {
            "type": "method",
            "name": "void InvalidFormatForLocal(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, valuetype System.DateTime dateTime)",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 146,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Guid extends System.ValueType implements System.IFormattable, System.IComparable, class System.IComparable\u00601\u003Cvaluetype System.Guid\u003E, class System.IEquatable\u00601\u003Cvaluetype System.Guid\u003E, System.ISpanFormattable",
        "size": 2699,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(uint8[] b)",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(valuetype System.ReadOnlySpan\u00601\u003Cuint8\u003E b)",
            "size": 274,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 49,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object o)",
            "size": 124,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(valuetype System.Guid g)",
            "size": 104,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetResult(uint32 me, uint32 them)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(object \u0027value\u0027)",
            "size": 401,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(valuetype System.Guid \u0027value\u0027)",
            "size": 365,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "char HexToChar(int32 a)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 HexsToChars(char* guidChars, int32 a, int32 b)",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 HexsToCharsHexOutput(char* guidChars, int32 a, int32 b)",
            "size": 96,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format, class System.IFormatProvider provider)",
            "size": 212,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, [opt] valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format)",
            "size": 930,
            "children": null
          },
          {
            "type": "method",
            "name": "bool System.ISpanFormattable.TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.IFormatProvider provider)",
            "size": 10,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.IAsyncResult",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.IComparable",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.IComparable\u00601\u003C- T\u003E",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.IConvertible",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.ICustomFormatter",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.IDisposable",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.IEquatable\u00601\u003CT\u003E",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.IFormatProvider",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.IFormattable",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface private abstract auto ansi System.ISpanFormattable",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.IndexOutOfRangeException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Int16 extends System.ValueType implements System.IComparable, System.IConvertible, System.IFormattable, class System.IComparable\u00601\u003Cint16\u003E, class System.IEquatable\u00601\u003Cint16\u003E, System.ISpanFormattable",
        "size": 257,
        "children": [
          {
            "type": "method",
            "name": "int32 CompareTo(object \u0027value\u0027)",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(int16 \u0027value\u0027)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(int16 obj)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format, class System.IFormatProvider provider)",
            "size": 75,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, [opt] valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, [opt] class System.IFormatProvider provider)",
            "size": 73,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Int32 extends System.ValueType implements System.IComparable, System.IConvertible, System.IFormattable, class System.IComparable\u00601\u003Cint32\u003E, class System.IEquatable\u00601\u003Cint32\u003E, System.ISpanFormattable",
        "size": 170,
        "children": [
          {
            "type": "method",
            "name": "int32 CompareTo(object \u0027value\u0027)",
            "size": 47,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(int32 \u0027value\u0027)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(int32 obj)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(class System.IFormatProvider provider)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format, class System.IFormatProvider provider)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, [opt] valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, [opt] class System.IFormatProvider provider)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Int64 extends System.ValueType implements System.IComparable, System.IConvertible, System.IFormattable, class System.IComparable\u00601\u003Cint64\u003E, class System.IEquatable\u00601\u003Cint64\u003E, System.ISpanFormattable",
        "size": 193,
        "children": [
          {
            "type": "method",
            "name": "int32 CompareTo(object \u0027value\u0027)",
            "size": 47,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(int64 \u0027value\u0027)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(int64 obj)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format, class System.IFormatProvider provider)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, [opt] valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, [opt] class System.IFormatProvider provider)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider)",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.InvalidCastException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.InvalidOperationException extends System.SystemException",
        "size": 71,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Exception innerException)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.InvalidProgramException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.InvalidTimeZoneException extends System.Exception",
        "size": 24,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Marvin extends System.Object",
        "size": 468,
        "children": [
          {
            "type": "method",
            "name": "int32 ComputeHash32(uint8\u0026 data, int32 count, uint64 seed)",
            "size": 362,
            "children": null
          },
          {
            "type": "method",
            "name": "void Block(uint32\u0026 rp0, uint32\u0026 rp1)",
            "size": 65,
            "children": null
          },
          {
            "type": "method",
            "name": "uint32 _rotl(uint32 \u0027value\u0027, int32 shift)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 get_DefaultSeed()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 GenerateSeed()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Math extends System.Object",
        "size": 66,
        "children": [
          {
            "type": "method",
            "name": "int32 Abs(int32 \u0027value\u0027)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowAbsOverflow()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Max(int32 val1, int32 val2)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Min(int32 val1, int32 val2)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 Min(int64 val1, int64 val2)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Sign(int64 \u0027value\u0027)",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.MemberAccessException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.MemoryExtensions extends System.Object",
        "size": 527,
        "children": [
          {
            "type": "method",
            "name": "bool Contains(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E source, char \u0027value\u0027)",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E AsSpan(string text)",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E AsSpan(string text, int32 start, int32 length)",
            "size": 72,
            "children": null
          },
          {
            "type": "method",
            "name": "bool StartsWith\u003C(class System.IEquatable\u00601\u003C!!T\u003E) T\u003E(valuetype System.ReadOnlySpan\u00601\u003C!!T\u003E span, valuetype System.ReadOnlySpan\u00601\u003C!!T\u003E \u0027value\u0027)",
            "size": 108,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Span\u00601\u003C!!T\u003E AsSpan\u003CT\u003E(!!T[] \u0027array\u0027, int32 start, int32 length)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsTypeComparableAsBytes\u003CT\u003E([out] uint64\u0026 size)",
            "size": 273,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.MethodAccessException extends System.MemberAccessException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.MissingMethodException extends System.MissingMemberException",
        "size": 156,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string className, string methodName)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Message()",
            "size": 84,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.MulticastNotSupportedException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.NonSerializedAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.NotImplementedException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.NotSupportedException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.NullReferenceException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Nullable\u00601\u003Cvaluetype .ctor (System.ValueType) T\u003E extends System.ValueType",
        "size": 240,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(!T \u0027value\u0027)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_HasValue()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !T get_Value()",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object other)",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "object Box(valuetype System.Nullable\u00601\u003C!T\u003E o)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Nullable\u00601\u003C!T\u003E Unbox(object o)",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Nullable\u00601\u003C!T\u003E UnboxExact(object o)",
            "size": 54,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Number extends System.Object",
        "size": 14097,
        "children": [
          {
            "type": "method",
            "name": "string FormatDouble(float64 \u0027value\u0027, string format, class System.Globalization.NumberFormatInfo info)",
            "size": 54,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormatDouble(float64 \u0027value\u0027, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.Globalization.NumberFormatInfo info, valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten)",
            "size": 56,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatDouble(valuetype System.Text.ValueStringBuilder\u0026 sb, float64 \u0027value\u0027, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.Globalization.NumberFormatInfo info)",
            "size": 305,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatSingle(float32 \u0027value\u0027, string format, class System.Globalization.NumberFormatInfo info)",
            "size": 54,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormatSingle(float32 \u0027value\u0027, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.Globalization.NumberFormatInfo info, valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten)",
            "size": 56,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatSingle(valuetype System.Text.ValueStringBuilder\u0026 sb, float32 \u0027value\u0027, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.Globalization.NumberFormatInfo info)",
            "size": 304,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryCopyTo(string source, valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten)",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatInt32(int32 \u0027value\u0027, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.IFormatProvider provider)",
            "size": 186,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormatInt32(int32 \u0027value\u0027, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.IFormatProvider provider, valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten)",
            "size": 195,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatUInt32(uint32 \u0027value\u0027, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.IFormatProvider provider)",
            "size": 164,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormatUInt32(uint32 \u0027value\u0027, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.IFormatProvider provider, valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten)",
            "size": 170,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatInt64(int64 \u0027value\u0027, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.IFormatProvider provider)",
            "size": 188,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormatInt64(int64 \u0027value\u0027, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.IFormatProvider provider, valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten)",
            "size": 197,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatUInt64(uint64 \u0027value\u0027, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.IFormatProvider provider)",
            "size": 164,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormatUInt64(uint64 \u0027value\u0027, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.IFormatProvider provider, valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten)",
            "size": 170,
            "children": null
          },
          {
            "type": "method",
            "name": "void Int32ToNumber(int32 \u0027value\u0027, valuetype System.Number/NumberBuffer\u0026 number)",
            "size": 106,
            "children": null
          },
          {
            "type": "method",
            "name": "string NegativeInt32ToDecStr(int32 \u0027value\u0027, int32 digits, string sNegative)",
            "size": 110,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryNegativeInt32ToDecStr(int32 \u0027value\u0027, int32 digits, string sNegative, valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten)",
            "size": 108,
            "children": null
          },
          {
            "type": "method",
            "name": "string Int32ToHexStr(int32 \u0027value\u0027, char hexBase, int32 digits)",
            "size": 61,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryInt32ToHexStr(int32 \u0027value\u0027, char hexBase, int32 digits, valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten)",
            "size": 69,
            "children": null
          },
          {
            "type": "method",
            "name": "static char* Int32ToHexChars(char* buffer, uint32 \u0027value\u0027, int32 hexBase, int32 digits)",
            "size": 47,
            "children": null
          },
          {
            "type": "method",
            "name": "void UInt32ToNumber(uint32 \u0027value\u0027, valuetype System.Number/NumberBuffer\u0026 number)",
            "size": 89,
            "children": null
          },
          {
            "type": "method",
            "name": "static char* UInt32ToDecChars(char* bufferEnd, uint32 \u0027value\u0027, int32 digits)",
            "size": 41,
            "children": null
          },
          {
            "type": "method",
            "name": "string UInt32ToDecStr(uint32 \u0027value\u0027, int32 digits)",
            "size": 97,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryUInt32ToDecStr(uint32 \u0027value\u0027, int32 digits, valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten)",
            "size": 93,
            "children": null
          },
          {
            "type": "method",
            "name": "void Int64ToNumber(int64 input, valuetype System.Number/NumberBuffer\u0026 number)",
            "size": 145,
            "children": null
          },
          {
            "type": "method",
            "name": "string NegativeInt64ToDecStr(int64 input, int32 digits, string sNegative)",
            "size": 157,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryNegativeInt64ToDecStr(int64 input, int32 digits, string sNegative, valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten)",
            "size": 154,
            "children": null
          },
          {
            "type": "method",
            "name": "string Int64ToHexStr(int64 \u0027value\u0027, char hexBase, int32 digits)",
            "size": 108,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryInt64ToHexStr(int64 \u0027value\u0027, char hexBase, int32 digits, valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten)",
            "size": 116,
            "children": null
          },
          {
            "type": "method",
            "name": "void UInt64ToNumber(uint64 \u0027value\u0027, valuetype System.Number/NumberBuffer\u0026 number)",
            "size": 124,
            "children": null
          },
          {
            "type": "method",
            "name": "string UInt64ToDecStr(uint64 \u0027value\u0027, int32 digits)",
            "size": 105,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryUInt64ToDecStr(uint64 \u0027value\u0027, int32 digits, valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten)",
            "size": 104,
            "children": null
          },
          {
            "type": "method",
            "name": "char ParseFormatSpecifier(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, [out] int32\u0026 digits)",
            "size": 259,
            "children": null
          },
          {
            "type": "method",
            "name": "void NumberToString(valuetype System.Text.ValueStringBuilder\u0026 sb, valuetype System.Number/NumberBuffer\u0026 number, char format, int32 nMaxDigits, class System.Globalization.NumberFormatInfo info, bool isDecimal)",
            "size": 518,
            "children": null
          },
          {
            "type": "method",
            "name": "void NumberToStringFormat(valuetype System.Text.ValueStringBuilder\u0026 sb, valuetype System.Number/NumberBuffer\u0026 number, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.Globalization.NumberFormatInfo info)",
            "size": 1978,
            "children": null
          },
          {
            "type": "method",
            "name": "void FormatCurrency(valuetype System.Text.ValueStringBuilder\u0026 sb, valuetype System.Number/NumberBuffer\u0026 number, int32 nMinDigits, int32 nMaxDigits, class System.Globalization.NumberFormatInfo info)",
            "size": 151,
            "children": null
          },
          {
            "type": "method",
            "name": "void FormatFixed(valuetype System.Text.ValueStringBuilder\u0026 sb, valuetype System.Number/NumberBuffer\u0026 number, int32 nMinDigits, int32 nMaxDigits, class System.Globalization.NumberFormatInfo info, int32[] groupDigits, string sDecimal, string sGroup)",
            "size": 437,
            "children": null
          },
          {
            "type": "method",
            "name": "void FormatNumber(valuetype System.Text.ValueStringBuilder\u0026 sb, valuetype System.Number/NumberBuffer\u0026 number, int32 nMinDigits, int32 nMaxDigits, class System.Globalization.NumberFormatInfo info)",
            "size": 123,
            "children": null
          },
          {
            "type": "method",
            "name": "void FormatScientific(valuetype System.Text.ValueStringBuilder\u0026 sb, valuetype System.Number/NumberBuffer\u0026 number, int32 nMinDigits, int32 nMaxDigits, class System.Globalization.NumberFormatInfo info, char expChar)",
            "size": 110,
            "children": null
          },
          {
            "type": "method",
            "name": "void FormatExponent(valuetype System.Text.ValueStringBuilder\u0026 sb, class System.Globalization.NumberFormatInfo info, int32 \u0027value\u0027, char expChar, int32 minDigits, bool positiveSign)",
            "size": 101,
            "children": null
          },
          {
            "type": "method",
            "name": "void FormatGeneral(valuetype System.Text.ValueStringBuilder\u0026 sb, valuetype System.Number/NumberBuffer\u0026 number, int32 nMinDigits, int32 nMaxDigits, class System.Globalization.NumberFormatInfo info, char expChar, bool bSuppressScientific)",
            "size": 156,
            "children": null
          },
          {
            "type": "method",
            "name": "void FormatPercent(valuetype System.Text.ValueStringBuilder\u0026 sb, valuetype System.Number/NumberBuffer\u0026 number, int32 nMinDigits, int32 nMaxDigits, class System.Globalization.NumberFormatInfo info)",
            "size": 151,
            "children": null
          },
          {
            "type": "method",
            "name": "void RoundNumber(valuetype System.Number/NumberBuffer\u0026 number, int32 pos)",
            "size": 152,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 FindSection(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, int32 section)",
            "size": 190,
            "children": null
          },
          {
            "type": "method",
            "name": "uint32 Low32(uint64 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "uint32 High32(uint64 \u0027value\u0027)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "uint32 Int64DivMod1E9(uint64\u0026 \u0027value\u0027)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool NumberToInt64(valuetype System.Number/NumberBuffer\u0026 number, int64\u0026 \u0027value\u0027)",
            "size": 110,
            "children": null
          },
          {
            "type": "method",
            "name": "bool NumberToUInt64(valuetype System.Number/NumberBuffer\u0026 number, uint64\u0026 \u0027value\u0027)",
            "size": 101,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ParseInt64(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E \u0027value\u0027, valuetype System.Globalization.NumberStyles styles, class System.Globalization.NumberFormatInfo info)",
            "size": 122,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ParseUInt64(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E \u0027value\u0027, valuetype System.Globalization.NumberStyles styles, class System.Globalization.NumberFormatInfo info)",
            "size": 119,
            "children": null
          },
          {
            "type": "method",
            "name": "bool ParseNumber(char*\u0026 str, char* strEnd, valuetype System.Globalization.NumberStyles styles, valuetype System.Number/NumberBuffer\u0026 number, class System.Globalization.NumberFormatInfo info, bool parseDecimal)",
            "size": 1135,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryParseInt64IntegerStyle(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E \u0027value\u0027, valuetype System.Globalization.NumberStyles styles, class System.Globalization.NumberFormatInfo info, [out] int64\u0026 result, bool\u0026 failureIsOverflow)",
            "size": 726,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryParseUInt64IntegerStyle(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E \u0027value\u0027, valuetype System.Globalization.NumberStyles styles, class System.Globalization.NumberFormatInfo info, [out] uint64\u0026 result, bool\u0026 failureIsOverflow)",
            "size": 724,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryParseUInt64HexNumberStyle(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E \u0027value\u0027, valuetype System.Globalization.NumberStyles styles, class System.Globalization.NumberFormatInfo info, [out] uint64\u0026 result, bool\u0026 failureIsOverflow)",
            "size": 468,
            "children": null
          },
          {
            "type": "method",
            "name": "void StringToNumber(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E \u0027value\u0027, valuetype System.Globalization.NumberStyles styles, valuetype System.Number/NumberBuffer\u0026 number, class System.Globalization.NumberFormatInfo info, bool parseDecimal)",
            "size": 80,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TrailingZeros(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E \u0027value\u0027, int32 index)",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "static char* MatchChars(char* p, char* pEnd, string \u0027value\u0027)",
            "size": 71,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsWhite(int32 ch)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDigit(int32 ch)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowOverflowOrFormatException(bool overflow, string overflowResourceKey)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "uint32 DigitsToInt(char* p, int32 count)",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 Mul32x32To64(uint32 a, uint32 b)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 Mul64Lossy(uint64 a, uint64 b, int32\u0026 pexp)",
            "size": 73,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 abs(int32 \u0027value\u0027)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "float64 NumberToDouble(valuetype System.Number/NumberBuffer\u0026 number)",
            "size": 687,
            "children": null
          },
          {
            "type": "method",
            "name": "void DoubleToNumber(float64 \u0027value\u0027, int32 precision, valuetype System.Number/NumberBuffer\u0026 number)",
            "size": 524,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 514,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.ObjectDisposedException extends System.InvalidOperationException",
        "size": 154,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string objectName)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string objectName, string message)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Message()",
            "size": 55,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_ObjectName()",
            "size": 21,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.ObsoleteAttribute extends System.Attribute",
        "size": 63,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, bool \u0027error\u0027)",
            "size": 21,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.OperationCanceledException extends System.SystemException",
        "size": 81,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.Threading.CancellationToken get_CancellationToken()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_CancellationToken(valuetype System.Threading.CancellationToken \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, valuetype System.Threading.CancellationToken token)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.OverflowException extends System.ArithmeticException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.ParamArrayAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.ParamsArray extends System.ValueType",
        "size": 251,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(object arg0)",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(object arg0, object arg1)",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(object arg0, object arg1, object arg2)",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(object[] args)",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Length()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "object get_Item(int32 index)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "object GetAtSlow(int32 index)",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 34,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.PlatformNotSupportedException extends System.NotSupportedException",
        "size": 32,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.Random extends System.Object",
        "size": 666,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 Seed)",
            "size": 263,
            "children": null
          },
          {
            "type": "method",
            "name": "float64 Sample()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 InternalSample()",
            "size": 103,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GenerateSeed()",
            "size": 68,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GenerateGlobalSeed()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Next()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "float64 GetSampleForLargeRange()",
            "size": 49,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Next(int32 minValue, int32 maxValue)",
            "size": 78,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Next(int32 maxValue)",
            "size": 41,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 16,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.RankException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.ReadOnlySpan\u00601\u003CT\u003E extends System.ValueType",
        "size": 448,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(!T[] \u0027array\u0027)",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(void* pointer, int32 length)",
            "size": 56,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(!T\u0026 ptr, int32 length)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !T\u0026 modreq(System.Runtime.InteropServices.InAttribute) get_Item(int32 index)",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "void CopyTo(valuetype System.Span\u00601\u003C!T\u003E destination)",
            "size": 62,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryCopyTo(valuetype System.Span\u00601\u003C!T\u003E destination)",
            "size": 61,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 99,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.ReadOnlySpan\u00601\u003C!T\u003E Slice(int32 start)",
            "size": 48,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Length()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsEmpty()",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.ReadOnlySpan\u00601\u003C!T\u003E op_Implicit(!T[] \u0027array\u0027)",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.ResolveEventArgs extends System.EventArgs",
        "size": 35,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string name)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string name, class System.Reflection.Assembly requestingAssembly)",
            "size": 21,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.ResolveEventHandler extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.SByte extends System.ValueType implements System.IComparable, System.IConvertible, System.IFormattable, class System.IComparable\u00601\u003Cint8\u003E, class System.IEquatable\u00601\u003Cint8\u003E, System.ISpanFormattable",
        "size": 255,
        "children": [
          {
            "type": "method",
            "name": "int32 CompareTo(object obj)",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(int8 \u0027value\u0027)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(int8 obj)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format, class System.IFormatProvider provider)",
            "size": 75,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, [opt] valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, [opt] class System.IFormatProvider provider)",
            "size": 73,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.SerializableAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Single extends System.ValueType implements System.IComparable, System.IConvertible, System.IFormattable, class System.IComparable\u00601\u003Cfloat32\u003E, class System.IEquatable\u00601\u003Cfloat32\u003E, System.ISpanFormattable",
        "size": 306,
        "children": [
          {
            "type": "method",
            "name": "bool IsNaN(float32 f)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(object \u0027value\u0027)",
            "size": 75,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(float32 \u0027value\u0027)",
            "size": 44,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(float32 obj)",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format, class System.IFormatProvider provider)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, [opt] valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, [opt] class System.IFormatProvider provider)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Span\u00601\u003CT\u003E extends System.ValueType",
        "size": 681,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(!T[] \u0027array\u0027)",
            "size": 87,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(!T[] \u0027array\u0027, int32 start, int32 length)",
            "size": 121,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(void* pointer, int32 length)",
            "size": 56,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(!T\u0026 ptr, int32 length)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !T\u0026 get_Item(int32 index)",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "void CopyTo(valuetype System.Span\u00601\u003C!T\u003E destination)",
            "size": 62,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryCopyTo(valuetype System.Span\u00601\u003C!T\u003E destination)",
            "size": 61,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.ReadOnlySpan\u00601\u003C!T\u003E op_Implicit(valuetype System.Span\u00601\u003C!T\u003E span)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 99,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Span\u00601\u003C!T\u003E Slice(int32 start)",
            "size": 48,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Span\u00601\u003C!T\u003E Slice(int32 start, int32 length)",
            "size": 52,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Length()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Span\u00601\u003C!T\u003E op_Implicit(!T[] \u0027array\u0027)",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.SpanDebugView\u00601\u003CT\u003E extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.SpanHelpers extends System.Object",
        "size": 1986,
        "children": [
          {
            "type": "method",
            "name": "bool SequenceEqual(uint8\u0026 first, uint8\u0026 second, uint64 length)",
            "size": 192,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 SequenceCompareTo(char\u0026 first, int32 firstLength, char\u0026 second, int32 secondLength)",
            "size": 376,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOf(char\u0026 searchSpace, char \u0027value\u0027, int32 length)",
            "size": 303,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 LastIndexOf(char\u0026 searchSpace, char \u0027value\u0027, int32 length)",
            "size": 320,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 LocateFirstFoundChar(valuetype System.Numerics.Vector\u00601\u003Cuint16\u003E match)",
            "size": 49,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 LocateFirstFoundChar(uint64 match)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 LocateLastFoundChar(valuetype System.Numerics.Vector\u00601\u003Cuint16\u003E match)",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 LocateLastFoundChar(uint64 match)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool SequenceEqual\u003C(class System.IEquatable\u00601\u003C!!T\u003E) T\u003E(!!T\u0026 first, !!T\u0026 second, int32 length)",
            "size": 653,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.StackOverflowException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.String extends System.Object implements System.IComparable, System.Collections.IEnumerable, class System.Collections.Generic.IEnumerable\u00601\u003Cchar\u003E, class System.IComparable\u00601\u003Cstring\u003E, class System.IEquatable\u00601\u003Cstring\u003E, System.IConvertible",
        "size": 7148,
        "children": [
          {
            "type": "method",
            "name": "bool EqualsHelper(string strA, string strB)",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareOrdinalHelper(string strA, int32 indexA, int32 countA, string strB, int32 indexB, int32 countB)",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareOrdinalHelper(string strA, string strB)",
            "size": 298,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Compare(string strA, string strB, bool ignoreCase)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Compare(string strA, string strB, valuetype System.StringComparison comparisonType)",
            "size": 206,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Compare(string strA, int32 indexA, string strB, int32 indexB, int32 length, valuetype System.StringComparison comparisonType)",
            "size": 339,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareOrdinal(string strA, string strB)",
            "size": 52,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareOrdinal(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E strA, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E strB)",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(object \u0027value\u0027)",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(string strB)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "bool EndsWith(string \u0027value\u0027, valuetype System.StringComparison comparisonType)",
            "size": 265,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(string \u0027value\u0027)",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(string a, string b)",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(string a, string b)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Inequality(string a, string b)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "bool StartsWith(string \u0027value\u0027, valuetype System.StringComparison comparisonType)",
            "size": 279,
            "children": null
          },
          {
            "type": "method",
            "name": "void CheckStringComparison(valuetype System.StringComparison comparisonType)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "void FillStringChecked(string dest, int32 destPos, string src)",
            "size": 65,
            "children": null
          },
          {
            "type": "method",
            "name": "string Concat(string str0, string str1)",
            "size": 71,
            "children": null
          },
          {
            "type": "method",
            "name": "string Concat(string str0, string str1, string str2)",
            "size": 115,
            "children": null
          },
          {
            "type": "method",
            "name": "string Concat(string str0, string str1, string str2, string str3)",
            "size": 169,
            "children": null
          },
          {
            "type": "method",
            "name": "string Concat(string[] values)",
            "size": 211,
            "children": null
          },
          {
            "type": "method",
            "name": "string Format(string format, object arg0)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "string Format(string format, object arg0, object arg1)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "string Format(string format, object arg0, object arg1, object arg2)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "string Format(string format, object[] args)",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "string Format(class System.IFormatProvider provider, string format, object arg0)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "string Format(class System.IFormatProvider provider, string format, object arg0, object arg1)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "string Format(class System.IFormatProvider provider, string format, object arg0, object arg1, object arg2)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "string Format(class System.IFormatProvider provider, string format, object[] args)",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatHelper(class System.IFormatProvider provider, string format, valuetype System.ParamsArray args)",
            "size": 49,
            "children": null
          },
          {
            "type": "method",
            "name": "string Join(string separator, string[] \u0027value\u0027, int32 startIndex, int32 count)",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "string JoinCore(char* separator, int32 separatorLength, string[] \u0027value\u0027, int32 startIndex, int32 count)",
            "size": 344,
            "children": null
          },
          {
            "type": "method",
            "name": "string Replace(char oldChar, char newChar)",
            "size": 179,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] Split(char[] separator)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] SplitInternal(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E separators, int32 count, valuetype System.StringSplitOptions options)",
            "size": 205,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] SplitKeepEmptyEntries(valuetype System.ReadOnlySpan\u00601\u003Cint32\u003E sepList, valuetype System.ReadOnlySpan\u00601\u003Cint32\u003E lengthList, int32 defaultLength, int32 count)",
            "size": 166,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] SplitOmitEmptyEntries(valuetype System.ReadOnlySpan\u00601\u003Cint32\u003E sepList, valuetype System.ReadOnlySpan\u00601\u003Cint32\u003E lengthList, int32 defaultLength, int32 count)",
            "size": 274,
            "children": null
          },
          {
            "type": "method",
            "name": "void MakeSeparatorList(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E separators, valuetype System.Collections.Generic.ValueListBuilder\u00601\u003Cint32\u003E\u0026 sepListBuilder)",
            "size": 383,
            "children": null
          },
          {
            "type": "method",
            "name": "string Substring(int32 startIndex)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "string Substring(int32 startIndex, int32 length)",
            "size": 124,
            "children": null
          },
          {
            "type": "method",
            "name": "string InternalSubString(int32 startIndex, int32 length)",
            "size": 44,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToLower(class System.Globalization.CultureInfo culture)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToLowerInvariant()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "string Trim()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string TrimEnd(char[] trimChars)",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "string TrimWhiteSpaceHelper(valuetype System.String/TrimType trimType)",
            "size": 91,
            "children": null
          },
          {
            "type": "method",
            "name": "string TrimHelper(char* trimChars, int32 trimCharsLength, valuetype System.String/TrimType trimType)",
            "size": 144,
            "children": null
          },
          {
            "type": "method",
            "name": "string CreateTrimmedString(int32 start, int32 end)",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOf(char \u0027value\u0027)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOf(char \u0027value\u0027, int32 startIndex)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOf(char \u0027value\u0027, int32 startIndex, int32 count)",
            "size": 82,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOfAny(char[] anyOf)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOfAny(char[] anyOf, int32 startIndex, int32 count)",
            "size": 147,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOfAny(char value1, char value2, int32 startIndex, int32 count)",
            "size": 88,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOfAny(char value1, char value2, char value3, int32 startIndex, int32 count)",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOfCharArray(char[] anyOf, int32 startIndex, int32 count)",
            "size": 110,
            "children": null
          },
          {
            "type": "method",
            "name": "void InitializeProbabilisticMap(uint32* charMap, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E anyOf)",
            "size": 69,
            "children": null
          },
          {
            "type": "method",
            "name": "bool ArrayContains(char searchChar, char[] anyOf)",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsCharBitSet(uint32* charMap, uint8 \u0027value\u0027)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetCharBit(uint32* charMap, uint8 \u0027value\u0027)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 LastIndexOf(char \u0027value\u0027)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 LastIndexOf(char \u0027value\u0027, int32 startIndex)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 LastIndexOf(char \u0027value\u0027, int32 startIndex, int32 count)",
            "size": 93,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 LastIndexOfAny(char[] anyOf)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 LastIndexOfAny(char[] anyOf, int32 startIndex, int32 count)",
            "size": 111,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 LastIndexOfCharArray(char[] anyOf, int32 startIndex, int32 count)",
            "size": 110,
            "children": null
          },
          {
            "type": "method",
            "name": "string Ctor(char[] \u0027value\u0027)",
            "size": 69,
            "children": null
          },
          {
            "type": "method",
            "name": "string Ctor(char* ptr, int32 startIndex, int32 length)",
            "size": 123,
            "children": null
          },
          {
            "type": "method",
            "name": "string Ctor(char c, int32 count)",
            "size": 114,
            "children": null
          },
          {
            "type": "method",
            "name": "string Ctor(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E \u0027value\u0027)",
            "size": 66,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E op_Implicit(string \u0027value\u0027)",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "void CopyTo(int32 sourceIndex, char[] destination, int32 destinationIndex, int32 count)",
            "size": 171,
            "children": null
          },
          {
            "type": "method",
            "name": "instance char[] ToCharArray()",
            "size": 64,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsNullOrEmpty(string \u0027value\u0027)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "instance char\u0026 GetRawStringData()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string CreateStringFromEncoding(uint8* bytes, int32 byteLength, class System.Text.Encoding encoding)",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "string CreateFromChar(char c)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void wstrcpy(char* dmem, char* smem, int32 charCount)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Collections.Generic.IEnumerator\u00601\u003Cchar\u003E \u0027System.Collections.Generic.IEnumerable\u003CSystem.Char\u003E.GetEnumerator\u0027()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 wcslen(char* ptr)",
            "size": 140,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Length()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOfUnchecked(string \u0027value\u0027, int32 startIndex, int32 count)",
            "size": 143,
            "children": null
          },
          {
            "type": "method",
            "name": "void memset(uint8* dest, int32 val, int32 len)",
            "size": 158,
            "children": null
          },
          {
            "type": "method",
            "name": "void memcpy(uint8* dest, uint8* src, int32 size)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void bzero(uint8* dest, int32 len)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void bzero_aligned_1(uint8* dest, int32 len)",
            "size": 4,
            "children": null
          },
          {
            "type": "method",
            "name": "void bzero_aligned_2(uint8* dest, int32 len)",
            "size": 4,
            "children": null
          },
          {
            "type": "method",
            "name": "void bzero_aligned_4(uint8* dest, int32 len)",
            "size": 4,
            "children": null
          },
          {
            "type": "method",
            "name": "void bzero_aligned_8(uint8* dest, int32 len)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "void memcpy_aligned_1(uint8* dest, uint8* src, int32 size)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "void memcpy_aligned_2(uint8* dest, uint8* src, int32 size)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "void memcpy_aligned_4(uint8* dest, uint8* src, int32 size)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "void memcpy_aligned_8(uint8* dest, uint8* src, int32 size)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "string CreateString(char* \u0027value\u0027, int32 startIndex, int32 length)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "string CreateString(char[] val)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string CreateString(char c, int32 count)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string CreateString(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E \u0027value\u0027)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "char get_Chars(int32 index)",
            "size": 30,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.StringComparison extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.StringSplitOptions extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.SystemException extends System.Exception",
        "size": 71,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Exception innerException)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.STAThreadAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.ThreadStaticAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.TimeSpan extends System.ValueType implements System.IComparable, class System.IComparable\u00601\u003Cvaluetype System.TimeSpan\u003E, class System.IEquatable\u00601\u003Cvaluetype System.TimeSpan\u003E, System.IFormattable, System.ISpanFormattable",
        "size": 596,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(int64 ticks)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 hours, int32 minutes, int32 seconds)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 get_Ticks()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Hours()",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Minutes()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TimeSpan Add(valuetype System.TimeSpan ts)",
            "size": 67,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(object \u0027value\u0027)",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(valuetype System.TimeSpan \u0027value\u0027)",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object \u0027value\u0027)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(valuetype System.TimeSpan obj)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TimeSpan Negate()",
            "size": 45,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TimeSpan FromTicks(int64 \u0027value\u0027)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 TimeToTicks(int32 hour, int32 minute, int32 second)",
            "size": 65,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format, class System.IFormatProvider formatProvider)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, [opt] valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, [opt] class System.IFormatProvider formatProvider)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TimeSpan op_Addition(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Inequality(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_LessThan(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_GreaterThan(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_GreaterThanOrEqual(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 51,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.TimeZoneNotFoundException extends System.Exception",
        "size": 16,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "interface private abstract auto ansi System.ITupleInternal",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Tuple extends System.Object",
        "size": 22,
        "children": [
          {
            "type": "method",
            "name": "int32 CombineHashCodes(int32 h1, int32 h2)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CombineHashCodes(int32 h1, int32 h2, int32 h3)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Tuple\u00603\u003CT1,T2,T3\u003E extends System.Object implements System.Collections.IStructuralEquatable, System.Collections.IStructuralComparable, System.IComparable, System.ITupleInternal",
        "size": 515,
        "children": [
          {
            "type": "method",
            "name": "instance !T1 get_Item1()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !T2 get_Item2()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !T3 get_Item3()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(!T1 item1, !T2 item2, !T3 item3)",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer)",
            "size": 108,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 System.IComparable.CompareTo(object obj)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer)",
            "size": 146,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer)",
            "size": 57,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "string System.ITupleInternal.ToString(class System.Text.StringBuilder sb)",
            "size": 94,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Type extends System.Reflection.MemberInfo",
        "size": 2667,
        "children": [
          {
            "type": "method",
            "name": "string GetEnumName(object \u0027value\u0027)",
            "size": 105,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] GetEnumNames()",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Array GetEnumRawConstantValues()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void GetEnumData([out] string[]\u0026 enumNames, [out] class System.Array\u0026 enumValues)",
            "size": 189,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 BinarySearch(class System.Array \u0027array\u0027, object \u0027value\u0027)",
            "size": 59,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsIntegerType(class System.Type t)",
            "size": 187,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_ContainsGenericParameters()",
            "size": 75,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetRootElementType()",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsSubclassOf(class System.Type c)",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsAssignableFrom(class System.Type c)",
            "size": 118,
            "children": null
          },
          {
            "type": "method",
            "name": "bool ImplementInterface(class System.Type ifaceType)",
            "size": 81,
            "children": null
          },
          {
            "type": "method",
            "name": "bool FilterAttributeImpl(class System.Reflection.MemberInfo m, object filterCriteria)",
            "size": 339,
            "children": null
          },
          {
            "type": "method",
            "name": "bool FilterNameImpl(class System.Reflection.MemberInfo m, object filterCriteria)",
            "size": 133,
            "children": null
          },
          {
            "type": "method",
            "name": "bool FilterNameIgnoreCaseImpl(class System.Reflection.MemberInfo m, object filterCriteria)",
            "size": 148,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MemberTypes get_MemberType()",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsNested()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_DeclaringType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodBase get_DeclaringMethod()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ReflectedType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsArray()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsByRef()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsPointer()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsConstructedGenericType()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsGenericParameter()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsGenericMethodParameter()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsGenericType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsGenericTypeDefinition()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsSZArray()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsVariableBoundArray()",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_HasElementType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetArrayRank()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetGenericTypeDefinition()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] get_GenericTypeArguments()",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetGenericArguments()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_GenericParameterPosition()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.GenericParameterAttributes get_GenericParameterAttributes()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetGenericParameterConstraints()",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.TypeAttributes get_Attributes()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsAbstract()",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsSealed()",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsNotPublic()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsPublic()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsExplicitLayout()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsEnum()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsPrimitive()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsValueType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsValueTypeImpl()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsSignatureType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetMethod(string name)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 83,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.PropertyInfo GetProperty(string name, class System.Type returnType)",
            "size": 48,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.PropertyInfo GetProperty(string name, class System.Type returnType, class System.Type[] types)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.PropertyInfo GetProperty(string name, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 45,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeTypeHandle get_TypeHandle()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode(class System.Type \u0027type\u0027)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCodeImpl()",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsEquivalentTo(class System.Type other)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetEnumUnderlyingType()",
            "size": 67,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeArrayType()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeArrayType(int32 rank)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeByRefType()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeGenericType(class System.Type[] typeArguments)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakePointerType()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeGenericSignatureType(class System.Type genericTypeDefinition, class System.Type[] typeArguments)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object o)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(class System.Type o)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Binder get_DefaultBinder()",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetTypeFromHandle(valuetype System.RuntimeTypeHandle handle)",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatTypeName()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatTypeName(bool serialization)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsInterface()",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetType(string typeName, bool throwOnError)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(class System.Type left, class System.Type right)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Inequality(class System.Type left, class System.Type right)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsRuntimeImplemented()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 79,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.TypeCode extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.TypeInitializationException extends System.SystemException",
        "size": 96,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string fullTypeName, class System.Exception innerException)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string fullTypeName, string message, class System.Exception innerException)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 26,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.UInt16 extends System.ValueType implements System.IComparable, System.IConvertible, System.IFormattable, class System.IComparable\u00601\u003Cuint16\u003E, class System.IEquatable\u00601\u003Cuint16\u003E, System.ISpanFormattable",
        "size": 130,
        "children": [
          {
            "type": "method",
            "name": "int32 CompareTo(object \u0027value\u0027)",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(uint16 \u0027value\u0027)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(uint16 obj)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format, class System.IFormatProvider provider)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, [opt] valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, [opt] class System.IFormatProvider provider)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.UInt32 extends System.ValueType implements System.IComparable, System.IConvertible, System.IFormattable, class System.IComparable\u00601\u003Cuint32\u003E, class System.IEquatable\u00601\u003Cuint32\u003E, System.ISpanFormattable",
        "size": 155,
        "children": [
          {
            "type": "method",
            "name": "int32 CompareTo(object \u0027value\u0027)",
            "size": 47,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(uint32 \u0027value\u0027)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(uint32 obj)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format, class System.IFormatProvider provider)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, [opt] valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, [opt] class System.IFormatProvider provider)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.UInt64 extends System.ValueType implements System.IComparable, System.IConvertible, System.IFormattable, class System.IComparable\u00601\u003Cuint64\u003E, class System.IEquatable\u00601\u003Cuint64\u003E, System.ISpanFormattable",
        "size": 193,
        "children": [
          {
            "type": "method",
            "name": "int32 CompareTo(object \u0027value\u0027)",
            "size": 47,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(uint64 \u0027value\u0027)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(uint64 obj)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format, class System.IFormatProvider provider)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, [opt] valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, [opt] class System.IFormatProvider provider)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider)",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 3,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.UnauthorizedAccessException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.UnhandledExceptionEventArgs extends System.EventArgs",
        "size": 21,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(object exception, bool isTerminating)",
            "size": 21,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed System.UnhandledExceptionEventHandler extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.ValueTuple extends System.ValueType implements class System.IEquatable\u00601\u003Cvaluetype System.ValueTuple\u003E, System.Collections.IStructuralEquatable, System.Collections.IStructuralComparable, System.IComparable, class System.IComparable\u00601\u003Cvaluetype System.ValueTuple\u003E",
        "size": 166,
        "children": [
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(valuetype System.ValueTuple other)",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 System.IComparable.CompareTo(object other)",
            "size": 57,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(valuetype System.ValueTuple other)",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer)",
            "size": 57,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer)",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CombineHashCodes(int32 h1, int32 h2)",
            "size": 18,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.ValueTuple\u00602\u003CT1,T2\u003E extends System.ValueType implements class System.IEquatable\u00601\u003Cvaluetype System.ValueTuple\u00602\u003C!T1,!T2\u003E\u003E, System.Collections.IStructuralEquatable, System.Collections.IStructuralComparable, System.IComparable, class System.IComparable\u00601\u003Cvaluetype System.ValueTuple\u00602\u003C!T1,!T2\u003E\u003E",
        "size": 720,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(!T1 item1, !T2 item2)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(valuetype System.ValueTuple\u00602\u003C!T1,!T2\u003E other)",
            "size": 49,
            "children": null
          },
          {
            "type": "method",
            "name": "bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer)",
            "size": 81,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 System.IComparable.CompareTo(object other)",
            "size": 68,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(valuetype System.ValueTuple\u00602\u003C!T1,!T2\u003E other)",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer)",
            "size": 125,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 112,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCodeCore(class System.Collections.IEqualityComparer comparer)",
            "size": 40,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 148,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Version extends System.Object implements System.IComparable, class System.IComparable\u00601\u003Cclass System.Version\u003E, class System.IEquatable\u00601\u003Cclass System.Version\u003E, System.ISpanFormattable",
        "size": 1044,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(int32 major, int32 minor, int32 build, int32 revision)",
            "size": 131,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(object version)",
            "size": 40,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(class System.Version \u0027value\u0027)",
            "size": 147,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(class System.Version obj)",
            "size": 68,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(int32 fieldCount)",
            "size": 41,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, int32 fieldCount, [out] int32\u0026 charsWritten)",
            "size": 103,
            "children": null
          },
          {
            "type": "method",
            "name": "bool System.ISpanFormattable.TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.IFormatProvider provider)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_DefaultFormatFieldCount()",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder ToCachedStringBuilder(int32 fieldCount)",
            "size": 318,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(class System.Version v1, class System.Version v2)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Inequality(class System.Version v1, class System.Version v2)",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Void extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.NotImplemented extends System.Object",
        "size": 6,
        "children": [
          {
            "type": "method",
            "name": "class System.Exception get_ByDesign()",
            "size": 6,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.ConsoleColor extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.ThrowHelper extends System.Object",
        "size": 1365,
        "children": [
          {
            "type": "method",
            "name": "void ThrowArgumentNullException(valuetype System.ExceptionArgument argument)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception CreateArgumentNullException(valuetype System.ExceptionArgument argument)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowArrayTypeMismatchException()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception CreateArrayTypeMismatchException()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowArgumentException_DestinationTooShort()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception CreateArgumentException_DestinationTooShort()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowIndexOutOfRangeException()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception CreateIndexOutOfRangeException()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowArgumentOutOfRangeException()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception CreateArgumentOutOfRangeException()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowArgumentOutOfRangeException(valuetype System.ExceptionArgument argument)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception CreateArgumentOutOfRangeException(valuetype System.ExceptionArgument argument)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowArgumentException(valuetype System.ExceptionResource resource)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowArgumentException(valuetype System.ExceptionResource resource, valuetype System.ExceptionArgument argument)",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowArgumentOutOfRangeException(valuetype System.ExceptionArgument argument, valuetype System.ExceptionResource resource)",
            "size": 47,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowNotSupportedException(valuetype System.ExceptionResource resource)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowInvalidOperationException_InvalidOperation_EnumFailedVersion()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowInvalidOperationException_InvalidOperation_EnumOpCantHappen()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowInvalidOperationException_InvalidOperation_NoValue()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.ArgumentOutOfRangeException GetArgumentOutOfRangeException(valuetype System.ExceptionArgument argument, string resource)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowArgumentOutOfRange_IndexException()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowIndexArgumentOutOfRange_NeedNonNegNumException()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.ArgumentException GetAddingDuplicateWithKeyArgumentException(object key)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowAddingDuplicateWithKeyArgumentException(object key)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Collections.Generic.KeyNotFoundException GetKeyNotFoundException(object key)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowKeyNotFoundException(object key)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowInvalidTypeWithPointersNotSupported(class System.Type targetType)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowInvalidOperationException_ConcurrentOperationsNotSupported()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.InvalidOperationException GetInvalidOperationException(string str)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetArgumentName(valuetype System.ExceptionArgument argument)",
            "size": 333,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetResourceName(valuetype System.ExceptionResource resource)",
            "size": 663,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.AppDomainUnloadedException extends System.SystemException",
        "size": 32,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.CannotUnloadAppDomainException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.MissingFieldException extends System.MissingMemberException",
        "size": 135,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Message()",
            "size": 84,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.MissingMemberException extends System.MemberAccessException",
        "size": 207,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 75,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Message()",
            "size": 84,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatSignature(uint8[] signature)",
            "size": 6,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.OutOfMemoryException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Array extends System.Object implements System.Collections.IEnumerable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable",
        "size": 2411,
        "children": [
          {
            "type": "method",
            "name": "void Resize\u003CT\u003E(!!T[]\u0026 \u0027array\u0027, int32 newSize)",
            "size": 73,
            "children": null
          },
          {
            "type": "method",
            "name": "void CopyTo(class System.Array \u0027array\u0027, int32 index)",
            "size": 45,
            "children": null
          },
          {
            "type": "method",
            "name": "object Clone()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer)",
            "size": 96,
            "children": null
          },
          {
            "type": "method",
            "name": "bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer)",
            "size": 84,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CombineHashCodes(int32 h1, int32 h2)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer)",
            "size": 74,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 BinarySearch\u003CT\u003E(!!T[] \u0027array\u0027, !!T \u0027value\u0027)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 BinarySearch\u003CT\u003E(!!T[] \u0027array\u0027, int32 index, int32 length, !!T \u0027value\u0027, class System.Collections.Generic.IComparer\u00601\u003C!!T\u003E comparer)",
            "size": 85,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOf\u003CT\u003E(!!T[] \u0027array\u0027, !!T \u0027value\u0027, int32 startIndex, int32 count)",
            "size": 78,
            "children": null
          },
          {
            "type": "method",
            "name": "void Reverse\u003CT\u003E(!!T[] \u0027array\u0027, int32 index, int32 length)",
            "size": 157,
            "children": null
          },
          {
            "type": "method",
            "name": "void Sort\u003CT\u003E(!!T[] \u0027array\u0027, int32 index, int32 length, class System.Collections.Generic.IComparer\u00601\u003C!!T\u003E comparer)",
            "size": 87,
            "children": null
          },
          {
            "type": "method",
            "name": "void Sort\u003CTKey,TValue\u003E(!!TKey[] keys, !!TValue[] items, class System.Collections.Generic.IComparer\u00601\u003C!!TKey\u003E comparer)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "void Sort\u003CTKey,TValue\u003E(!!TKey[] keys, !!TValue[] items, int32 index, int32 length, class System.Collections.Generic.IComparer\u00601\u003C!!TKey\u003E comparer)",
            "size": 114,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 InternalArray__ICollection_get_Count()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool InternalArray__ICollection_get_IsReadOnly()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "instance uint8\u0026 GetRawSzArrayData()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Collections.Generic.IEnumerator\u00601\u003C!!T\u003E InternalArray__IEnumerable_GetEnumerator\u003CT\u003E()",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "void InternalArray__ICollection_Clear()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void InternalArray__ICollection_Add\u003CT\u003E(!!T item)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "bool InternalArray__ICollection_Remove\u003CT\u003E(!!T item)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "bool InternalArray__ICollection_Contains\u003CT\u003E(!!T item)",
            "size": 91,
            "children": null
          },
          {
            "type": "method",
            "name": "void InternalArray__ICollection_CopyTo\u003CT\u003E(!!T[] \u0027array\u0027, int32 arrayIndex)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !!T InternalArray__IReadOnlyList_get_Item\u003CT\u003E(int32 index)",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 InternalArray__IReadOnlyCollection_get_Count()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void InternalArray__Insert\u003CT\u003E(int32 index, !!T item)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void InternalArray__RemoveAt(int32 index)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 InternalArray__IndexOf\u003CT\u003E(!!T item)",
            "size": 115,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !!T InternalArray__get_Item\u003CT\u003E(int32 index)",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "void InternalArray__set_Item\u003CT\u003E(int32 index, !!T item)",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Length()",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Rank()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetUpperBound(int32 dimension)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "object GetValue(int32 index)",
            "size": 92,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Array CreateInstance(class System.Type elementType, int32 length)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Array CreateInstance(class System.Type elementType, int32[] lengths)",
            "size": 147,
            "children": null
          },
          {
            "type": "method",
            "name": "void Clear(class System.Array \u0027array\u0027, int32 index, int32 length)",
            "size": 88,
            "children": null
          },
          {
            "type": "method",
            "name": "void Copy(class System.Array sourceArray, class System.Array destinationArray, int32 length)",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "void Copy(class System.Array sourceArray, int32 sourceIndex, class System.Array destinationArray, int32 destinationIndex, int32 length)",
            "size": 416,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.ArrayTypeMismatchException CreateArrayTypeMismatchException()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "bool CanAssignArrayElement(class System.Type source, class System.Type target)",
            "size": 71,
            "children": null
          },
          {
            "type": "method",
            "name": "static !!T[] Empty\u003CT\u003E()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOfImpl\u003CT\u003E(!!T[] \u0027array\u0027, !!T \u0027value\u0027, int32 startIndex, int32 count)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "static !!T UnsafeLoad\u003CT\u003E(!!T[] \u0027array\u0027, int32 index)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "static !!R UnsafeMov\u003CS,R\u003E(!!S \u0027instance\u0027)",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.ByReference\u00601\u003CT\u003E extends System.ValueType",
        "size": 12,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(!T\u0026 \u0027value\u0027)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !T\u0026 get_Value()",
            "size": 6,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.MonoTODOAttribute extends System.Attribute",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string comment)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.AppContextSwitches extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.LocalDataStoreHolder extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.LocalDataStoreMgr extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Activator extends System.Object",
        "size": 147,
        "children": [
          {
            "type": "method",
            "name": "object CreateInstance(class System.Type \u0027type\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "object CreateInstance(class System.Type \u0027type\u0027, bool nonPublic)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "object CreateInstance(class System.Type \u0027type\u0027, bool nonPublic, bool wrapExceptions)",
            "size": 72,
            "children": null
          },
          {
            "type": "method",
            "name": "static !!T CreateInstance\u003CT\u003E()",
            "size": 58,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Attribute extends System.Object",
        "size": 700,
        "children": [
          {
            "type": "method",
            "name": "class System.Attribute[] InternalGetCustomAttributes(class System.Reflection.PropertyInfo element, class System.Type \u0027type\u0027, bool inherit)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Attribute[] InternalGetCustomAttributes(class System.Reflection.EventInfo element, class System.Type \u0027type\u0027, bool inherit)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "bool InternalIsDefined(class System.Reflection.PropertyInfo element, class System.Type attributeType, bool inherit)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "bool InternalIsDefined(class System.Reflection.EventInfo element, class System.Type attributeType, bool inherit)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type \u0027type\u0027)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type \u0027type\u0027, bool inherit)",
            "size": 150,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit)",
            "size": 145,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 110,
            "children": null
          },
          {
            "type": "method",
            "name": "bool AreFieldValuesEqual(object thisValue, object thatValue)",
            "size": 135,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 89,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Buffer extends System.Object",
        "size": 1065,
        "children": [
          {
            "type": "method",
            "name": "int32 IndexOfByte(uint8* src, uint8 \u0027value\u0027, int32 index, int32 count)",
            "size": 184,
            "children": null
          },
          {
            "type": "method",
            "name": "void ZeroMemory(uint8* src, int64 len)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 ByteLength(class System.Array \u0027array\u0027)",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "void BlockCopy(class System.Array src, int32 srcOffset, class System.Array dst, int32 dstOffset, int32 count)",
            "size": 138,
            "children": null
          },
          {
            "type": "method",
            "name": "void MemoryCopy(void* source, void* destination, int64 destinationSizeInBytes, int64 sourceBytesToCopy)",
            "size": 74,
            "children": null
          },
          {
            "type": "method",
            "name": "void memcpy4(uint8* dest, uint8* src, int32 size)",
            "size": 116,
            "children": null
          },
          {
            "type": "method",
            "name": "void memcpy2(uint8* dest, uint8* src, int32 size)",
            "size": 95,
            "children": null
          },
          {
            "type": "method",
            "name": "void memcpy1(uint8* dest, uint8* src, int32 size)",
            "size": 123,
            "children": null
          },
          {
            "type": "method",
            "name": "void Memcpy(uint8* dest, uint8* src, int32 len)",
            "size": 138,
            "children": null
          },
          {
            "type": "method",
            "name": "void Memmove(uint8* dest, uint8* src, uint32 len)",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "void Memmove\u003CT\u003E(!!T\u0026 destination, !!T\u0026 source, uint64 elementCount)",
            "size": 105,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable beforefieldinit System.DefaultBinder extends System.Reflection.Binder",
        "size": 2409,
        "children": [
          {
            "type": "method",
            "name": "class System.Reflection.PropertyInfo SelectProperty(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.PropertyInfo[] match, class System.Type returnType, class System.Type[] indexes, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 580,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.PropertyInfo ExactPropertyBinding(class System.Reflection.PropertyInfo[] match, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 146,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 FindMostSpecific(class System.Reflection.ParameterInfo[] p1, int32[] paramOrder1, class System.Type paramArrayType1, class System.Reflection.ParameterInfo[] p2, int32[] paramOrder2, class System.Type paramArrayType2, class System.Type[] types, object[] args)",
            "size": 249,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 FindMostSpecificType(class System.Type c1, class System.Type c2, class System.Type t)",
            "size": 224,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 FindMostSpecificMethod(class System.Reflection.MethodBase m1, int32[] paramOrder1, class System.Type paramArrayType1, class System.Reflection.MethodBase m2, int32[] paramOrder2, class System.Type paramArrayType2, class System.Type[] types, object[] args)",
            "size": 82,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 FindMostSpecificProperty(class System.Reflection.PropertyInfo cur1, class System.Reflection.PropertyInfo cur2)",
            "size": 59,
            "children": null
          },
          {
            "type": "method",
            "name": "bool CompareMethodSigAndName(class System.Reflection.MethodBase m1, class System.Reflection.MethodBase m2)",
            "size": 67,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHierarchyDepth(class System.Type t)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodBase FindMostDerivedNewSlotMeth(class System.Reflection.MethodBase[] match, int32 cMatches)",
            "size": 62,
            "children": null
          },
          {
            "type": "method",
            "name": "bool CanConvertPrimitive(class System.RuntimeType source, class System.RuntimeType target)",
            "size": 300,
            "children": null
          },
          {
            "type": "method",
            "name": "bool CompareMethodSig(class System.Reflection.MethodBase m1, class System.Reflection.MethodBase m2)",
            "size": 67,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodBase SelectMethod(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.MethodBase[] match, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 476,
            "children": null
          },
          {
            "type": "method",
            "name": "bool CanChangePrimitive(class System.Type source, class System.Type target)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool CanPrimitiveWiden(class System.Type source, class System.Type target)",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 24,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Enum extends System.ValueType implements System.IComparable, System.IFormattable, System.IConvertible",
        "size": 1332,
        "children": [
          {
            "type": "method",
            "name": "class System.Enum/ValuesAndNames GetCachedValuesAndNames(class System.RuntimeType enumType, bool getNames)",
            "size": 71,
            "children": null
          },
          {
            "type": "method",
            "name": "string InternalFormattedHexString(object \u0027value\u0027)",
            "size": 300,
            "children": null
          },
          {
            "type": "method",
            "name": "string InternalFormat(class System.RuntimeType eT, object \u0027value\u0027)",
            "size": 47,
            "children": null
          },
          {
            "type": "method",
            "name": "string InternalFlagsFormat(class System.RuntimeType eT, object \u0027value\u0027)",
            "size": 154,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(object \u0027value\u0027)",
            "size": 103,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetUnderlyingType(class System.Type enumType)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "static uint64[] InternalGetValues(class System.RuntimeType enumType)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetName(class System.Type enumType, object \u0027value\u0027)",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "static string[] InternalGetNames(class System.RuntimeType enumType)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "object GetValue()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(object target)",
            "size": 97,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format)",
            "size": 144,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 232,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 17,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable beforefieldinit System.Exception extends System.Object",
        "size": 938,
        "children": [
          {
            "type": "method",
            "name": "void Init()",
            "size": 44,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Exception innerException)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 329,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Message()",
            "size": 61,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetClassName()",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception get_InnerException()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_StackTrace()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetStackTrace(bool needFileInfo)",
            "size": 72,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetErrorCode(int32 hr)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(bool needFileLineInfo, bool needMessage)",
            "size": 155,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 40,
            "children": null
          },
          {
            "type": "method",
            "name": "string StripFileInfo(string stackTrace, bool isRemoteStackTrace)",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "void RestoreExceptionDispatchInfo(class System.Runtime.ExceptionServices.ExceptionDispatchInfo exceptionDispatchInfo)",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_HResult()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_HResult(int32 \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetMessageFromNativeResources(valuetype System.Exception/ExceptionMessageKind kind)",
            "size": 46,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.GC extends System.Object",
        "size": 79,
        "children": [
          {
            "type": "method",
            "name": "void GetMemoryInfo([out] uint32\u0026 highMemLoadThreshold, [out] uint64\u0026 totalPhysicalMem, [out] uint32\u0026 lastRecordedMemLoad, [out] native uint\u0026 lastRecordedHeapSize, [out] native uint\u0026 lastRecordedFragmentation)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "void SuppressFinalize(object obj)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void ReRegisterForFinalize(object obj)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.TypeNameFormatFlags extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.TypeNameKind extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi serializable beforefieldinit System.RuntimeType extends System.Reflection.TypeInfo",
        "size": 5204,
        "children": [
          {
            "type": "method",
            "name": "class System.RuntimeType GetType(string typeName, bool throwOnError, bool ignoreCase, bool reflectionOnly, valuetype System.Threading.StackCrawlMark\u0026 stackMark)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowIfTypeNeverValidGenericArgument(class System.RuntimeType \u0027type\u0027)",
            "size": 66,
            "children": null
          },
          {
            "type": "method",
            "name": "void SanityCheckGenericArguments(class System.RuntimeType[] genericArguments, class System.RuntimeType[] genericParamters)",
            "size": 101,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.BindingFlags FilterPreCalculate(bool isPublic, bool isInherited, bool isStatic)",
            "size": 48,
            "children": null
          },
          {
            "type": "method",
            "name": "void FilterHelper(valuetype System.Reflection.BindingFlags bindingFlags, string\u0026 name, bool allowPrefixLookup, [out] bool\u0026 prefixLookup, [out] bool\u0026 ignoreCase, [out] valuetype System.RuntimeType/MemberListType\u0026 listType)",
            "size": 94,
            "children": null
          },
          {
            "type": "method",
            "name": "void FilterHelper(valuetype System.Reflection.BindingFlags bindingFlags, string\u0026 name, [out] bool\u0026 ignoreCase, [out] valuetype System.RuntimeType/MemberListType\u0026 listType)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "bool FilterApplyPrefixLookup(class System.Reflection.MemberInfo memberInfo, string name, bool ignoreCase)",
            "size": 39,
            "children": null
          },
          {
            "type": "method",
            "name": "bool FilterApplyMethodInfo(class System.Reflection.RuntimeMethodInfo \u0027method\u0027, valuetype System.Reflection.BindingFlags bindingFlags, valuetype System.Reflection.CallingConventions callConv, class System.Type[] argumentTypes)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "bool FilterApplyConstructorInfo(class System.Reflection.RuntimeConstructorInfo constructor, valuetype System.Reflection.BindingFlags bindingFlags, valuetype System.Reflection.CallingConventions callConv, class System.Type[] argumentTypes)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "bool FilterApplyMethodBase(class System.Reflection.MethodBase methodBase, valuetype System.Reflection.BindingFlags methodFlags, valuetype System.Reflection.BindingFlags bindingFlags, valuetype System.Reflection.CallingConventions callConv, class System.Type[] argumentTypes)",
            "size": 260,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeType/ListBuilder\u00601\u003Cclass System.Reflection.MethodInfo\u003E GetMethodCandidates(string name, valuetype System.Reflection.BindingFlags bindingAttr, valuetype System.Reflection.CallingConventions callConv, class System.Type[] types, int32 genericParamCount, bool allowPrefixLookup)",
            "size": 146,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeType/ListBuilder\u00601\u003Cclass System.Reflection.ConstructorInfo\u003E GetConstructorCandidates(string name, valuetype System.Reflection.BindingFlags bindingAttr, valuetype System.Reflection.CallingConventions callConv, class System.Type[] types, bool allowPrefixLookup)",
            "size": 153,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeType/ListBuilder\u00601\u003Cclass System.Reflection.PropertyInfo\u003E GetPropertyCandidates(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Type[] types, bool allowPrefixLookup)",
            "size": 127,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeType/ListBuilder\u00601\u003Cclass System.Reflection.FieldInfo\u003E GetFieldCandidates(string name, valuetype System.Reflection.BindingFlags bindingAttr, bool allowPrefixLookup)",
            "size": 109,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ConstructorInfo[] GetConstructors(valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.PropertyInfo GetPropertyImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 162,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.EventInfo GetEvent(string name, valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 111,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 240,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Module get_Module()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.RuntimeModule GetRuntimeModule()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Assembly get_Assembly()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.RuntimeAssembly GetRuntimeAssembly()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeTypeHandle get_TypeHandle()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsAssignableFrom(class System.Type c)",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsEquivalentTo(class System.Type other)",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_BaseType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.RuntimeType GetBaseType()",
            "size": 136,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_UnderlyingSystemType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.TypeAttributes GetAttributeFlagsImpl()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsByRefImpl()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPrimitiveImpl()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPointerImpl()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsValueTypeImpl()",
            "size": 55,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsEnum()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "bool HasElementTypeImpl()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.GenericParameterAttributes get_GenericParameterAttributes()",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsArrayImpl()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetArrayRank()",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetElementType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] GetEnumNames()",
            "size": 57,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetEnumUnderlyingType()",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetEnumName(object \u0027value\u0027)",
            "size": 93,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.RuntimeType[] GetGenericArgumentsInternal()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetGenericArguments()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeGenericType(class System.Type[] instantiation)",
            "size": 269,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeTypeBuilderInstantiation(class System.Type[] instantiation)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsGenericTypeDefinition()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsGenericParameter()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_GenericParameterPosition()",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetGenericTypeDefinition()",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsGenericType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsConstructedGenericType()",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(class System.RuntimeType left, class System.RuntimeType right)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Inequality(class System.RuntimeType left, class System.RuntimeType right)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 65,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 65,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatTypeName(bool serialization)",
            "size": 103,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MemberTypes get_MemberType()",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ReflectedType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_MetadataToken()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void CreateInstanceCheckThis()",
            "size": 122,
            "children": null
          },
          {
            "type": "method",
            "name": "object CreateInstanceDefaultCtor(bool publicOnly, bool skipCheckThis, bool fillCache, bool wrapExceptions, valuetype System.Threading.StackCrawlMark\u0026 stackMark)",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.RuntimeConstructorInfo GetDefaultConstructor()",
            "size": 102,
            "children": null
          },
          {
            "type": "method",
            "name": "object CreateInstanceSlow(bool publicOnly, bool wrapExceptions, bool skipCheckThis, bool fillCache)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "object CreateInstanceMono(bool nonPublic, bool wrapExceptions)",
            "size": 159,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetCachedName(valuetype System.TypeNameKind kind)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeArrayType()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeArrayType(int32 rank)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeByRefType()",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakePointerType()",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_ContainsGenericParameters()",
            "size": 73,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetGenericParameterConstraints()",
            "size": 56,
            "children": null
          },
          {
            "type": "method",
            "name": "object CreateInstanceForAnotherGenericParameter(class System.Type genericType, class System.RuntimeType genericArgument)",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.RuntimeMethodInfo[] GetMethodsByName(string name, valuetype System.Reflection.BindingFlags bindingAttr, valuetype System.RuntimeType/MemberListType listType, class System.RuntimeType reflectedType)",
            "size": 142,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.RuntimeConstructorInfo[] GetConstructors_internal(valuetype System.Reflection.BindingFlags bindingAttr, class System.RuntimeType reflectedType)",
            "size": 108,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.RuntimePropertyInfo[] GetPropertiesByName(string name, valuetype System.Reflection.BindingFlags bindingAttr, valuetype System.RuntimeType/MemberListType listType, class System.RuntimeType reflectedType)",
            "size": 142,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCodeImpl()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.GenericParameterAttributes GetGenericParameterAttributes()",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.RuntimeFieldInfo[] GetFields_internal(string name, valuetype System.Reflection.BindingFlags bindingAttr, valuetype System.RuntimeType/MemberListType listType, class System.RuntimeType reflectedType)",
            "size": 142,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.RuntimeEventInfo[] GetEvents_internal(string name, valuetype System.Reflection.BindingFlags bindingAttr, valuetype System.RuntimeType/MemberListType listType, class System.RuntimeType reflectedType)",
            "size": 141,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_AssemblyQualifiedName()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 49,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_FullName()",
            "size": 85,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsSZArray()",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsSubclassOf(class System.Type \u0027type\u0027)",
            "size": 40,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetMethodImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConv, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetMethodImplCommon(string name, int32 genericParameterCount, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConv, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 170,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeType/ListBuilder\u00601\u003Cclass System.Reflection.MethodInfo\u003E GetMethodCandidates(string name, int32 genericParameterCount, valuetype System.Reflection.BindingFlags bindingAttr, valuetype System.Reflection.CallingConventions callConv, class System.Type[] types, bool allowPrefixLookup)",
            "size": 115,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 121,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable beforefieldinit System.ReflectionOnlyType extends System.RuntimeType",
        "size": 23,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeTypeHandle get_TypeHandle()",
            "size": 16,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.ExceptionArgument extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.ExceptionResource extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.TimeZoneInfoOptions extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.TimeZoneInfo extends System.Object implements class System.IEquatable\u00601\u003Cclass System.TimeZoneInfo\u003E",
        "size": 3254,
        "children": [
          {
            "type": "method",
            "name": "class System.TimeZoneInfo CreateLocal()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TimeSpan get_BaseUtcOffset()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_DisplayName()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Id()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.TimeZoneInfo get_Local()",
            "size": 46,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.TimeZoneInfo get_Utc()",
            "size": 45,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryAddTicks(valuetype System.DateTime \u0027date\u0027, int64 ticks, [out] valuetype System.DateTime\u0026 result, [opt] valuetype System.DateTimeKind kind)",
            "size": 95,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime ConvertTime(valuetype System.DateTime dateTime, class System.TimeZoneInfo sourceTimeZone, class System.TimeZoneInfo destinationTimeZone)",
            "size": 177,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime ConvertTimeFromUtc(valuetype System.DateTime dateTime)",
            "size": 90,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime ConvertTimeFromUtc(valuetype System.DateTime dateTime, class System.TimeZoneInfo destinationTimeZone)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime ConvertTimeToUtc(valuetype System.DateTime dateTime, valuetype System.TimeZoneInfoOptions \u0027flags\u0027)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime ConvertTimeToUtc(valuetype System.DateTime dateTime, class System.TimeZoneInfo sourceTimeZone)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime ConvertTimeToUtc(valuetype System.DateTime dateTime, class System.TimeZoneInfo sourceTimeZone, valuetype System.TimeZoneInfoOptions \u0027flags\u0027)",
            "size": 140,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TimeSpan GetDateTimeNowUtcOffsetFromUtc(valuetype System.DateTime time, [out] bool\u0026 isAmbiguousLocalDst)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.TimeZoneInfo CreateCustomTimeZone(string id, valuetype System.TimeSpan baseUtcOffset, string displayName, string standardDisplayName)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.TimeZoneInfo CreateCustomTimeZone(string id, valuetype System.TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, class System.TimeZoneInfo/AdjustmentRule[] adjustmentRules, bool disableDaylightSavingTime)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(class System.TimeZoneInfo other)",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.TimeZoneInfo/AdjustmentRule[] GetAdjustmentRules()",
            "size": 40,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 48,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TimeSpan GetUtcOffset(valuetype System.DateTime dateTime)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TimeSpan GetUtcOffset(valuetype System.DateTime dateTime, [out] bool\u0026 isDST, [opt] bool forOffset)",
            "size": 93,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TimeSpan GetUtcOffsetHelper(valuetype System.DateTime dateTime, class System.TimeZoneInfo tz, [out] bool\u0026 isDST, [opt] bool forOffset)",
            "size": 268,
            "children": null
          },
          {
            "type": "method",
            "name": "bool HasSameRules(class System.TimeZoneInfo other)",
            "size": 133,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsAmbiguousTime(valuetype System.DateTime dateTime)",
            "size": 154,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsInDST(class System.TimeZoneInfo/AdjustmentRule rule, valuetype System.DateTime dateTime)",
            "size": 49,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsInDSTForYear(class System.TimeZoneInfo/AdjustmentRule rule, valuetype System.DateTime dateTime, int32 year)",
            "size": 129,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsInvalidTime(valuetype System.DateTime dateTime)",
            "size": 95,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 245,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string id, valuetype System.TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, class System.TimeZoneInfo/AdjustmentRule[] adjustmentRules, bool disableDaylightSavingTime)",
            "size": 423,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.TimeZoneInfo/AdjustmentRule GetApplicableRule(valuetype System.DateTime dateTime)",
            "size": 177,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryGetTransitionOffset(valuetype System.DateTime dateTime, [out] valuetype System.TimeSpan\u0026 offset, [out] bool\u0026 isDst, [opt] bool forOffset)",
            "size": 381,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime TransitionPoint(valuetype System.TimeZoneInfo/TransitionTime transition, int32 year)",
            "size": 196,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TimeSpan GetLocalUtcOffset(valuetype System.DateTime dateTime, valuetype System.TimeZoneInfoOptions \u0027flags\u0027)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TimeSpan GetUtcOffsetFromUtc(valuetype System.DateTime time, class System.TimeZoneInfo zone, [out] bool\u0026 isDaylightSavings, [out] bool\u0026 isAmbiguousLocalDst)",
            "size": 35,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.TypedReference extends System.ValueType",
        "size": 55,
        "children": [
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 39,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object o)",
            "size": 16,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.TypeLoadException extends System.SystemException",
        "size": 349,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Message()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetMessageField()",
            "size": 133,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string className, string assemblyName)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string className, string assemblyName, string messageArg, int32 resourceId)",
            "size": 54,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 91,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.AppDomain extends System.MarshalByRefObject",
        "size": 494,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.AppDomain get_CurrentDomain()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Assembly Load(string assemblyString, class System.Security.Policy.Evidence assemblySecurity, bool refonly, valuetype System.Threading.StackCrawlMark\u0026 stackMark)",
            "size": 62,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsFinalizingForUnload()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 getDomainID()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void DoAssemblyLoad(class System.Reflection.Assembly \u0027assembly\u0027)",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Assembly DoAssemblyResolve(string name, class System.Reflection.Assembly requestingAssembly, bool refonly)",
            "size": 167,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Assembly DoTypeResolve(string name)",
            "size": 128,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Assembly DoResourceResolve(string name, class System.Reflection.Assembly requesting)",
            "size": 71,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.CompatibilitySwitches extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Environment extends System.Object",
        "size": 329,
        "children": [
          {
            "type": "method",
            "name": "string GetResourceString(string key)",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetResourceString(string key, object[] values)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetResourceStringEncodingName(int32 codePage)",
            "size": 168,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_CurrentDirectory()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_CurrentManagedThreadId()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_NewLine()",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_StackTrace()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "string internalGetEnvironmentVariable(string variable)",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetEnvironmentVariable(string variable)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void FailFast(string message, class System.Exception exception)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetStackTrace(class System.Exception e, bool needFileInfo)",
            "size": 28,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi beforefieldinit System.MonoTypeInfo extends System.Object",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.AppDomainSetup extends System.Object",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.ArgIterator extends System.ValueType",
        "size": 23,
        "children": [
          {
            "type": "method",
            "name": "bool Equals(object o)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed System.Console extends System.Object",
        "size": 282,
        "children": [
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 95,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetupStreams(class System.Text.Encoding inputEncoding, class System.Text.Encoding outputEncoding)",
            "size": 111,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.IO.Stream Open(native int handle, valuetype System.IO.FileAccess access, int32 bufferSize)",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.IO.Stream OpenStandardError(int32 bufferSize)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.IO.Stream OpenStandardInput(int32 bufferSize)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.IO.Stream OpenStandardOutput(int32 bufferSize)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void WriteLine(string \u0027value\u0027)",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.DelegateData extends System.Object",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract sequential ansi serializable beforefieldinit System.Delegate extends System.Object",
        "size": 1447,
        "children": [
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo get_Method()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "object get_Target()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool arg_type_match(class System.Type delArgType, class System.Type argType)",
            "size": 85,
            "children": null
          },
          {
            "type": "method",
            "name": "bool arg_type_match_this(class System.Type delArgType, class System.Type argType, bool boxedThis)",
            "size": 71,
            "children": null
          },
          {
            "type": "method",
            "name": "bool return_type_match(class System.Type delReturnType, class System.Type returnType)",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Delegate CreateDelegate(class System.Type \u0027type\u0027, object firstArgument, class System.Reflection.MethodInfo \u0027method\u0027, bool throwOnBindFailure, bool allowClosed)",
            "size": 791,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Delegate CreateDelegate(class System.Type \u0027type\u0027, object firstArgument, class System.Reflection.MethodInfo \u0027method\u0027)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 203,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 48,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetMethodImpl()",
            "size": 95,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Delegate[] GetInvocationList()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Delegate Combine(class System.Delegate a, class System.Delegate b)",
            "size": 75,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Delegate CombineImpl(class System.Delegate d)",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.EmptyArray\u00601\u003CT\u003E extends System.Object",
        "size": 12,
        "children": [
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.IntPtr extends System.ValueType implements class System.IEquatable\u00601\u003Cnative int\u003E",
        "size": 274,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(int32 \u0027value\u0027)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int64 \u0027value\u0027)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(void* \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Size()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format)",
            "size": 44,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(native int value1, native int value2)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Inequality(native int value1, native int value2)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "int op_Explicit(int32 \u0027value\u0027)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int op_Explicit(int64 \u0027value\u0027)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int op_Explicit(void* \u0027value\u0027)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 op_Explicit(native int \u0027value\u0027)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "static void* op_Explicit(native int \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int op_Addition(native int pointer, int32 offset)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "int op_Subtraction(native int pointer, int32 offset)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsNull()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "bool \u0027System.IEquatable\u003CSystem.IntPtr\u003E.Equals\u0027(native int other)",
            "size": 16,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi beforefieldinit System.MonoAsyncCall extends System.Object",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.MonoCustomAttrs extends System.Object",
        "size": 2057,
        "children": [
          {
            "type": "method",
            "name": "bool IsUserCattrProvider(object obj)",
            "size": 80,
            "children": null
          },
          {
            "type": "method",
            "name": "static object[] GetPseudoCustomAttributes(class System.Reflection.ICustomAttributeProvider obj, class System.Type attributeType)",
            "size": 156,
            "children": null
          },
          {
            "type": "method",
            "name": "static object[] GetPseudoCustomAttributes(class System.Type \u0027type\u0027)",
            "size": 93,
            "children": null
          },
          {
            "type": "method",
            "name": "static object[] GetCustomAttributesBase(class System.Reflection.ICustomAttributeProvider obj, class System.Type attributeType, bool inheritedOnly)",
            "size": 83,
            "children": null
          },
          {
            "type": "method",
            "name": "static object[] GetCustomAttributes(class System.Reflection.ICustomAttributeProvider obj, class System.Type attributeType, bool inherit)",
            "size": 786,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Reflection.ICustomAttributeProvider obj, class System.Type attributeType, bool inherit)",
            "size": 131,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.PropertyInfo GetBasePropertyDefinition(class System.Reflection.RuntimePropertyInfo \u0027property\u0027)",
            "size": 187,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.EventInfo GetBaseEventDefinition(class System.Reflection.RuntimeEventInfo evt)",
            "size": 158,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ICustomAttributeProvider GetBase(class System.Reflection.ICustomAttributeProvider obj)",
            "size": 198,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.AttributeUsageAttribute RetrieveAttributeUsageNoCache(class System.Type attributeType)",
            "size": 112,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.AttributeUsageAttribute RetrieveAttributeUsage(class System.Type attributeType)",
            "size": 57,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 16,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.MonoListItem extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.MonoType extends System.RuntimeType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public abstract sequential ansi serializable beforefieldinit System.MulticastDelegate extends System.Delegate",
        "size": 508,
        "children": [
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 130,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetMethodImpl()",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Delegate[] GetInvocationList()",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Delegate CombineImpl(class System.Delegate follow)",
            "size": 297,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Object",
        "size": 26,
        "children": [
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "void Finalize()",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.RuntimeArgumentHandle extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.RuntimeFieldHandle extends System.ValueType",
        "size": 178,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int v)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 91,
            "children": null
          },
          {
            "type": "method",
            "name": "int get_Value()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.RuntimeMethodHandle extends System.ValueType",
        "size": 267,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int v)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 91,
            "children": null
          },
          {
            "type": "method",
            "name": "int get_Value()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string ConstructInstantiation(class System.Reflection.RuntimeMethodInfo \u0027method\u0027, valuetype System.TypeNameFormatFlags format)",
            "size": 89,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.RuntimeTypeHandle extends System.ValueType",
        "size": 556,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int val)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.RuntimeType \u0027type\u0027)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 91,
            "children": null
          },
          {
            "type": "method",
            "name": "int get_Value()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetToken(class System.RuntimeType \u0027type\u0027)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetGenericTypeDefinition(class System.RuntimeType \u0027type\u0027)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPrimitive(class System.RuntimeType \u0027type\u0027)",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsByRef(class System.RuntimeType \u0027type\u0027)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPointer(class System.RuntimeType \u0027type\u0027)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsArray(class System.RuntimeType \u0027type\u0027)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "bool HasElementType(class System.RuntimeType \u0027type\u0027)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsEquivalentTo(class System.RuntimeType rtType1, class System.RuntimeType rtType2)",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsInterface(class System.RuntimeType \u0027type\u0027)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "bool CanCastTo(class System.RuntimeType \u0027type\u0027, class System.RuntimeType target)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsSubclassOf(class System.RuntimeType childType, class System.RuntimeType baseType)",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.RuntimeType GetTypeByName(string typeName, bool throwOnError, bool ignoreCase, bool reflectionOnly, valuetype System.Threading.StackCrawlMark\u0026 stackMark, bool loadTypeFromPartialName)",
            "size": 193,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.TimeType extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface private abstract auto ansi System.TypeName implements class System.IEquatable\u00601\u003Cclass System.TypeName\u003E",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.UIntPtr extends System.ValueType implements class System.IEquatable\u00601\u003Cnative uint\u003E",
        "size": 214,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(uint64 \u0027value\u0027)",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(uint32 \u0027value\u0027)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 40,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(native uint value1, native uint value2)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Inequality(native uint value1, native uint value2)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "uint op_Explicit(uint64 \u0027value\u0027)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "uint op_Explicit(uint32 \u0027value\u0027)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Size()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool \u0027System.IEquatable\u003CSystem.UIntPtr\u003E.Equals\u0027(native uint other)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.ValueType extends System.Object",
        "size": 186,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool DefaultEquals(object o1, object o2)",
            "size": 115,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 44,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract sequential ansi beforefieldinit System.MarshalByRefObject extends System.Object",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Threading.AsyncLocal\u00601\u003CT\u003E extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface private abstract auto ansi System.Threading.IAsyncLocal",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Threading.EventResetMode extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Threading.LazyInitializer extends System.Object",
        "size": 137,
        "children": [
          {
            "type": "method",
            "name": "static !!T EnsureInitialized\u003Cclass T\u003E(!!T\u0026 target)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "static !!T EnsureInitializedCore\u003Cclass T\u003E(!!T\u0026 target)",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "static !!T EnsureInitialized\u003Cclass T\u003E(!!T\u0026 target, class System.Func\u00601\u003C!!T\u003E valueFactory)",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "static !!T EnsureInitializedCore\u003Cclass T\u003E(!!T\u0026 target, class System.Func\u00601\u003C!!T\u003E valueFactory)",
            "size": 50,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Threading.LockRecursionException extends System.Exception",
        "size": 24,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Threading.ManualResetEvent extends System.Threading.EventWaitHandle",
        "size": 9,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(bool initialState)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Threading.SemaphoreFullException extends System.SystemException",
        "size": 21,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Threading.SendOrPostCallback extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Threading.SynchronizationLockException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Threading.ThreadState extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Threading.ThreadStateException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Threading.WaitHandleCannotBeOpenedException extends System.ApplicationException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Threading.CancellationToken extends System.ValueType",
        "size": 261,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.Threading.CancellationToken get_None()",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsCancellationRequested()",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_CanBeCanceled()",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Threading.CancellationTokenSource source)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Threading.CancellationTokenRegistration InternalRegisterWithoutEC(class System.Action\u00601\u003Cobject\u003E callback, object state)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Threading.CancellationTokenRegistration Register(class System.Action\u00601\u003Cobject\u003E callback, object state, bool useSynchronizationContext, bool useExecutionContext)",
            "size": 66,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(valuetype System.Threading.CancellationToken other)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object other)",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(valuetype System.Threading.CancellationToken left, valuetype System.Threading.CancellationToken right)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Inequality(valuetype System.Threading.CancellationToken left, valuetype System.Threading.CancellationToken right)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowIfCancellationRequested()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowOperationCanceledException()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 22,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.Threading.ManualResetEventSlim extends System.Object implements System.IDisposable",
        "size": 1034,
        "children": [
          {
            "type": "method",
            "name": "bool get_IsSet()",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_IsSet(bool \u0027value\u0027)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_SpinCount()",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_SpinCount(int32 \u0027value\u0027)",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Waiters()",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_Waiters(int32 \u0027value\u0027)",
            "size": 47,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(bool initialState, int32 spinCount)",
            "size": 69,
            "children": null
          },
          {
            "type": "method",
            "name": "void Initialize(bool initialState, int32 spinCount)",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "void EnsureLockObjectCreated()",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "void Set()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void Set(bool duringCancellation)",
            "size": 124,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Wait(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken)",
            "size": 335,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose(bool disposing)",
            "size": 94,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowIfDisposed()",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "void CancellationTokenCallback(object obj)",
            "size": 52,
            "children": null
          },
          {
            "type": "method",
            "name": "void UpdateStateAtomically(int32 newBits, int32 updateBitsMask)",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 ExtractStatePortionAndShiftRight(int32 state, int32 mask, int32 rightBitShiftCount)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 ExtractStatePortion(int32 state, int32 mask)",
            "size": 4,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 18,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Threading.SpinWait extends System.ValueType",
        "size": 294,
        "children": [
          {
            "type": "method",
            "name": "int32 get_Count()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_NextSpinWillYield()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "void SpinOnce()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void SpinOnce(int32 sleep1Threshold)",
            "size": 47,
            "children": null
          },
          {
            "type": "method",
            "name": "void SpinOnceCore(int32 sleep1Threshold)",
            "size": 195,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 18,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Threading.PlatformHelper extends System.Object",
        "size": 71,
        "children": [
          {
            "type": "method",
            "name": "int32 get_ProcessorCount()",
            "size": 57,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Threading.TimeoutHelper extends System.Object",
        "size": 36,
        "children": [
          {
            "type": "method",
            "name": "uint32 GetTime()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 UpdateTimeOut(uint32 startTime, int32 originalWaitMillisecondsTimeout)",
            "size": 30,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Threading.CancellationTokenRegistration extends System.ValueType implements class System.IEquatable\u00601\u003Cvaluetype System.Threading.CancellationTokenRegistration\u003E, System.IDisposable",
        "size": 335,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Threading.CancellationCallbackInfo callbackInfo, valuetype System.Threading.SparselyPopulatedArrayAddInfo\u00601\u003Cclass System.Threading.CancellationCallbackInfo\u003E registrationInfo)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Unregister()",
            "size": 69,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 69,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(valuetype System.Threading.CancellationTokenRegistration other)",
            "size": 77,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 82,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.Threading.CancellationTokenSource extends System.Object implements System.IDisposable",
        "size": 1131,
        "children": [
          {
            "type": "method",
            "name": "bool get_IsCancellationRequested()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsCancellationCompleted()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsDisposed()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_ThreadIDExecutingCallbacks()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_ThreadIDExecutingCallbacks(int32 \u0027value\u0027)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Threading.CancellationToken get_Token()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.CancellationCallbackInfo get_ExecutingCallback()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "void Cancel()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void Cancel(bool throwOnFirstException)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void TimerCallbackLogic(object obj)",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose(bool disposing)",
            "size": 90,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowIfDisposed()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowObjectDisposedException()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Threading.CancellationTokenRegistration InternalRegister(class System.Action\u00601\u003Cobject\u003E callback, object stateForCallback, class System.Threading.SynchronizationContext targetSyncContext, class System.Threading.ExecutionContext executionContext)",
            "size": 218,
            "children": null
          },
          {
            "type": "method",
            "name": "void NotifyCancellation(bool throwOnFirstException)",
            "size": 82,
            "children": null
          },
          {
            "type": "method",
            "name": "void ExecuteCallbackHandlers(bool throwOnFirstException)",
            "size": 301,
            "children": null
          },
          {
            "type": "method",
            "name": "void CancellationCallbackCoreWork_OnSyncContext(object obj)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void CancellationCallbackCoreWork(valuetype System.Threading.CancellationCallbackCoreWorkArguments args)",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.CancellationTokenSource CreateLinkedTokenSource(valuetype System.Threading.CancellationToken token1, valuetype System.Threading.CancellationToken token2)",
            "size": 40,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.CancellationTokenSource CreateLinkedTokenSource(valuetype System.Threading.CancellationToken token)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "void WaitForCallbackToComplete(class System.Threading.CancellationCallbackInfo callbackInfo)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 79,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Threading.CancellationCallbackCoreWorkArguments extends System.ValueType",
        "size": 15,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Threading.SparselyPopulatedArrayFragment\u00601\u003Cclass System.Threading.CancellationCallbackInfo\u003E currArrayFragment, int32 currArrayIndex)",
            "size": 15,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Threading.CancellationCallbackInfo extends System.Object",
        "size": 118,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Action\u00601\u003Cobject\u003E callback, object stateForCallback, class System.Threading.ExecutionContext targetExecutionContext, class System.Threading.CancellationTokenSource cancellationTokenSource)",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "void ExecuteCallback()",
            "size": 57,
            "children": null
          },
          {
            "type": "method",
            "name": "void ExecutionContextCallback(object obj)",
            "size": 25,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Threading.SparselyPopulatedArray\u00601\u003Cclass T\u003E extends System.Object",
        "size": 393,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(int32 initialSize)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.SparselyPopulatedArrayFragment\u00601\u003C!T\u003E get_Tail()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Threading.SparselyPopulatedArrayAddInfo\u00601\u003C!T\u003E Add(!T element)",
            "size": 354,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Threading.SparselyPopulatedArrayAddInfo\u00601\u003Cclass T\u003E extends System.ValueType",
        "size": 29,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Threading.SparselyPopulatedArrayFragment\u00601\u003C!T\u003E source, int32 index)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.SparselyPopulatedArrayFragment\u00601\u003C!T\u003E get_Source()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Index()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Threading.SparselyPopulatedArrayFragment\u00601\u003Cclass T\u003E extends System.Object",
        "size": 136,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(int32 size)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 size, class System.Threading.SparselyPopulatedArrayFragment\u00601\u003C!T\u003E prev)",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !T get_Item(int32 index)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Length()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.SparselyPopulatedArrayFragment\u00601\u003C!T\u003E get_Prev()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !T SafeAtomicRemove(int32 index, !T expectedElement)",
            "size": 54,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Threading.LockHolder extends System.ValueType implements System.IDisposable",
        "size": 28,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.Threading.LockHolder Hold(class System.Threading.Lock l)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.Threading.Lock extends System.Object",
        "size": 42,
        "children": [
          {
            "type": "method",
            "name": "void Acquire()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void Release()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 18,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.Threading.SemaphoreSlim extends System.Object implements System.IDisposable",
        "size": 1446,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(int32 initialCount, int32 maxCount)",
            "size": 100,
            "children": null
          },
          {
            "type": "method",
            "name": "void Wait()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Wait(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken)",
            "size": 373,
            "children": null
          },
          {
            "type": "method",
            "name": "bool WaitUntilCountOrTimeout(int32 millisecondsTimeout, uint32 startTime, valuetype System.Threading.CancellationToken cancellationToken)",
            "size": 57,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task WaitAsync()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task\u00601\u003Cbool\u003E WaitAsync(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken)",
            "size": 199,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.SemaphoreSlim/TaskNode CreateAndAddAsyncWaiter()",
            "size": 63,
            "children": null
          },
          {
            "type": "method",
            "name": "bool RemoveAsyncWaiter(class System.Threading.SemaphoreSlim/TaskNode task)",
            "size": 130,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Release()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Release(int32 releaseCount)",
            "size": 251,
            "children": null
          },
          {
            "type": "method",
            "name": "void QueueWaiterTask(class System.Threading.SemaphoreSlim/TaskNode waiterTask)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose(bool disposing)",
            "size": 57,
            "children": null
          },
          {
            "type": "method",
            "name": "void CancellationTokenCanceledEventHandler(object obj)",
            "size": 48,
            "children": null
          },
          {
            "type": "method",
            "name": "void CheckDispose()",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetResourceString(string str)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 70,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Threading.SpinLock extends System.ValueType",
        "size": 1072,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(bool enableThreadOwnerTracking)",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "void Enter(bool\u0026 lockTaken)",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "void TryEnter(int32 millisecondsTimeout, bool\u0026 lockTaken)",
            "size": 65,
            "children": null
          },
          {
            "type": "method",
            "name": "void ContinueTryEnter(int32 millisecondsTimeout, bool\u0026 lockTaken)",
            "size": 488,
            "children": null
          },
          {
            "type": "method",
            "name": "void DecrementWaiters()",
            "size": 55,
            "children": null
          },
          {
            "type": "method",
            "name": "void ContinueTryEnterWithThreadTracking(int32 millisecondsTimeout, uint32 startTime, bool\u0026 lockTaken)",
            "size": 121,
            "children": null
          },
          {
            "type": "method",
            "name": "void Exit(bool useMemoryBarrier)",
            "size": 55,
            "children": null
          },
          {
            "type": "method",
            "name": "void ExitSlowPath(bool useMemoryBarrier)",
            "size": 113,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsHeldByCurrentThread()",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsThreadOwnerTrackingEnabled()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.Threading.EventWaitHandle extends System.Threading.WaitHandle",
        "size": 247,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(bool initialState, valuetype System.Threading.EventResetMode mode)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(bool initialState, valuetype System.Threading.EventResetMode mode, string name)",
            "size": 191,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Reset()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Set()",
            "size": 23,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Threading.ContextCallback extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Threading.ExecutionContextSwitcher extends System.ValueType",
        "size": 87,
        "children": [
          {
            "type": "method",
            "name": "bool UndoNoThrow()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void Undo()",
            "size": 70,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Threading.ExecutionContext extends System.Object implements System.IDisposable",
        "size": 1154,
        "children": [
          {
            "type": "method",
            "name": "bool get_isNewCapture()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_isNewCapture(bool \u0027value\u0027)",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_isFlowSuppressed()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_isFlowSuppressed(bool \u0027value\u0027)",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsPreAllocatedDefault()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(bool isPreAllocatedDefault)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnAsyncLocalContextChanged(class System.Threading.ExecutionContext previous, class System.Threading.ExecutionContext current)",
            "size": 305,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.SynchronizationContext get_SynchronizationContext()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_SynchronizationContext(class System.Threading.SynchronizationContext \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.SynchronizationContext get_SynchronizationContextNoFlow()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_SynchronizationContextNoFlow(class System.Threading.SynchronizationContext \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void Run(class System.Threading.ExecutionContext executionContext, class System.Threading.ContextCallback callback, object state)",
            "size": 53,
            "children": null
          },
          {
            "type": "method",
            "name": "void Run(class System.Threading.ExecutionContext executionContext, class System.Threading.ContextCallback callback, object state, bool preserveSyncCtx)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "void RunInternal(class System.Threading.ExecutionContext executionContext, class System.Threading.ContextCallback callback, object state)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "void RunInternal(class System.Threading.ExecutionContext executionContext, class System.Threading.ContextCallback callback, object state, bool preserveSyncCtx)",
            "size": 131,
            "children": null
          },
          {
            "type": "method",
            "name": "void EstablishCopyOnWriteScope(valuetype System.Threading.ExecutionContextSwitcher\u0026 ecsw)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void EstablishCopyOnWriteScope(class System.Threading.Thread currentThread, bool knownNullWindowsIdentity, valuetype System.Threading.ExecutionContextSwitcher\u0026 ecsw)",
            "size": 39,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Threading.ExecutionContextSwitcher SetExecutionContext(class System.Threading.ExecutionContext executionContext, bool preserveSyncCtx)",
            "size": 120,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.ExecutionContext CreateMutableCopy()",
            "size": 66,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsFlowSuppressed()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.ExecutionContext Capture()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.ExecutionContext FastCapture()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.ExecutionContext Capture(valuetype System.Threading.StackCrawlMark\u0026 stackMark, valuetype System.Threading.ExecutionContext/CaptureOptions options)",
            "size": 139,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefaultFTContext(bool ignoreSyncCtx)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 22,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Threading.Monitor extends System.Object",
        "size": 261,
        "children": [
          {
            "type": "method",
            "name": "void Enter(object obj, bool\u0026 lockTaken)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowLockTakenException()",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Wait(object obj, int32 millisecondsTimeout, bool exitContext)",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Wait(object obj, int32 millisecondsTimeout)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void Pulse(object obj)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void PulseAll(object obj)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void ObjPulse(object obj)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "void ObjPulseAll(object obj)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "bool ObjWait(bool exitContext, int32 millisecondsTimeout, object obj)",
            "size": 46,
            "children": null
          },
          {
            "type": "method",
            "name": "void ReliableEnterTimeout(object obj, int32 timeout, bool\u0026 lockTaken)",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "void ReliableEnter(object obj, bool\u0026 lockTaken)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.Threading.SynchronizationContext extends System.Object",
        "size": 88,
        "children": [
          {
            "type": "method",
            "name": "void Send(class System.Threading.SendOrPostCallback d, object state)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void Post(class System.Threading.SendOrPostCallback d, object state)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetSynchronizationContext(class System.Threading.SynchronizationContext syncContext)",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.SynchronizationContext get_Current()",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.SynchronizationContext GetThreadLocalContext()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.SynchronizationContext get_CurrentExplicit()",
            "size": 6,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Threading.Thread extends System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
        "size": 351,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.Threading.ExecutionContext/Reader GetExecutionContextReader()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_ExecutionContextBelongsToCurrentScope()",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_ExecutionContextBelongsToCurrentScope(bool \u0027value\u0027)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.ExecutionContext GetMutableExecutionContext()",
            "size": 62,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetExecutionContext(class System.Threading.ExecutionContext \u0027value\u0027, bool belongsToCurrentScope)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetExecutionContext(valuetype System.Threading.ExecutionContext/Reader \u0027value\u0027, bool belongsToCurrentScope)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void Sleep(int32 millisecondsTimeout)",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Yield()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.CultureInfo get_CurrentCulture()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.CultureInfo GetCurrentCultureNoAppX()",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.InternalThread get_Internal()",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Thread get_CurrentThread()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsThreadPoolThread()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsThreadPoolThreadInternal()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void SpinWait(int32 iterations)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_ManagedThreadId()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void BeginCriticalRegion()",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "void EndCriticalRegion()",
            "size": 28,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable sealed System.Threading.StackCrawlMark extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Threading.ThreadAbortException extends System.SystemException",
        "size": 33,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Threading.ThreadInterruptedException extends System.SystemException",
        "size": 33,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "interface private abstract auto ansi System.Threading.IThreadPoolWorkItem",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Threading.WaitCallback extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Threading.ThreadPoolGlobals extends System.Object",
        "size": 17,
        "children": [
          {
            "type": "method",
            "name": "int32 get_processorCount()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Threading.ThreadPoolWorkQueue extends System.Object",
        "size": 669,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.ThreadPoolWorkQueueThreadLocals EnsureCurrentThreadHasQueue()",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "void EnsureThreadRequested()",
            "size": 49,
            "children": null
          },
          {
            "type": "method",
            "name": "void MarkThreadRequestSatisfied()",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "void Enqueue(class System.Threading.IThreadPoolWorkItem callback, bool forceGlobal)",
            "size": 120,
            "children": null
          },
          {
            "type": "method",
            "name": "bool LocalFindAndPop(class System.Threading.IThreadPoolWorkItem callback)",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dequeue(class System.Threading.ThreadPoolWorkQueueThreadLocals tl, [out] class System.Threading.IThreadPoolWorkItem\u0026 callback, [out] bool\u0026 missedSteal)",
            "size": 184,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Dispatch()",
            "size": 186,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 13,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Threading.ThreadPoolWorkQueueThreadLocals extends System.Object",
        "size": 176,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Threading.ThreadPoolWorkQueue tpq)",
            "size": 63,
            "children": null
          },
          {
            "type": "method",
            "name": "void CleanUp()",
            "size": 78,
            "children": null
          },
          {
            "type": "method",
            "name": "void Finalize()",
            "size": 35,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Threading._ThreadPoolWaitCallback extends System.Object",
        "size": 6,
        "children": [
          {
            "type": "method",
            "name": "bool PerformWaitCallback()",
            "size": 6,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Threading.QueueUserWorkItemCallback extends System.Object implements System.Threading.IThreadPoolWorkItem",
        "size": 141,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Threading.WaitCallback waitCallback, object stateObj, bool compressStack, valuetype System.Threading.StackCrawlMark\u0026 stackMark)",
            "size": 45,
            "children": null
          },
          {
            "type": "method",
            "name": "void System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()",
            "size": 52,
            "children": null
          },
          {
            "type": "method",
            "name": "void System.Threading.IThreadPoolWorkItem.MarkAborted(class System.Threading.ThreadAbortException tae)",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "void WaitCallback_Context(object state)",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 18,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Threading.ThreadPool extends System.Object",
        "size": 173,
        "children": [
          {
            "type": "method",
            "name": "bool QueueUserWorkItem(class System.Threading.WaitCallback callBack, object state)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "bool UnsafeQueueUserWorkItem(class System.Threading.WaitCallback callBack, object state)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "bool QueueUserWorkItemHelper(class System.Threading.WaitCallback callBack, object state, valuetype System.Threading.StackCrawlMark\u0026 stackMark, bool compressStack, [opt] bool forceGlobal)",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "void UnsafeQueueCustomWorkItem(class System.Threading.IThreadPoolWorkItem workItem, bool forceGlobal)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryPopCustomWorkItem(class System.Threading.IThreadPoolWorkItem workItem)",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void EnsureVMInitialized()",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "void NotifyWorkItemProgress()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsThreadPoolThread()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract sequential ansi beforefieldinit System.Threading.WaitHandle extends System.MarshalByRefObject implements System.IDisposable",
        "size": 197,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void Init()",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_Handle(native int \u0027value\u0027)",
            "size": 70,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetHandleInternal(class Microsoft.Win32.SafeHandles.SafeWaitHandle handle)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "void Close()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose(bool explicitDisposing)",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Threading.Interlocked extends System.Object",
        "size": 6,
        "children": [
          {
            "type": "method",
            "name": "void MemoryBarrier()",
            "size": 6,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Threading.NativeEventCalls extends System.Object",
        "size": 110,
        "children": [
          {
            "type": "method",
            "name": "int CreateEvent_internal(bool manual, bool initial, string name, [out] int32\u0026 errorCode)",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "bool SetEvent(class Microsoft.Win32.SafeHandles.SafeWaitHandle handle)",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "bool ResetEvent(class Microsoft.Win32.SafeHandles.SafeWaitHandle handle)",
            "size": 36,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Threading.InternalThread extends System.Runtime.ConstrainedExecution.CriticalFinalizerObject",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Threading.WasmRuntime extends System.Object",
        "size": 80,
        "children": [
          {
            "type": "method",
            "name": "void ScheduleTimeout(int32 timeout, class System.Action action)",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "void TimeoutCallback(int32 id)",
            "size": 29,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Threading.Timer extends System.MarshalByRefObject implements System.IDisposable",
        "size": 288,
        "children": [
          {
            "type": "method",
            "name": "class System.Threading.Timer/Scheduler get_scheduler()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Threading.TimerCallback callback, object state, int32 dueTime, int32 period)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void Init(class System.Threading.TimerCallback callback, object state, int64 dueTime, int64 period)",
            "size": 54,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Change(int64 dueTime, int64 period, bool first)",
            "size": 179,
            "children": null
          },
          {
            "type": "method",
            "name": "void KeepRootedWhileScheduled()",
            "size": 1,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Threading.TimerCallback extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Threading.Volatile extends System.Object",
        "size": 39,
        "children": [
          {
            "type": "method",
            "name": "static !!T Read\u003Cclass T\u003E(!!T\u0026 location)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void Write\u003Cclass T\u003E(!!T\u0026 location, !!T \u0027value\u0027)",
            "size": 20,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Threading.Tasks.TaskCanceledException extends System.OperationCanceledException",
        "size": 60,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Threading.Tasks.Task task)",
            "size": 39,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Threading.Tasks.TaskSchedulerException extends System.Exception",
        "size": 34,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Exception innerException)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Threading.Tasks.DebuggerSupport extends System.Object",
        "size": 152,
        "children": [
          {
            "type": "method",
            "name": "bool get_LoggingOn()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "void TraceOperationCreation(valuetype System.Threading.Tasks.CausalityTraceLevel traceLevel, class System.Threading.Tasks.Task task, string operationName, uint64 relatedContext)",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "void TraceOperationCompletion(valuetype System.Threading.Tasks.CausalityTraceLevel traceLevel, class System.Threading.Tasks.Task task, valuetype Internal.Runtime.Augments.AsyncStatus status)",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "void TraceOperationRelation(valuetype System.Threading.Tasks.CausalityTraceLevel traceLevel, class System.Threading.Tasks.Task task, valuetype System.Threading.Tasks.CausalityRelation relation)",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "void TraceSynchronousWorkStart(valuetype System.Threading.Tasks.CausalityTraceLevel traceLevel, class System.Threading.Tasks.Task task, valuetype System.Threading.Tasks.CausalitySynchronousWork work)",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "void TraceSynchronousWorkCompletion(valuetype System.Threading.Tasks.CausalityTraceLevel traceLevel, valuetype System.Threading.Tasks.CausalitySynchronousWork work)",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "void AddToActiveTasks(class System.Threading.Tasks.Task task)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void AddToActiveTasksNonInlined(class System.Threading.Tasks.Task task)",
            "size": 48,
            "children": null
          },
          {
            "type": "method",
            "name": "void RemoveFromActiveTasks(class System.Threading.Tasks.Task task)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void RemoveFromActiveTasksNonInlined(class System.Threading.Tasks.Task task)",
            "size": 48,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 21,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.Threading.Tasks.Task\u00601\u003CTResult\u003E extends System.Threading.Tasks.Task",
        "size": 266,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(!TResult result)",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(bool canceled, !TResult result, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.CancellationToken ct)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Func\u00602\u003Cobject,!TResult\u003E function, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Delegate valueSelector, object state, class System.Threading.Tasks.Task parent, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.InternalTaskOptions internalOptions, class System.Threading.Tasks.TaskScheduler scheduler)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TrySetResult(!TResult result)",
            "size": 89,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !TResult get_ResultOnSuccess()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void InnerInvoke()",
            "size": 63,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Runtime.CompilerServices.TaskAwaiter\u00601\u003C!TResult\u003E GetAwaiter()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Runtime.CompilerServices.ConfiguredTaskAwaitable\u00601\u003C!TResult\u003E ConfigureAwait(bool continueOnCapturedContext)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Threading.Tasks.SystemThreadingTasks_FutureDebugView\u00601\u003CTResult\u003E extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Threading.Tasks.TaskStatus extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.Threading.Tasks.Task extends System.Object implements System.Threading.IThreadPoolWorkItem, System.IAsyncResult, System.IDisposable",
        "size": 5684,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(bool canceled, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.CancellationToken ct)",
            "size": 74,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Delegate action, object state, class System.Threading.Tasks.Task parent, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.InternalTaskOptions internalOptions, class System.Threading.Tasks.TaskScheduler scheduler)",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "void TaskConstructorCore(class System.Delegate action, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.InternalTaskOptions internalOptions, class System.Threading.Tasks.TaskScheduler scheduler)",
            "size": 151,
            "children": null
          },
          {
            "type": "method",
            "name": "void AssignCancellationToken(valuetype System.Threading.CancellationToken cancellationToken, class System.Threading.Tasks.Task antecedent, class System.Threading.Tasks.TaskContinuation continuation)",
            "size": 150,
            "children": null
          },
          {
            "type": "method",
            "name": "void TaskCancelCallback(object o)",
            "size": 57,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TrySetCanceled(valuetype System.Threading.CancellationToken tokenToRecord)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TrySetCanceled(valuetype System.Threading.CancellationToken tokenToRecord, object cancellationException)",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TrySetException(object exceptionObject)",
            "size": 46,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Threading.Tasks.TaskCreationOptions get_Options()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Threading.Tasks.TaskCreationOptions OptionsMethod(int32 \u0027flags\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool AtomicStateUpdate(int32 newBits, int32 illegalBits)",
            "size": 53,
            "children": null
          },
          {
            "type": "method",
            "name": "bool AtomicStateUpdate(int32 newBits, int32 illegalBits, int32\u0026 oldFlags)",
            "size": 58,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetNotificationForWaitCompletion(bool enabled)",
            "size": 72,
            "children": null
          },
          {
            "type": "method",
            "name": "bool NotifyDebuggerOfWaitCompletionIfNecessary()",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsWaitNotificationEnabledOrNotRanToCompletion()",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_ShouldNotifyDebuggerOfWaitCompletion()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsWaitNotificationEnabled()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "void NotifyDebuggerOfWaitCompletion()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool MarkStarted()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void AddNewChild()",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "void DisregardChild()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Id()",
            "size": 49,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task get_InternalCurrent()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task InternalCurrentIfAttached(valuetype System.Threading.Tasks.TaskCreationOptions creationOptions)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.StackGuard get_CurrentStackGuard()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.AggregateException get_Exception()",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Threading.Tasks.TaskStatus get_Status()",
            "size": 104,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsCanceled()",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsCancellationRequested()",
            "size": 39,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task/ContingentProperties EnsureContingentPropertiesInitialized(bool needsProtection)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task/ContingentProperties EnsureContingentPropertiesInitializedCore(bool needsProtection)",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Threading.CancellationToken get_CancellationToken()",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsCancellationAcknowledged()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsCompleted()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsCompletedMethod(int32 \u0027flags\u0027)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsCompletedSuccessfully()",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Threading.Tasks.TaskCreationOptions get_CreationOptions()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.TaskScheduler get_ExecutingTaskScheduler()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task get_CompletedTask()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_ExceptionRecorded()",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsFaulted()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.ExecutionContext get_CapturedContext()",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_CapturedContext(class System.Threading.ExecutionContext \u0027value\u0027)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose(bool disposing)",
            "size": 116,
            "children": null
          },
          {
            "type": "method",
            "name": "void ScheduleAndStart(bool needsProtection)",
            "size": 171,
            "children": null
          },
          {
            "type": "method",
            "name": "void AddException(object exceptionObject)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void AddException(object exceptionObject, bool representsCancellation)",
            "size": 87,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.AggregateException GetExceptions(bool includeTaskCanceledExceptions)",
            "size": 72,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Collections.ObjectModel.ReadOnlyCollection\u00601\u003Cclass System.Runtime.ExceptionServices.ExceptionDispatchInfo\u003E GetExceptionDispatchInfos()",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Runtime.ExceptionServices.ExceptionDispatchInfo GetCancellationExceptionDispatchInfo()",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsExceptionObservedByParent()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsDelegateInvoked()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "void Finish(bool bUserDelegateExecuted)",
            "size": 126,
            "children": null
          },
          {
            "type": "method",
            "name": "void FinishStageTwo()",
            "size": 168,
            "children": null
          },
          {
            "type": "method",
            "name": "void FinishStageThree()",
            "size": 67,
            "children": null
          },
          {
            "type": "method",
            "name": "void ProcessChildCompletion(class System.Threading.Tasks.Task childTask)",
            "size": 116,
            "children": null
          },
          {
            "type": "method",
            "name": "void AddExceptionsFromChildren()",
            "size": 152,
            "children": null
          },
          {
            "type": "method",
            "name": "void Execute()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "bool ExecuteEntry(bool bPreventDoubleExecution)",
            "size": 136,
            "children": null
          },
          {
            "type": "method",
            "name": "void ExecutionContextCallback(object obj)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void InnerInvoke()",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "void HandleException(class System.Exception unhandledException)",
            "size": 67,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetContinuationForAwait(class System.Action continuationAction, bool continueOnCapturedContext, bool flowExecutionContext)",
            "size": 113,
            "children": null
          },
          {
            "type": "method",
            "name": "bool WrappedTryRunInline()",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "bool InternalWait(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken)",
            "size": 184,
            "children": null
          },
          {
            "type": "method",
            "name": "bool SpinThenBlockingWait(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken)",
            "size": 107,
            "children": null
          },
          {
            "type": "method",
            "name": "bool SpinWait(int32 millisecondsTimeout)",
            "size": 61,
            "children": null
          },
          {
            "type": "method",
            "name": "bool InternalCancel(bool bCancelNonExecutingOnly)",
            "size": 185,
            "children": null
          },
          {
            "type": "method",
            "name": "void RecordInternalCancellationRequest()",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "void RecordInternalCancellationRequest(valuetype System.Threading.CancellationToken tokenToRecord)",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "void RecordInternalCancellationRequest(valuetype System.Threading.CancellationToken tokenToRecord, object cancellationException)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void CancellationCleanupLogic()",
            "size": 78,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetCancellationAcknowledged()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void FinishContinuations()",
            "size": 460,
            "children": null
          },
          {
            "type": "method",
            "name": "void LogFinishCompletionNotification()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task ContinueWith(class System.Action\u00602\u003Cclass System.Threading.Tasks.Task,object\u003E continuationAction, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task ContinueWith(class System.Action\u00602\u003Cclass System.Threading.Tasks.Task,object\u003E continuationAction, object state, class System.Threading.Tasks.TaskScheduler scheduler, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions)",
            "size": 64,
            "children": null
          },
          {
            "type": "method",
            "name": "void CreationOptionsFromContinuationOptions(valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, [out] valuetype System.Threading.Tasks.TaskCreationOptions\u0026 creationOptions, [out] valuetype System.Threading.Tasks.InternalTaskOptions\u0026 internalOptions)",
            "size": 116,
            "children": null
          },
          {
            "type": "method",
            "name": "void ContinueWithCore(class System.Threading.Tasks.Task continuationTask, class System.Threading.Tasks.TaskScheduler scheduler, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions options)",
            "size": 83,
            "children": null
          },
          {
            "type": "method",
            "name": "void AddCompletionAction(class System.Threading.Tasks.ITaskCompletionAction action)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void AddCompletionAction(class System.Threading.Tasks.ITaskCompletionAction action, bool addBeforeOthers)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "bool AddTaskContinuationComplex(object tc, bool addBeforeOthers)",
            "size": 166,
            "children": null
          },
          {
            "type": "method",
            "name": "bool AddTaskContinuation(object tc, bool addBeforeOthers)",
            "size": 46,
            "children": null
          },
          {
            "type": "method",
            "name": "void RemoveContinuation(object continuationObject)",
            "size": 133,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task FromCancellation(valuetype System.Threading.CancellationToken cancellationToken)",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task\u00601\u003C!!TResult\u003E FromCancellation\u003CTResult\u003E(valuetype System.Threading.CancellationToken cancellationToken)",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task Delay(int32 millisecondsDelay, valuetype System.Threading.CancellationToken cancellationToken)",
            "size": 168,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task\u00601\u003Cclass System.Threading.Tasks.Task\u003E WhenAny(class System.Threading.Tasks.Task[] tasks)",
            "size": 91,
            "children": null
          },
          {
            "type": "method",
            "name": "bool AddToActiveTasks(class System.Threading.Tasks.Task task)",
            "size": 47,
            "children": null
          },
          {
            "type": "method",
            "name": "void RemoveFromActiveTasks(int32 taskId)",
            "size": 41,
            "children": null
          },
          {
            "type": "method",
            "name": "void MarkAborted(class System.Threading.ThreadAbortException e)",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "void ExecuteWithThreadLocal(class System.Threading.Tasks.Task\u0026 currentTaskSlot)",
            "size": 89,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 146,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Threading.Tasks.CompletionActionInvoker extends System.Object implements System.Threading.IThreadPoolWorkItem",
        "size": 40,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Threading.Tasks.ITaskCompletionAction action, class System.Threading.Tasks.Task completingTask)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "void MarkAborted(class System.Threading.ThreadAbortException e)",
            "size": 1,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Threading.Tasks.SystemThreadingTasks_TaskDebugView extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Threading.Tasks.TaskCreationOptions extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.Threading.Tasks.InternalTaskOptions extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Threading.Tasks.TaskContinuationOptions extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Threading.Tasks.StackGuard extends System.Object",
        "size": 73,
        "children": [
          {
            "type": "method",
            "name": "bool TryBeginInliningScope()",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "void EndInliningScope()",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Threading.Tasks.VoidTaskResult extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface private abstract auto ansi System.Threading.Tasks.ITaskCompletionAction",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Threading.Tasks.ContinuationTaskFromTask extends System.Threading.Tasks.Task",
        "size": 111,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Threading.Tasks.Task antecedent, class System.Delegate action, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.InternalTaskOptions internalOptions)",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "void InnerInvoke()",
            "size": 74,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi beforefieldinit System.Threading.Tasks.TaskContinuation extends System.Object",
        "size": 94,
        "children": [
          {
            "type": "method",
            "name": "void InlineIfPossibleOrElseQueue(class System.Threading.Tasks.Task task, bool needsProtection)",
            "size": 87,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Threading.Tasks.StandardTaskContinuation extends System.Threading.Tasks.TaskContinuation",
        "size": 231,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Threading.Tasks.Task task, valuetype System.Threading.Tasks.TaskContinuationOptions options, class System.Threading.Tasks.TaskScheduler scheduler)",
            "size": 88,
            "children": null
          },
          {
            "type": "method",
            "name": "void Run(class System.Threading.Tasks.Task completedTask, bool bCanInlineContinuationTask)",
            "size": 143,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation extends System.Threading.Tasks.AwaitTaskContinuation",
        "size": 155,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Threading.SynchronizationContext context, class System.Action action, bool flowExecutionContext)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "void Run(class System.Threading.Tasks.Task ignored, bool canInlineContinuationTask)",
            "size": 57,
            "children": null
          },
          {
            "type": "method",
            "name": "void PostAction(object state)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.ContextCallback GetPostActionCallback()",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 22,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation extends System.Threading.Tasks.AwaitTaskContinuation",
        "size": 139,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Threading.Tasks.TaskScheduler scheduler, class System.Action action, bool flowExecutionContext)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "void Run(class System.Threading.Tasks.Task ignored, bool canInlineContinuationTask)",
            "size": 123,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Threading.Tasks.AwaitTaskContinuation extends System.Threading.Tasks.TaskContinuation implements System.Threading.IThreadPoolWorkItem",
        "size": 349,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Action action, bool flowExecutionContext)",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task CreateTask(class System.Action\u00601\u003Cobject\u003E action, object state, class System.Threading.Tasks.TaskScheduler scheduler)",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "void Run(class System.Threading.Tasks.Task ignored, bool canInlineContinuationTask)",
            "size": 41,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsValidLocationForInlining()",
            "size": 54,
            "children": null
          },
          {
            "type": "method",
            "name": "void System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "void InvokeAction(object state)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.ContextCallback GetInvokeActionCallback()",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "void RunCallback(class System.Threading.ContextCallback callback, object state, class System.Threading.Tasks.Task\u0026 currentTask)",
            "size": 45,
            "children": null
          },
          {
            "type": "method",
            "name": "void RunOrScheduleAction(class System.Action action, bool allowInlining, class System.Threading.Tasks.Task\u0026 currentTask)",
            "size": 49,
            "children": null
          },
          {
            "type": "method",
            "name": "void UnsafeScheduleAction(class System.Action action)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowAsyncIfNecessary(class System.Exception exc)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void MarkAborted(class System.Threading.ThreadAbortException e)",
            "size": 1,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Threading.Tasks.TaskExceptionHolder extends System.Object",
        "size": 555,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Threading.Tasks.Task task)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "bool ShouldFailFastOnUnobservedException()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "void Finalize()",
            "size": 92,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_ContainsFaultList()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void Add(object exceptionObject, bool representsCancellation)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetCancellationException(object exceptionObject)",
            "size": 46,
            "children": null
          },
          {
            "type": "method",
            "name": "void AddFaultException(object exceptionObject)",
            "size": 190,
            "children": null
          },
          {
            "type": "method",
            "name": "void MarkAsUnhandled()",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "void MarkAsHandled(bool calledFromFinalizer)",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.AggregateException CreateExceptionObject(bool calledFromFinalizer, class System.Exception includeThisException)",
            "size": 86,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Collections.ObjectModel.ReadOnlyCollection\u00601\u003Cclass System.Runtime.ExceptionServices.ExceptionDispatchInfo\u003E GetExceptionDispatchInfos()",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Runtime.ExceptionServices.ExceptionDispatchInfo GetCancellationExceptionDispatchInfo()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.Threading.Tasks.TaskFactory extends System.Object",
        "size": 280,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler)",
            "size": 48,
            "children": null
          },
          {
            "type": "method",
            "name": "void CheckCreationOptions(valuetype System.Threading.Tasks.TaskCreationOptions creationOptions)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task\u00601\u003Cclass System.Threading.Tasks.Task\u003E CommonCWAnyLogic(class System.Collections.Generic.IList\u00601\u003Cclass System.Threading.Tasks.Task\u003E tasks)",
            "size": 119,
            "children": null
          },
          {
            "type": "method",
            "name": "void CheckMultiTaskContinuationOptions(valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions)",
            "size": 76,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi beforefieldinit System.Threading.Tasks.TaskScheduler extends System.Object",
        "size": 280,
        "children": [
          {
            "type": "method",
            "name": "bool TryRunInline(class System.Threading.Tasks.Task task, bool taskWasPreviouslyQueued)",
            "size": 118,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryDequeue(class System.Threading.Tasks.Task task)",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "void NotifyWorkItemProgress()",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_RequiresAtomicStartTransition()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.TaskScheduler get_Default()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.TaskScheduler get_InternalCurrent()",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Id()",
            "size": 49,
            "children": null
          },
          {
            "type": "method",
            "name": "void PublishUnobservedTaskException(object sender, class System.Threading.Tasks.UnobservedTaskExceptionEventArgs ueea)",
            "size": 45,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 21,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.Threading.Tasks.UnobservedTaskExceptionEventArgs extends System.EventArgs",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.AggregateException exception)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Threading.Tasks.ThreadPoolTaskScheduler extends System.Threading.Tasks.TaskScheduler",
        "size": 146,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void QueueTask(class System.Threading.Tasks.Task task)",
            "size": 87,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryExecuteTaskInline(class System.Threading.Tasks.Task task, bool taskWasPreviouslyQueued)",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryDequeue(class System.Threading.Tasks.Task task)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void NotifyWorkItemProgress()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_RequiresAtomicStartTransition()",
            "size": 2,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.Threading.Tasks.CausalityTraceLevel extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.Threading.Tasks.AsyncCausalityStatus extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.Threading.Tasks.CausalityRelation extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.Threading.Tasks.CausalitySynchronousWork extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Threading.Tasks.AsyncCausalityTracer extends System.Object",
        "size": 6,
        "children": [
          {
            "type": "method",
            "name": "bool get_LoggingOn()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "void TraceOperationCreation(valuetype System.Threading.Tasks.CausalityTraceLevel traceLevel, int32 taskId, string operationName, uint64 relatedContext)",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "void TraceOperationCompletion(valuetype System.Threading.Tasks.CausalityTraceLevel traceLevel, int32 taskId, valuetype System.Threading.Tasks.AsyncCausalityStatus status)",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "void TraceSynchronousWorkStart(valuetype System.Threading.Tasks.CausalityTraceLevel traceLevel, int32 taskId, valuetype System.Threading.Tasks.CausalitySynchronousWork work)",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "void TraceSynchronousWorkCompletion(valuetype System.Threading.Tasks.CausalityTraceLevel traceLevel, valuetype System.Threading.Tasks.CausalitySynchronousWork work)",
            "size": 1,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Text.Decoder extends System.Object",
        "size": 384,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.DecoderFallbackBuffer get_FallbackBuffer()",
            "size": 58,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_InternalHasFallbackBuffer()",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "void Reset()",
            "size": 52,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetCharCount(uint8[] bytes, int32 index, int32 count, bool flush)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetCharCount(uint8* bytes, int32 count, bool flush)",
            "size": 77,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetChars(uint8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex, bool flush)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetChars(uint8* bytes, int32 byteCount, char* chars, int32 charCount, bool flush)",
            "size": 156,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable sealed beforefieldinit System.Text.InternalDecoderBestFitFallback extends System.Text.DecoderFallback",
        "size": 80,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Text.Encoding encoding)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.DecoderFallbackBuffer CreateFallbackBuffer()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_MaxCharCount()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object \u0027value\u0027)",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Text.InternalDecoderBestFitFallbackBuffer extends System.Text.DecoderFallbackBuffer",
        "size": 464,
        "children": [
          {
            "type": "method",
            "name": "object get_InternalSyncObject()",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Text.InternalDecoderBestFitFallback fallback)",
            "size": 97,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Fallback(uint8[] bytesUnknown, int32 index)",
            "size": 56,
            "children": null
          },
          {
            "type": "method",
            "name": "char GetNextChar()",
            "size": 54,
            "children": null
          },
          {
            "type": "method",
            "name": "void Reset()",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 InternalFallback(uint8[] bytes, uint8* pBytes)",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "char TryBestFit(uint8[] bytesCheck)",
            "size": 207,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Text.DecoderExceptionFallback extends System.Text.DecoderFallback",
        "size": 33,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.DecoderFallbackBuffer CreateFallbackBuffer()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_MaxCharCount()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object \u0027value\u0027)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 6,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Text.DecoderExceptionFallbackBuffer extends System.Text.DecoderFallbackBuffer",
        "size": 138,
        "children": [
          {
            "type": "method",
            "name": "bool Fallback(uint8[] bytesUnknown, int32 index)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "char GetNextChar()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "void Throw(uint8[] bytesUnknown, int32 index)",
            "size": 119,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Text.DecoderFallbackException extends System.ArgumentException",
        "size": 54,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, uint8[] bytesUnknown, int32 index)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Text.DecoderFallback extends System.Object",
        "size": 77,
        "children": [
          {
            "type": "method",
            "name": "class System.Text.DecoderFallback get_ReplacementFallback()",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.DecoderFallback get_ExceptionFallback()",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi beforefieldinit System.Text.DecoderFallbackBuffer extends System.Object",
        "size": 407,
        "children": [
          {
            "type": "method",
            "name": "void Reset()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void InternalReset()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void InternalInitialize(uint8* byteStart, char* charEnd)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool InternalFallback(uint8[] bytes, uint8* pBytes, char*\u0026 chars)",
            "size": 130,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 InternalFallback(uint8[] bytes, uint8* pBytes)",
            "size": 114,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowLastBytesRecursive(uint8[] bytesUnknown)",
            "size": 117,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Text.DecoderNLS extends System.Text.Decoder",
        "size": 561,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Text.Encoding encoding)",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "void Reset()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetCharCount(uint8[] bytes, int32 index, int32 count)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetCharCount(uint8[] bytes, int32 index, int32 count, bool flush)",
            "size": 106,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetCharCount(uint8* bytes, int32 count, bool flush)",
            "size": 70,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetChars(uint8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetChars(uint8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex, bool flush)",
            "size": 183,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetChars(uint8* bytes, int32 byteCount, char* chars, int32 charCount, bool flush)",
            "size": 107,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_MustFlush()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void ClearMustFlush()",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Text.DecoderReplacementFallback extends System.Text.DecoderFallback",
        "size": 236,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 46,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string replacement)",
            "size": 110,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_DefaultString()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.DecoderFallbackBuffer CreateFallbackBuffer()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_MaxCharCount()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object \u0027value\u0027)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Text.DecoderReplacementFallbackBuffer extends System.Text.DecoderFallbackBuffer",
        "size": 204,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Text.DecoderReplacementFallback fallback)",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Fallback(uint8[] bytesUnknown, int32 index)",
            "size": 57,
            "children": null
          },
          {
            "type": "method",
            "name": "char GetNextChar()",
            "size": 79,
            "children": null
          },
          {
            "type": "method",
            "name": "void Reset()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 InternalFallback(uint8[] bytes, uint8* pBytes)",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Text.Encoder extends System.Object",
        "size": 375,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.EncoderFallback get_Fallback()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.EncoderFallbackBuffer get_FallbackBuffer()",
            "size": 58,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_InternalHasFallbackBuffer()",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "void Reset()",
            "size": 56,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetByteCount(char* chars, int32 count, bool flush)",
            "size": 81,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetBytes(char* chars, int32 charCount, uint8* bytes, int32 byteCount, bool flush)",
            "size": 156,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable beforefieldinit System.Text.InternalEncoderBestFitFallback extends System.Text.EncoderFallback",
        "size": 72,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Text.Encoding encoding)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.EncoderFallbackBuffer CreateFallbackBuffer()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_MaxCharCount()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object \u0027value\u0027)",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Text.InternalEncoderBestFitFallbackBuffer extends System.Text.EncoderFallbackBuffer",
        "size": 578,
        "children": [
          {
            "type": "method",
            "name": "object get_InternalSyncObject()",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Text.InternalEncoderBestFitFallback fallback)",
            "size": 97,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Fallback(char charUnknown, int32 index)",
            "size": 47,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index)",
            "size": 124,
            "children": null
          },
          {
            "type": "method",
            "name": "char GetNextChar()",
            "size": 54,
            "children": null
          },
          {
            "type": "method",
            "name": "bool MovePrevious()",
            "size": 52,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Remaining()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "void Reset()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "char TryBestFit(char cUnknown)",
            "size": 131,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Text.EncoderExceptionFallback extends System.Text.EncoderFallback",
        "size": 33,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.EncoderFallbackBuffer CreateFallbackBuffer()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_MaxCharCount()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object \u0027value\u0027)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 6,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Text.EncoderExceptionFallbackBuffer extends System.Text.EncoderFallbackBuffer",
        "size": 180,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Fallback(char charUnknown, int32 index)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index)",
            "size": 137,
            "children": null
          },
          {
            "type": "method",
            "name": "char GetNextChar()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool MovePrevious()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Remaining()",
            "size": 2,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Text.EncoderFallbackException extends System.ArgumentException",
        "size": 182,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, char charUnknown, int32 index)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, char charUnknownHigh, char charUnknownLow, int32 index)",
            "size": 128,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Text.EncoderFallback extends System.Object",
        "size": 67,
        "children": [
          {
            "type": "method",
            "name": "class System.Text.EncoderFallback get_ReplacementFallback()",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.EncoderFallback get_ExceptionFallback()",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi beforefieldinit System.Text.EncoderFallbackBuffer extends System.Object",
        "size": 394,
        "children": [
          {
            "type": "method",
            "name": "void Reset()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void InternalReset()",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "void InternalInitialize(char* charStart, char* charEnd, class System.Text.EncoderNLS encoder, bool setEncoder)",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "char InternalGetNextChar()",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "bool InternalFallback(char ch, char*\u0026 chars)",
            "size": 242,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowLastCharRecursive(int32 charRecursive)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Text.EncoderNLS extends System.Text.Encoder",
        "size": 552,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Text.Encoding encoding)",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "void Reset()",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetByteCount(char[] chars, int32 index, int32 count, bool flush)",
            "size": 112,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetByteCount(char* chars, int32 count, bool flush)",
            "size": 70,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, uint8[] bytes, int32 byteIndex, bool flush)",
            "size": 183,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetBytes(char* chars, int32 charCount, uint8* bytes, int32 byteCount, bool flush)",
            "size": 108,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_MustFlush()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void ClearMustFlush()",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Text.EncoderReplacementFallback extends System.Text.EncoderFallback",
        "size": 236,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 46,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string replacement)",
            "size": 110,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_DefaultString()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.EncoderFallbackBuffer CreateFallbackBuffer()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_MaxCharCount()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object \u0027value\u0027)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Text.EncoderReplacementFallbackBuffer extends System.Text.EncoderFallbackBuffer",
        "size": 501,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Text.EncoderReplacementFallback fallback)",
            "size": 44,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Fallback(char charUnknown, int32 index)",
            "size": 126,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index)",
            "size": 154,
            "children": null
          },
          {
            "type": "method",
            "name": "char GetNextChar()",
            "size": 79,
            "children": null
          },
          {
            "type": "method",
            "name": "bool MovePrevious()",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Remaining()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "void Reset()",
            "size": 30,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Text.StringBuilder extends System.Object",
        "size": 4559,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 capacity)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string \u0027value\u0027)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string \u0027value\u0027, int32 capacity)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string \u0027value\u0027, int32 startIndex, int32 length, int32 capacity)",
            "size": 211,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 capacity, int32 maxCapacity)",
            "size": 109,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 293,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Capacity()",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_MaxCapacity()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 163,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder Clear()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Length()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_Length(int32 \u0027value\u0027)",
            "size": 246,
            "children": null
          },
          {
            "type": "method",
            "name": "char get_Chars(int32 index)",
            "size": 55,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder Append(char \u0027value\u0027, int32 repeatCount)",
            "size": 132,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder Append(string \u0027value\u0027)",
            "size": 140,
            "children": null
          },
          {
            "type": "method",
            "name": "void AppendHelper(string \u0027value\u0027)",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder Append(string \u0027value\u0027, int32 startIndex, int32 count)",
            "size": 126,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder AppendLine()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void CopyTo(int32 sourceIndex, valuetype System.Span\u00601\u003Cchar\u003E destination, int32 count)",
            "size": 166,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder Remove(int32 startIndex, int32 length)",
            "size": 106,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder Append(char \u0027value\u0027)",
            "size": 54,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder Append(int32 \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder AppendSpanFormattable\u003C(System.IFormattable) T\u003E(!!T \u0027value\u0027)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder Append(object \u0027value\u0027)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder Insert(int32 index, string \u0027value\u0027)",
            "size": 62,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder Insert(int32 index, char \u0027value\u0027)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder AppendFormat(string format, object arg0)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder AppendFormat(string format, object arg0, object arg1)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder AppendFormat(class System.IFormatProvider provider, string format, object arg0)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void FormatError()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder AppendFormatHelper(class System.IFormatProvider provider, string format, valuetype System.ParamsArray args)",
            "size": 988,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder Append(char* \u0027value\u0027, int32 valueCount)",
            "size": 198,
            "children": null
          },
          {
            "type": "method",
            "name": "void Insert(int32 index, char* \u0027value\u0027, int32 valueCount)",
            "size": 55,
            "children": null
          },
          {
            "type": "method",
            "name": "void ReplaceInPlaceAtChunk(class System.Text.StringBuilder\u0026 chunk, int32\u0026 indexInChunk, char* \u0027value\u0027, int32 count)",
            "size": 89,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThreadSafeCopy(char* sourcePtr, char[] destination, int32 destinationIndex, int32 count)",
            "size": 56,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThreadSafeCopy(char[] source, int32 sourceIndex, valuetype System.Span\u00601\u003Cchar\u003E destination, int32 destinationIndex, int32 count)",
            "size": 115,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder FindChunkForIndex(int32 index)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Span\u00601\u003Cchar\u003E get_RemainingCurrentChunk()",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder Next(class System.Text.StringBuilder chunk)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "void ExpandByABlock(int32 minBlockCharCount)",
            "size": 141,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Text.StringBuilder from)",
            "size": 67,
            "children": null
          },
          {
            "type": "method",
            "name": "void MakeRoom(int32 index, int32 count, [out] class System.Text.StringBuilder\u0026 chunk, [out] int32\u0026 indexInChunk, bool doNotMoveFollowingChars)",
            "size": 344,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 size, int32 maxCapacity, class System.Text.StringBuilder previousBlock)",
            "size": 55,
            "children": null
          },
          {
            "type": "method",
            "name": "void Remove(int32 startIndex, int32 count, [out] class System.Text.StringBuilder\u0026 chunk, [out] int32\u0026 indexInChunk)",
            "size": 218,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Text.StringBuilderCache extends System.Object",
        "size": 81,
        "children": [
          {
            "type": "method",
            "name": "class System.Text.StringBuilder Acquire([opt] int32 capacity)",
            "size": 48,
            "children": null
          },
          {
            "type": "method",
            "name": "void Release(class System.Text.StringBuilder sb)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetStringAndRelease(class System.Text.StringBuilder sb)",
            "size": 13,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Text.UTF8Encoding extends System.Text.Encoding",
        "size": 6962,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(bool encoderShouldEmitUTF8Identifier)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes)",
            "size": 40,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetDefaultFallbacks()",
            "size": 64,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetByteCount(char[] chars, int32 index, int32 count)",
            "size": 122,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetByteCount(char* chars, int32 count)",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, uint8[] bytes, int32 byteIndex)",
            "size": 196,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetBytes(char* chars, int32 charCount, uint8* bytes, int32 byteCount)",
            "size": 87,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetCharCount(uint8[] bytes, int32 index, int32 count)",
            "size": 119,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetCharCount(uint8* bytes, int32 count)",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetChars(uint8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex)",
            "size": 196,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetChars(uint8* bytes, int32 byteCount, char* chars, int32 charCount)",
            "size": 88,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetByteCount(char* chars, int32 count, class System.Text.EncoderNLS baseEncoder)",
            "size": 1093,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 PtrDiff(char* a, char* b)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 PtrDiff(uint8* a, uint8* b)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool InRange(int32 ch, int32 start, int32 end)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetBytes(char* chars, int32 charCount, uint8* bytes, int32 byteCount, class System.Text.EncoderNLS baseEncoder)",
            "size": 1373,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetCharCount(uint8* bytes, int32 count, class System.Text.DecoderNLS baseDecoder)",
            "size": 914,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetChars(uint8* bytes, int32 byteCount, char* chars, int32 charCount, class System.Text.DecoderNLS baseDecoder)",
            "size": 1726,
            "children": null
          },
          {
            "type": "method",
            "name": "bool FallbackInvalidByteSequence(uint8*\u0026 pSrc, int32 ch, class System.Text.DecoderFallbackBuffer fallback, char*\u0026 pTarget)",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 FallbackInvalidByteSequence(uint8* pSrc, int32 ch, class System.Text.DecoderFallbackBuffer fallback)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "instance uint8[] GetBytesUnknown(uint8*\u0026 pSrc, int32 ch)",
            "size": 327,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.Decoder GetDecoder()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.Encoder GetEncoder()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetMaxByteCount(int32 charCount)",
            "size": 88,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetMaxCharCount(int32 byteCount)",
            "size": 83,
            "children": null
          },
          {
            "type": "method",
            "name": "instance uint8[] GetPreamble()",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.ReadOnlySpan\u00601\u003Cuint8\u003E get_Preamble()",
            "size": 57,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object \u0027value\u0027)",
            "size": 65,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 34,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Text.ValueStringBuilder extends System.ValueType",
        "size": 702,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(valuetype System.Span\u00601\u003Cchar\u003E initialBuffer)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryCopyTo(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten)",
            "size": 56,
            "children": null
          },
          {
            "type": "method",
            "name": "void Append(char c)",
            "size": 53,
            "children": null
          },
          {
            "type": "method",
            "name": "void Append(string s)",
            "size": 68,
            "children": null
          },
          {
            "type": "method",
            "name": "void AppendSlow(string s)",
            "size": 86,
            "children": null
          },
          {
            "type": "method",
            "name": "void Append(char c, int32 count)",
            "size": 90,
            "children": null
          },
          {
            "type": "method",
            "name": "void Append(char* \u0027value\u0027, int32 length)",
            "size": 96,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Span\u00601\u003Cchar\u003E AppendSpan(int32 length)",
            "size": 53,
            "children": null
          },
          {
            "type": "method",
            "name": "void GrowAndAppend(char c)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void Grow(int32 requiredAdditionalCapacity)",
            "size": 98,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 30,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Text.ValueUtf8Converter extends System.ValueType",
        "size": 167,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(valuetype System.Span\u00601\u003Cuint8\u003E initialBuffer)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Span\u00601\u003Cuint8\u003E ConvertAndTerminateString(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E \u0027value\u0027)",
            "size": 122,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 30,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Text.Encoding extends System.Object",
        "size": 1261,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 codePage)",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetDefaultFallbacks()",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnDeserializing()",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnDeserialized()",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnDeserializing(valuetype System.Runtime.Serialization.StreamingContext ctx)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext ctx)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnSerializing(valuetype System.Runtime.Serialization.StreamingContext ctx)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "instance uint8[] GetPreamble()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.ReadOnlySpan\u00601\u003Cuint8\u003E get_Preamble()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_EncodingName()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.EncoderFallback get_EncoderFallback()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.DecoderFallback get_DecoderFallback()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetByteCount(char* chars, int32 count)",
            "size": 90,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetByteCount(char* chars, int32 count, class System.Text.EncoderNLS encoder)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetBytes(char* chars, int32 charCount, uint8* bytes, int32 byteCount, class System.Text.EncoderNLS encoder)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetBytes(char* chars, int32 charCount, uint8* bytes, int32 byteCount)",
            "size": 164,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetCharCount(uint8* bytes, int32 count)",
            "size": 87,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetCharCount(uint8* bytes, int32 count, class System.Text.DecoderNLS decoder)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetChars(uint8* bytes, int32 byteCount, char* chars, int32 charCount)",
            "size": 164,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetChars(uint8* bytes, int32 byteCount, char* chars, int32 charCount, class System.Text.DecoderNLS decoder)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetString(uint8* bytes, int32 byteCount)",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_CodePage()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.Decoder GetDecoder()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.Encoding CreateDefaultEncoding()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void setReadOnly([opt] bool \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.Encoding get_Default()",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.Encoder GetEncoder()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.Encoding get_UTF8()",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object \u0027value\u0027)",
            "size": 65,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "instance char[] GetBestFitUnicodeToBytesData()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "instance char[] GetBestFitBytesToUnicodeData()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowBytesOverflow()",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowBytesOverflow(class System.Text.EncoderNLS encoder, bool nothingEncoded)",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowCharsOverflow()",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowCharsOverflow(class System.Text.DecoderNLS decoder, bool nothingDecoded)",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetBytes(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E chars, valuetype System.Span\u00601\u003Cuint8\u003E bytes)",
            "size": 43,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Text.EncodingHelper extends System.Object",
        "size": 179,
        "children": [
          {
            "type": "method",
            "name": "class System.Text.Encoding get_UTF8()",
            "size": 81,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.Encoding GetDefaultEncoding()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.Encoding get_UTF8Unmarked()",
            "size": 81,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Security.SecurityException extends System.SystemException",
        "size": 116,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 73,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Security.SecurityManager extends System.Object",
        "size": 1,
        "children": [
          {
            "type": "method",
            "name": "void EnsureElevatedPermissions()",
            "size": 1,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Security.Policy.Evidence extends System.Object implements System.Collections.IEnumerable",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed System.Security.Permissions.SecurityAction extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Runtime.AmbiguousImplementationException extends System.Exception",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Runtime.RuntimeImports extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Runtime.Remoting.Contexts.Context extends System.Object",
        "size": 12,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi beforefieldinit System.Runtime.Remoting.Messaging.AsyncResult extends System.Object implements System.IAsyncResult, System.Threading.IThreadPoolWorkItem",
        "size": 23,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "object get_AsyncDelegate()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void System.Threading.IThreadPoolWorkItem.MarkAborted(class System.Threading.ThreadAbortException tae)",
            "size": 1,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Runtime.Remoting.Messaging.IMessage",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Runtime.Remoting.Messaging.IMessageCtrl",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi serializable beforefieldinit System.Runtime.Remoting.Messaging.MonoMethodMessage extends System.Object",
        "size": 213,
        "children": [
          {
            "type": "method",
            "name": "void InitMessage(class System.Reflection.RuntimeMethodInfo \u0027method\u0027, object[] out_args)",
            "size": 213,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.Runtime.Remoting.Messaging.CallType extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Runtime.Remoting.Messaging.LogicalCallContext extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Runtime.Versioning.NonVersionableAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Runtime.Serialization.IFormatterConverter",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Runtime.Serialization.SerializationException extends System.SystemException",
        "size": 62,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.Serialization.SerializationInfoEnumerator extends System.Object implements System.Collections.IEnumerator",
        "size": 169,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string[] members, object[] info, class System.Type[] types, int32 numItems)",
            "size": 52,
            "children": null
          },
          {
            "type": "method",
            "name": "bool MoveNext()",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "object get_Value()",
            "size": 33,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Runtime.Serialization.SerializationEventHandler extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Runtime.Serialization.SerializationEvents extends System.Object",
        "size": 322,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Type t)",
            "size": 99,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Collections.Generic.List\u00601\u003Cclass System.Reflection.MethodInfo\u003E GetMethodsWithAttribute(class System.Type attribute, class System.Type t)",
            "size": 107,
            "children": null
          },
          {
            "type": "method",
            "name": "void InvokeOnDeserialized(object obj, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void InvokeOnDelegate(object obj, valuetype System.Runtime.Serialization.StreamingContext context, class System.Collections.Generic.List\u00601\u003Cclass System.Reflection.MethodInfo\u003E methods)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Runtime.Serialization.SerializationEventHandler AddOnDelegate(object obj, class System.Runtime.Serialization.SerializationEventHandler \u0027handler\u0027, class System.Collections.Generic.List\u00601\u003Cclass System.Reflection.MethodInfo\u003E methods)",
            "size": 82,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Runtime.Serialization.SerializationEventsCache extends System.Object",
        "size": 54,
        "children": [
          {
            "type": "method",
            "name": "class System.Runtime.Serialization.SerializationEvents GetSerializationEventsForType(class System.Type t)",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Runtime.Serialization.ISafeSerializationData",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi serializable sealed beforefieldinit System.Runtime.Serialization.SafeSerializationManager extends System.Object",
        "size": 201,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 90,
            "children": null
          },
          {
            "type": "method",
            "name": "void CompleteDeserialization(object deserializedObject)",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 44,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.Serialization.OptionalFieldAttribute extends System.Attribute",
        "size": 42,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_VersionAdded(int32 \u0027value\u0027)",
            "size": 28,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.Serialization.OnSerializingAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.Serialization.OnSerializedAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.Serialization.OnDeserializingAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.Serialization.OnDeserializedAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.Serialization.SerializationInfo extends System.Object",
        "size": 465,
        "children": [
          {
            "type": "method",
            "name": "class System.Runtime.Serialization.SerializationInfoEnumerator GetEnumerator()",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 FindElement(string name)",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "object GetElement(string name, [out] class System.Type\u0026 foundType)",
            "size": 57,
            "children": null
          },
          {
            "type": "method",
            "name": "object GetElementNoThrow(string name, [out] class System.Type\u0026 foundType)",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "object GetValue(string name, class System.Type \u0027type\u0027)",
            "size": 86,
            "children": null
          },
          {
            "type": "method",
            "name": "object GetValueNoThrow(string name, class System.Type \u0027type\u0027)",
            "size": 47,
            "children": null
          },
          {
            "type": "method",
            "name": "bool GetBoolean(string name)",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetInt32(string name)",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 GetInt64(string name)",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetString(string name)",
            "size": 46,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Runtime.Serialization.StreamingContext extends System.ValueType",
        "size": 66,
        "children": [
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 52,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Runtime.Serialization.StreamingContextStates get_State()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed System.Runtime.Serialization.StreamingContextStates extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Runtime.InteropServices.CharSet extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Runtime.InteropServices.MarshalDirectiveException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Runtime.InteropServices.MemoryMarshal extends System.Object",
        "size": 102,
        "children": [
          {
            "type": "method",
            "name": "static !!T\u0026 GetReference\u003CT\u003E(valuetype System.Span\u00601\u003C!!T\u003E span)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "static !!T\u0026 GetReference\u003CT\u003E(valuetype System.ReadOnlySpan\u00601\u003C!!T\u003E span)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "static !!T\u0026 GetNonNullPinnableReference\u003CT\u003E(valuetype System.Span\u00601\u003C!!T\u003E span)",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "static !!T\u0026 GetNonNullPinnableReference\u003CT\u003E(valuetype System.ReadOnlySpan\u00601\u003C!!T\u003E span)",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.ReadOnlySpan\u00601\u003C!!T\u003E CreateReadOnlySpan\u003CT\u003E(!!T\u0026 reference, int32 length)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Runtime.InteropServices.GCHandleType extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public abstract auto ansi beforefieldinit System.Runtime.InteropServices.SafeBuffer extends Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid",
        "size": 123,
        "children": [
          {
            "type": "method",
            "name": "void AcquirePointer(uint8*\u0026 pointer)",
            "size": 52,
            "children": null
          },
          {
            "type": "method",
            "name": "void ReleasePointer()",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.InvalidOperationException NotInitialized()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 29,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Runtime.InteropServices.ICustomMarshaler",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.InteropServices.ComVisibleAttribute extends System.Attribute",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(bool visibility)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed System.Runtime.InteropServices.VarEnum extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed System.Runtime.InteropServices.UnmanagedType extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.InteropServices.ComImportAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.InteropServices.GuidAttribute extends System.Attribute",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string guid)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.InteropServices.PreserveSigAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.InteropServices.InAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.InteropServices.OutAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.InteropServices.OptionalAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.InteropServices.DllImportAttribute extends System.Attribute",
        "size": 347,
        "children": [
          {
            "type": "method",
            "name": "class System.Attribute GetCustomAttribute(class System.Reflection.RuntimeMethodInfo \u0027method\u0027)",
            "size": 271,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string dllName, string entryPoint, valuetype System.Runtime.InteropServices.CharSet charSet, bool exactSpelling, bool setLastError, bool preserveSig, valuetype System.Runtime.InteropServices.CallingConvention callingConvention, bool bestFitMapping, bool throwOnUnmappableChar)",
            "size": 76,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.InteropServices.FieldOffsetAttribute extends System.Attribute",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(int32 offset)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed System.Runtime.InteropServices.CallingConvention extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public abstract sequential ansi beforefieldinit System.Runtime.InteropServices.SafeHandle extends System.Runtime.ConstrainedExecution.CriticalFinalizerObject implements System.IDisposable",
        "size": 441,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int invalidHandleValue, bool ownsHandle)",
            "size": 44,
            "children": null
          },
          {
            "type": "method",
            "name": "void Finalize()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetHandle(native int handle)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int DangerousGetHandle()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsClosed()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void Close()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose(bool disposing)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetHandleAsInvalid()",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "void DangerousAddRef(bool\u0026 success)",
            "size": 65,
            "children": null
          },
          {
            "type": "method",
            "name": "void DangerousRelease()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void InternalDispose()",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "void InternalFinalize()",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "void DangerousReleaseInternal(bool dispose)",
            "size": 166,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Runtime.InteropServices.GCHandle extends System.ValueType",
        "size": 174,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(object \u0027value\u0027, valuetype System.Runtime.InteropServices.GCHandleType \u0027type\u0027)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsAllocated()",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "object get_Target()",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Runtime.InteropServices.GCHandle Alloc(object \u0027value\u0027, valuetype System.Runtime.InteropServices.GCHandleType \u0027type\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void Free()",
            "size": 44,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(valuetype System.Runtime.InteropServices.GCHandle a, valuetype System.Runtime.InteropServices.GCHandle b)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object o)",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Runtime.InteropServices.Marshal extends System.Object",
        "size": 398,
        "children": [
          {
            "type": "method",
            "name": "void StructureToPtr\u003CT\u003E(!!T structure, native int ptr, bool fDeleteOld)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Runtime.InteropServices.ICustomMarshaler GetCustomMarshalerInstance(class System.Type \u0027type\u0027, string cookie)",
            "size": 361,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 23,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Runtime.InteropServices.MarshalAsAttribute extends System.Attribute",
        "size": 12,
        "children": [
          {
            "type": "method",
            "name": "class System.Runtime.InteropServices.MarshalAsAttribute Copy()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs extends System.EventArgs",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.ExceptionServices.ExceptionDispatchInfo extends System.Object",
        "size": 135,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Exception exception)",
            "size": 71,
            "children": null
          },
          {
            "type": "method",
            "name": "object get_BinaryStackTraceArray()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Runtime.ExceptionServices.ExceptionDispatchInfo Capture(class System.Exception source)",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception get_SourceException()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void Throw()",
            "size": 19,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Runtime.ConstrainedExecution.Cer extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Runtime.ConstrainedExecution.Consistency extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.ConstrainedExecution.ReliabilityContractAttribute extends System.Attribute",
        "size": 21,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(valuetype System.Runtime.ConstrainedExecution.Consistency consistencyGuarantee, valuetype System.Runtime.ConstrainedExecution.Cer cer)",
            "size": 21,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi beforefieldinit System.Runtime.ConstrainedExecution.CriticalFinalizerObject extends System.Object",
        "size": 17,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void Finalize()",
            "size": 10,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Runtime.CompilerServices.AsyncStateMachineAttribute extends System.Runtime.CompilerServices.StateMachineAttribute",
        "size": 8,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Type stateMachineType)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Runtime.CompilerServices.CompilerGeneratedAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.CompilerServices.DisablePrivateReflectionAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.CompilerServices.ExtensionAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Runtime.CompilerServices.IAsyncStateMachine",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Runtime.CompilerServices.ICriticalNotifyCompletion",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Runtime.CompilerServices.IntrinsicAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.CompilerServices.IsByRefLikeAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.CompilerServices.IsReadOnlyAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Runtime.CompilerServices.IsVolatile extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Runtime.CompilerServices.IteratorStateMachineAttribute extends System.Runtime.CompilerServices.StateMachineAttribute",
        "size": 8,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Type stateMachineType)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Runtime.CompilerServices.RuntimeCompatibilityAttribute extends System.Attribute",
        "size": 15,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_WrapNonExceptionThrows(bool \u0027value\u0027)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Runtime.CompilerServices.RuntimeFeature extends System.Object",
        "size": 2,
        "children": [
          {
            "type": "method",
            "name": "bool get_IsDynamicCodeSupported()",
            "size": 2,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Runtime.CompilerServices.RuntimeWrappedException extends System.Exception",
        "size": 66,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(object thrownObject)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 36,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Runtime.CompilerServices.StateMachineAttribute extends System.Attribute",
        "size": 21,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Type stateMachineType)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_StateMachineType()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Runtime.CompilerServices.StringFreezingAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.CompilerServices.TypeForwardedFromAttribute extends System.Attribute",
        "size": 33,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string assemblyFullName)",
            "size": 33,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Runtime.CompilerServices.TaskAwaiter extends System.ValueType implements System.Runtime.CompilerServices.ICriticalNotifyCompletion",
        "size": 285,
        "children": [
          {
            "type": "method",
            "name": "void UnsafeOnCompleted(class System.Action continuation)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void ValidateEnd(class System.Threading.Tasks.Task task)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void HandleNonSuccessAndDebuggerNotification(class System.Threading.Tasks.Task task)",
            "size": 47,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowForNonSuccess(class System.Threading.Tasks.Task task)",
            "size": 75,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnCompletedInternal(class System.Threading.Tasks.Task task, class System.Action continuation, bool continueOnCapturedContext, bool flowExecutionContext)",
            "size": 40,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Action OutputWaitEtwEvents(class System.Threading.Tasks.Task task, class System.Action continuation)",
            "size": 93,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Runtime.CompilerServices.TaskAwaiter\u00601\u003CTResult\u003E extends System.ValueType implements System.Runtime.CompilerServices.ICriticalNotifyCompletion",
        "size": 46,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Threading.Tasks.Task\u00601\u003C!TResult\u003E task)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void UnsafeOnCompleted(class System.Action continuation)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !TResult GetResult()",
            "size": 23,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Runtime.CompilerServices.ConfiguredTaskAwaitable\u00601\u003CTResult\u003E extends System.ValueType",
        "size": 21,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Threading.Tasks.Task\u00601\u003C!TResult\u003E task, bool continueOnCapturedContext)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Runtime.CompilerServices.ConfiguredTaskAwaitable\u00601/ConfiguredTaskAwaiter\u003C!TResult\u003E GetAwaiter()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Runtime.CompilerServices.ReflectionBlockedAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Runtime.CompilerServices.AsyncTaskMethodBuilder\u00601\u003CTResult\u003E extends System.ValueType",
        "size": 1012,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.Runtime.CompilerServices.AsyncTaskMethodBuilder\u00601\u003C!TResult\u003E Create()",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "void Start\u003C(System.Runtime.CompilerServices.IAsyncStateMachine) TStateMachine\u003E(!!TStateMachine\u0026 stateMachine)",
            "size": 67,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetStateMachine(class System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void AwaitUnsafeOnCompleted\u003C(System.Runtime.CompilerServices.ICriticalNotifyCompletion) TAwaiter,(System.Runtime.CompilerServices.IAsyncStateMachine) TStateMachine\u003E(!!TAwaiter\u0026 awaiter, !!TStateMachine\u0026 stateMachine)",
            "size": 100,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task\u00601\u003C!TResult\u003E get_Task()",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetResult(!TResult result)",
            "size": 87,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetException(class System.Exception exception)",
            "size": 82,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task\u00601\u003C!TResult\u003E GetTaskForResult(!TResult result)",
            "size": 608,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 20,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Runtime.CompilerServices.AsyncTaskCache extends System.Object",
        "size": 90,
        "children": [
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task\u00601\u003Cint32\u003E[] CreateInt32Tasks()",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task\u00601\u003C!!TResult\u003E CreateCacheableTask\u003CTResult\u003E(!!TResult result)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 33,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Runtime.CompilerServices.AsyncMethodBuilderCore extends System.ValueType",
        "size": 497,
        "children": [
          {
            "type": "method",
            "name": "void SetStateMachine(class System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)",
            "size": 46,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Action GetCompletionAction(class System.Threading.Tasks.Task taskForTracing, class System.Runtime.CompilerServices.AsyncMethodBuilderCore/MoveNextRunner\u0026 runnerToInitialize)",
            "size": 141,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Action OutputAsyncCausalityEvents(class System.Threading.Tasks.Task innerTask, class System.Action continuation)",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "void PostBoxInitialization(class System.Runtime.CompilerServices.IAsyncStateMachine stateMachine, class System.Runtime.CompilerServices.AsyncMethodBuilderCore/MoveNextRunner runner, class System.Threading.Tasks.Task builtTask)",
            "size": 96,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowAsync(class System.Exception exception, class System.Threading.SynchronizationContext targetContext)",
            "size": 117,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Action CreateContinuationWrapper(class System.Action continuation, class System.Action invokeAction, [opt] class System.Threading.Tasks.Task innerTask)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Threading.Tasks.Task TryGetContinuationTask(class System.Action action)",
            "size": 27,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed System.Runtime.CompilerServices.LoadHint extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Runtime.CompilerServices.DefaultDependencyAttribute extends System.Attribute",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(valuetype System.Runtime.CompilerServices.LoadHint loadHintArgument)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed System.Runtime.CompilerServices.CompilationRelaxations extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Runtime.CompilerServices.CompilationRelaxationsAttribute extends System.Attribute",
        "size": 28,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(int32 relaxations)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(valuetype System.Runtime.CompilerServices.CompilationRelaxations relaxations)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.CompilerServices.InternalsVisibleToAttribute extends System.Attribute",
        "size": 29,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string assemblyName)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_AllInternalsVisible(bool \u0027value\u0027)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Runtime.CompilerServices.FriendAccessAllowedAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed System.Runtime.CompilerServices.MethodImplOptions extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Runtime.CompilerServices.MethodImplAttribute extends System.Attribute",
        "size": 29,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(valuetype System.Reflection.MethodImplAttributes methodImplAttributes)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Runtime.CompilerServices.TypeDependencyAttribute extends System.Attribute",
        "size": 28,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string typeName)",
            "size": 28,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Runtime.CompilerServices.JitHelpers extends System.Object",
        "size": 21,
        "children": [
          {
            "type": "method",
            "name": "static !!T UnsafeCast\u003Cclass T\u003E(object o)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 UnsafeEnumCast\u003Cvaluetype .ctor (System.ValueType) T\u003E(!!T val)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 UnsafeEnumCastLong\u003Cvaluetype .ctor (System.ValueType) T\u003E(!!T val)",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Runtime.CompilerServices.Ephemeron extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Runtime.CompilerServices.ConditionalWeakTable\u00602\u003Cclass TKey,class TValue\u003E extends System.Object implements class System.Collections.Generic.IEnumerable\u00601\u003Cvaluetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E\u003E, System.Collections.IEnumerable",
        "size": 1028,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "void Finalize()",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "void RehashWithoutResize()",
            "size": 276,
            "children": null
          },
          {
            "type": "method",
            "name": "void RecomputeSize()",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "void Rehash()",
            "size": 306,
            "children": null
          },
          {
            "type": "method",
            "name": "void Add(!TKey key, !TValue \u0027value\u0027)",
            "size": 274,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Collections.Generic.IEnumerator\u00601\u003Cvaluetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E\u003E \u0027System.Collections.Generic.IEnumerable\u003CSystem.Collections.Generic.KeyValuePair\u003CTKey,TValue\u003E\u003E.GetEnumerator\u0027()",
            "size": 60,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Runtime.CompilerServices.RuntimeHelpers extends System.Object",
        "size": 96,
        "children": [
          {
            "type": "method",
            "name": "void InitializeArray(class System.Array \u0027array\u0027, valuetype System.RuntimeFieldHandle fldHandle)",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode(object o)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryEnsureSufficientExecutionStack()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "void PrepareConstrainedRegions()",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsReferenceOrContainsReferences\u003CT\u003E()",
            "size": 40,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Runtime.CompilerServices.Unsafe extends System.Object",
        "size": 84,
        "children": [
          {
            "type": "method",
            "name": "static !!T\u0026 Add\u003CT\u003E(!!T\u0026 source, int32 elementOffset)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "static !!T\u0026 Add\u003CT\u003E(!!T\u0026 source, native int elementOffset)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "static !!T\u0026 AddByteOffset\u003CT\u003E(!!T\u0026 source, native int byteOffset)",
            "size": 4,
            "children": null
          },
          {
            "type": "method",
            "name": "bool AreSame\u003CT\u003E(!!T\u0026 left, !!T\u0026 right)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "static !!T As\u003Cclass T\u003E(object o)",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "static !!TTo\u0026 As\u003CTFrom,TTo\u003E(!!TFrom\u0026 source)",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "static void* AsPointer\u003CT\u003E(!!T\u0026 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "static !!T\u0026 AsRef\u003CT\u003E(void* source)",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "static !!T Read\u003CT\u003E(void* source)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "static !!T ReadUnaligned\u003CT\u003E(uint8\u0026 source)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 SizeOf\u003CT\u003E()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsAddressLessThan\u003CT\u003E(!!T\u0026 left, !!T\u0026 right)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "static !!T\u0026 AddByteOffset\u003CT\u003E(!!T\u0026 source, uint64 byteOffset)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Resources.NeutralResourcesLanguageAttribute extends System.Attribute",
        "size": 35,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string cultureName)",
            "size": 35,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Resources.SatelliteContractVersionAttribute extends System.Attribute",
        "size": 28,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string version)",
            "size": 28,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Resources.UltimateResourceFallbackLocation extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private abstract auto ansi beforefieldinit System.Resources.Win32Resource extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Resources.Win32VersionResource extends System.Resources.Win32Resource",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Reflection.AmbiguousMatchException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Reflection.AssemblyCompanyAttribute extends System.Attribute",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string company)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.AssemblyContentType extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Reflection.AssemblyCopyrightAttribute extends System.Attribute",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string copyright)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Reflection.AssemblyDefaultAliasAttribute extends System.Attribute",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string defaultAlias)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Reflection.AssemblyDelaySignAttribute extends System.Attribute",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(bool delaySign)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Reflection.AssemblyDescriptionAttribute extends System.Attribute",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string description)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Reflection.AssemblyFileVersionAttribute extends System.Attribute",
        "size": 28,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string version)",
            "size": 28,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Reflection.AssemblyInformationalVersionAttribute extends System.Attribute",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string informationalVersion)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Reflection.AssemblyKeyFileAttribute extends System.Attribute",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string keyFile)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.AssemblyNameFlags extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Reflection.AssemblyProductAttribute extends System.Attribute",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string product)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Reflection.AssemblyTitleAttribute extends System.Attribute",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string title)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi beforefieldinit System.Reflection.Binder extends System.Object",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.BindingFlags extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.CallingConventions extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Reflection.ConstructorInfo extends System.Reflection.MethodBase",
        "size": 78,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MemberTypes get_MemberType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(class System.Reflection.ConstructorInfo left, class System.Reflection.ConstructorInfo right)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Inequality(class System.Reflection.ConstructorInfo left, class System.Reflection.ConstructorInfo right)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 21,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Reflection.CustomAttributeFormatException extends System.FormatException",
        "size": 50,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Exception inner)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Reflection.DefaultMemberAttribute extends System.Attribute",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string memberName)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.EventAttributes extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Reflection.EventInfo extends System.Reflection.MemberInfo",
        "size": 187,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MemberTypes get_MemberType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_EventHandlerType()",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(class System.Reflection.EventInfo left, class System.Reflection.EventInfo right)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Inequality(class System.Reflection.EventInfo left, class System.Reflection.EventInfo right)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.EventInfo GetEventFromHandle(valuetype Mono.RuntimeEventHandle handle, valuetype System.RuntimeTypeHandle reflectedType)",
            "size": 70,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.ExceptionHandlingClauseOptions extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.FieldAttributes extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Reflection.FieldInfo extends System.Reflection.MemberInfo",
        "size": 314,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MemberTypes get_MemberType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsLiteral()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsNotSerialized()",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsStatic()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(class System.Reflection.FieldInfo left, class System.Reflection.FieldInfo right)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Inequality(class System.Reflection.FieldInfo left, class System.Reflection.FieldInfo right)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "object GetRawConstantValue()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.FieldInfo GetFieldFromHandle(valuetype System.RuntimeFieldHandle handle, valuetype System.RuntimeTypeHandle declaringType)",
            "size": 70,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetFieldOffset()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetPseudoCustomAttributes()",
            "size": 123,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.GenericParameterAttributes extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Reflection.ICustomAttributeProvider",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.ImageFileMachine extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Reflection.InvalidFilterCriteriaException extends System.ApplicationException",
        "size": 50,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Exception inner)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.Reflection.ManifestResourceInfo extends System.Object",
        "size": 49,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Reflection.Assembly containingAssembly, string containingFileName, valuetype System.Reflection.ResourceLocation resourceLocation)",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Assembly get_ReferencedAssembly()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_FileName()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.ResourceLocation get_ResourceLocation()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.MemberFilter extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Reflection.MemberInfo extends System.Object implements System.Reflection.ICustomAttributeProvider",
        "size": 285,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Module get_Module()",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_MetadataToken()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(class System.Reflection.MemberInfo left, class System.Reflection.MemberInfo right)",
            "size": 228,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.MemberTypes extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.MethodAttributes extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Reflection.MethodBase extends System.Reflection.MemberInfo",
        "size": 454,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.CallingConventions get_CallingConvention()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsStatic()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsVirtual()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsPublic()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsGenericMethod()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetGenericArguments()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(class System.Reflection.MethodBase left, class System.Reflection.MethodBase right)",
            "size": 96,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Inequality(class System.Reflection.MethodBase left, class System.Reflection.MethodBase right)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ParameterInfo[] GetParametersInternal()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetParametersCount()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatNameAndSig(bool serialization)",
            "size": 66,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetParameterTypes()",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ParameterInfo[] GetParametersNoCopy()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string ConstructParameters(class System.Type[] parameterTypes, valuetype System.Reflection.CallingConventions callingConvention, bool serialization)",
            "size": 140,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.MethodImplAttributes extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Reflection.MethodInfo extends System.Reflection.MethodBase",
        "size": 105,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MemberTypes get_MemberType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ReturnType()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetGenericArguments()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetGenericMethodDefinition()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Delegate CreateDelegate(class System.Type delegateType, object target)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(class System.Reflection.MethodInfo left, class System.Reflection.MethodInfo right)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Inequality(class System.Reflection.MethodInfo left, class System.Reflection.MethodInfo right)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_GenericParameterCount()",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Reflection.Missing extends System.Object",
        "size": 18,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract sequential ansi serializable beforefieldinit System.Reflection.Module extends System.Object implements System.Reflection.ICustomAttributeProvider",
        "size": 331,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Assembly get_Assembly()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Guid get_ModuleVersionId()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_ScopeName()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object o)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool FilterTypeNameImpl(class System.Type cls, object filterCriteria)",
            "size": 99,
            "children": null
          },
          {
            "type": "method",
            "name": "bool FilterTypeNameIgnoreCaseImpl(class System.Type cls, object filterCriteria)",
            "size": 132,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Guid GetModuleVersionId()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 35,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.ParameterAttributes extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable beforefieldinit System.Reflection.ParameterInfo extends System.Object implements System.Reflection.ICustomAttributeProvider",
        "size": 155,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.ParameterAttributes get_Attributes()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MemberInfo get_Member()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ParameterType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Position()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsIn()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsOptional()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsOut()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 28,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Reflection.ParameterModifier extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Reflection.Pointer extends System.Object",
        "size": 97,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(void* ptr, class System.Type ptrType)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "object Box(void* ptr, class System.Type \u0027type\u0027)",
            "size": 76,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.PortableExecutableKinds extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.ProcessorArchitecture extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.PropertyAttributes extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Reflection.PropertyInfo extends System.Reflection.MemberInfo",
        "size": 58,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MemberTypes get_MemberType()",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(class System.Reflection.PropertyInfo left, class System.Reflection.PropertyInfo right)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Inequality(class System.Reflection.PropertyInfo left, class System.Reflection.PropertyInfo right)",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Reflection.ReflectionTypeLoadException extends System.SystemException",
        "size": 208,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Type[] classes, class System.Exception[] exceptions)",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 41,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception[] get_LoaderExceptions()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Message()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string CreateString(bool isMessage)",
            "size": 111,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.ResourceAttributes extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.ResourceLocation extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Reflection.SignatureArrayType extends System.Reflection.SignatureHasElementType",
        "size": 112,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Reflection.SignatureType elementType, int32 rank, bool isMultiDim)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsArrayImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsByRefImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPointerImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsSZArray()",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsVariableBoundArray()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetArrayRank()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Suffix()",
            "size": 60,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Reflection.SignatureByRefType extends System.Reflection.SignatureHasElementType",
        "size": 35,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Reflection.SignatureType elementType)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsArrayImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsByRefImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPointerImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsSZArray()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsVariableBoundArray()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetArrayRank()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Suffix()",
            "size": 6,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Reflection.SignatureConstructedGenericType extends System.Reflection.SignatureType",
        "size": 329,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Type genericTypeDefinition, class System.Type[] typeArguments)",
            "size": 104,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsGenericTypeDefinition()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool HasElementTypeImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsArrayImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsByRefImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPointerImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsSZArray()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsVariableBoundArray()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsConstructedGenericType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsGenericParameter()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsGenericMethodParameter()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_ContainsGenericParameters()",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.SignatureType get_ElementType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetArrayRank()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetGenericTypeDefinition()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetGenericArguments()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] get_GenericTypeArguments()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_GenericParameterPosition()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 100,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi beforefieldinit System.Reflection.SignatureHasElementType extends System.Reflection.SignatureType",
        "size": 123,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Reflection.SignatureType elementType)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsGenericTypeDefinition()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool HasElementTypeImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsConstructedGenericType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsGenericParameter()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsGenericMethodParameter()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_ContainsGenericParameters()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.SignatureType get_ElementType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetGenericTypeDefinition()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetGenericArguments()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] get_GenericTypeArguments()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_GenericParameterPosition()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 23,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Reflection.SignaturePointerType extends System.Reflection.SignatureHasElementType",
        "size": 35,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Reflection.SignatureType elementType)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsArrayImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsByRefImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPointerImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsSZArray()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsVariableBoundArray()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetArrayRank()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Suffix()",
            "size": 6,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi beforefieldinit System.Reflection.SignatureType extends System.Type",
        "size": 436,
        "children": [
          {
            "type": "method",
            "name": "bool get_IsSignatureType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsGenericType()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MemberTypes get_MemberType()",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeArrayType()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeArrayType(int32 rank)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeByRefType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakePointerType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeGenericType(class System.Type[] typeArguments)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetElementType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_UnderlyingSystemType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_FullName()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_AssemblyQualifiedName()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Assembly get_Assembly()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Module get_Module()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ReflectedType()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_BaseType()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetInterfaces()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsAssignableFrom(class System.Type c)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_MetadataToken()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_DeclaringType()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodBase get_DeclaringMethod()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetGenericParameterConstraints()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.GenericParameterAttributes get_GenericParameterAttributes()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetEnumName(object \u0027value\u0027)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] GetEnumNames()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetEnumUnderlyingType()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCodeImpl()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.TypeAttributes GetAttributeFlagsImpl()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ConstructorInfo[] GetConstructors(valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.EventInfo GetEvent(string name, valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetMethodImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.PropertyInfo GetPropertyImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPrimitiveImpl()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsEnum()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsEquivalentTo(class System.Type other)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsSubclassOf(class System.Type c)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsValueTypeImpl()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeTypeHandle get_TypeHandle()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Reflection.SignatureTypeExtensions extends System.Object",
        "size": 713,
        "children": [
          {
            "type": "method",
            "name": "bool MatchesParameterTypeExactly(class System.Type pattern, class System.Reflection.ParameterInfo parameter)",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "bool MatchesExactly(class System.Reflection.SignatureType pattern, class System.Type actual)",
            "size": 321,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type TryResolveAgainstGenericMethod(class System.Reflection.SignatureType signatureType, class System.Reflection.MethodInfo genericMethod)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type TryResolve(class System.Reflection.SignatureType signatureType, class System.Type[] genericMethodParameters)",
            "size": 264,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type TryMakeArrayType(class System.Type \u0027type\u0027)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type TryMakeArrayType(class System.Type \u0027type\u0027, int32 rank)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type TryMakeByRefType(class System.Type \u0027type\u0027)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type TryMakePointerType(class System.Type \u0027type\u0027)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type TryMakeGenericType(class System.Type \u0027type\u0027, class System.Type[] instantiation)",
            "size": 17,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Reflection.TargetException extends System.ApplicationException",
        "size": 46,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Exception inner)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Reflection.TargetInvocationException extends System.ApplicationException",
        "size": 33,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Exception inner)",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Reflection.TargetParameterCountException extends System.ApplicationException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.TypeAttributes extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.TypeFilter extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public abstract auto ansi beforefieldinit System.Reflection.TypeInfo extends System.Type",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Reflection.CustomAttributeExtensions extends System.Object",
        "size": 38,
        "children": [
          {
            "type": "method",
            "name": "class System.Collections.Generic.IEnumerable\u00601\u003Cclass System.Attribute\u003E GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type attributeType)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Collections.Generic.IEnumerable\u00601\u003C!!T\u003E GetCustomAttributes\u003C(System.Attribute) T\u003E(class System.Reflection.MemberInfo element)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable sealed System.Reflection.CorElementType extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi serializable sealed System.Reflection.PInvokeAttributes extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable beforefieldinit System.Reflection.Assembly extends System.Object implements System.Reflection.ICustomAttributeProvider",
        "size": 157,
        "children": [
          {
            "type": "method",
            "name": "string get_FullName()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Location()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.IO.Stream GetManifestResourceStream(string name)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Assembly ReflectionOnlyLoad(string assemblyString)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ManifestResourceInfo GetManifestResourceInfo(string resourceName)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object o)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception CreateNIE()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetType(string name, bool throwOnError, bool ignoreCase)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(class System.Reflection.Assembly left, class System.Reflection.Assembly right)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Inequality(class System.Reflection.Assembly left, class System.Reflection.Assembly right)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Reflection.AssemblyName extends System.Object",
        "size": 899,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext sc)",
            "size": 293,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.AssemblyNameFlags get_Flags()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_FullName()",
            "size": 312,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Version get_Version()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsPublicKeyValid()",
            "size": 102,
            "children": null
          },
          {
            "type": "method",
            "name": "instance uint8[] InternalGetPublicKeyToken()",
            "size": 66,
            "children": null
          },
          {
            "type": "method",
            "name": "instance uint8[] ComputePublicKeyToken()",
            "size": 79,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi beforefieldinit System.Reflection.ExceptionHandlingClause extends System.Object",
        "size": 160,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 153,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi beforefieldinit System.Reflection.LocalVariableInfo extends System.Object",
        "size": 71,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 64,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi serializable beforefieldinit System.Reflection.RuntimeAssembly extends System.Reflection.Assembly",
        "size": 500,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetType(string name, bool throwOnError, bool ignoreCase)",
            "size": 45,
            "children": null
          },
          {
            "type": "method",
            "name": "static uint8[] GetAotId()",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_FullName()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Location()",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ManifestResourceInfo GetManifestResourceInfo(string resourceName)",
            "size": 56,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.IO.Stream GetManifestResourceStream(string name)",
            "size": 230,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object o)",
            "size": 44,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 34,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Reflection.MonoEventInfo extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi serializable sealed beforefieldinit System.Reflection.RuntimeEventInfo extends System.Reflection.EventInfo",
        "size": 394,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.Reflection.MonoEventInfo GetEventInfo(class System.Reflection.RuntimeEventInfo ev)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Module get_Module()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.BindingFlags get_BindingFlags()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.RuntimeType GetDeclaringTypeInternal()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.RuntimeModule GetRuntimeModule()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.BindingFlags GetBindingFlags()",
            "size": 105,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetAddMethod(bool nonPublic)",
            "size": 46,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetRaiseMethod(bool nonPublic)",
            "size": 46,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetRemoveMethod(bool nonPublic)",
            "size": 46,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_DeclaringType()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ReflectedType()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_MetadataToken()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi beforefieldinit System.Reflection.RtFieldInfo extends System.Reflection.FieldInfo",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi serializable beforefieldinit System.Reflection.RuntimeFieldInfo extends System.Reflection.RtFieldInfo",
        "size": 285,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.Reflection.BindingFlags get_BindingFlags()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Module get_Module()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.RuntimeType GetDeclaringTypeInternal()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.RuntimeModule GetRuntimeModule()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.FieldAttributes get_Attributes()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeFieldHandle get_FieldHandle()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_FieldType()",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ReflectedType()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_DeclaringType()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "object GetValue(object obj)",
            "size": 102,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void CheckGeneric()",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_MetadataToken()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Reflection.MonoMethodInfo extends System.ValueType",
        "size": 73,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.Reflection.MonoMethodInfo GetMethodInfo(native int handle)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetDeclaringType(native int handle)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetReturnType(native int handle)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MethodAttributes GetAttributes(native int handle)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.CallingConventions GetCallingConvention(native int handle)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MethodImplAttributes GetMethodImplementationFlags(native int handle)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ParameterInfo[] GetParametersInfo(native int handle, class System.Reflection.MemberInfo member)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi serializable beforefieldinit System.Reflection.RuntimeMethodInfo extends System.Reflection.MethodInfo",
        "size": 553,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.Reflection.BindingFlags get_BindingFlags()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Module get_Module()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatNameAndSig(bool serialization)",
            "size": 96,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Delegate CreateDelegate(class System.Type delegateType, object target)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.RuntimeModule GetRuntimeModule()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodBase GetMethodFromHandleNoGenericCheck(valuetype System.RuntimeMethodHandle handle)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodBase GetMethodFromHandleNoGenericCheck(valuetype System.RuntimeMethodHandle handle, valuetype System.RuntimeTypeHandle reflectedType)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetBaseMethod()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ReturnType()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_MetadataToken()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MethodImplAttributes GetMethodImplementationFlags()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ParameterInfo[] GetParameters()",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ParameterInfo[] GetParametersInternal()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetParametersCount()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeMethodHandle get_MethodHandle()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MethodAttributes get_Attributes()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.CallingConventions get_CallingConvention()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ReflectedType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_DeclaringType()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetPseudoCustomAttributes()",
            "size": 119,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetGenericMethodDefinition()",
            "size": 22,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi serializable beforefieldinit System.Reflection.RuntimeConstructorInfo extends System.Reflection.ConstructorInfo",
        "size": 266,
        "children": [
          {
            "type": "method",
            "name": "class System.Reflection.Module get_Module()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.RuntimeModule GetRuntimeModule()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.BindingFlags get_BindingFlags()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MethodImplAttributes GetMethodImplementationFlags()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ParameterInfo[] GetParameters()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ParameterInfo[] GetParametersInternal()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetParametersCount()",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "object InternalInvoke(object obj, object[] parameters, bool wrapExceptions)",
            "size": 53,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeMethodHandle get_MethodHandle()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MethodAttributes get_Attributes()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.CallingConventions get_CallingConvention()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ReflectedType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_DeclaringType()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_MetadataToken()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi serializable beforefieldinit System.Reflection.RuntimeModule extends System.Reflection.Module",
        "size": 73,
        "children": [
          {
            "type": "method",
            "name": "class System.Reflection.Assembly get_Assembly()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_ScopeName()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Guid get_ModuleVersionId()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Guid GetModuleVersionId()",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable beforefieldinit System.Reflection.RuntimeParameterInfo extends System.Reflection.ParameterInfo",
        "size": 478,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string name, class System.Type \u0027type\u0027, int32 position, int32 attrs, object defaultValue, class System.Reflection.MemberInfo member, class System.Runtime.InteropServices.MarshalAsAttribute marshalAs)",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "void FormatParameters(class System.Text.StringBuilder sb, class System.Reflection.ParameterInfo[] p, valuetype System.Reflection.CallingConventions callingConvention, bool serialization)",
            "size": 136,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Reflection.ParameterInfo pinfo, class System.Reflection.MemberInfo member)",
            "size": 75,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "object GetDefaultValueImpl(class System.Reflection.ParameterInfo pinfo)",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetPseudoCustomAttributes()",
            "size": 152,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ParameterInfo New(class System.Reflection.ParameterInfo pinfo, class System.Reflection.MemberInfo member)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Reflection.MonoPropertyInfo extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.Reflection.PInfo extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi serializable beforefieldinit System.Reflection.RuntimePropertyInfo extends System.Reflection.PropertyInfo",
        "size": 690,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.Reflection.BindingFlags get_BindingFlags()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Module get_Module()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.RuntimeType GetDeclaringTypeInternal()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.RuntimeModule GetRuntimeModule()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatNameAndSig(bool serialization)",
            "size": 94,
            "children": null
          },
          {
            "type": "method",
            "name": "void CachePropertyInfo(valuetype System.Reflection.PInfo \u0027flags\u0027)",
            "size": 39,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_PropertyType()",
            "size": 71,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ReflectedType()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_DeclaringType()",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetGetMethod(bool nonPublic)",
            "size": 61,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ParameterInfo[] GetIndexParameters()",
            "size": 132,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetSetMethod(bool nonPublic)",
            "size": 61,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "object GetterAdapterFrame\u003CT,R\u003E(class System.Reflection.RuntimePropertyInfo/Getter\u00602\u003C!!T,!!R\u003E getter, object obj)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "object StaticGetterAdapterFrame\u003CR\u003E(class System.Reflection.RuntimePropertyInfo/StaticGetter\u00601\u003C!!R\u003E getter, object obj)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_MetadataToken()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.PropertyInfo GetPropertyFromHandle(valuetype Mono.RuntimePropertyHandle handle, valuetype System.RuntimeTypeHandle reflectedType)",
            "size": 70,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Reflection.StrongNameKeyPair extends System.Object",
        "size": 105,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 105,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Reflection.Emit.PackingSize extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private abstract sequential ansi beforefieldinit System.Reflection.Emit.SymbolType extends System.Reflection.TypeInfo",
        "size": 488,
        "children": [
          {
            "type": "method",
            "name": "class System.Reflection.Module get_Module()",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Assembly get_Assembly()",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeTypeHandle get_TypeHandle()",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_BaseType()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ConstructorInfo[] GetConstructors(valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetMethodImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetInterfaces()",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.EventInfo GetEvent(string name, valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.PropertyInfo GetPropertyImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.TypeAttributes GetAttributeFlagsImpl()",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPrimitiveImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsValueTypeImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsConstructedGenericType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetElementType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool HasElementTypeImpl()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Type elementType)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsArrayImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsByRefImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPointerImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeArrayType()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeArrayType(int32 rank)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeByRefType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakePointerType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_AssemblyQualifiedName()",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_FullName()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_UnderlyingSystemType()",
            "size": 2,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.Reflection.Emit.NativeResourceType extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Reflection.Emit.RefEmitPermissionSet extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Reflection.Emit.MonoResource extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Reflection.Emit.MonoWin32Resource extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Reflection.Emit.AssemblyBuilder extends System.Reflection.Assembly",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed System.Reflection.Emit.AssemblyBuilderAccess extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Reflection.Emit.ConstructorBuilder extends System.Reflection.ConstructorInfo",
        "size": 121,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.Reflection.MethodImplAttributes GetMethodImplementationFlags()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ParameterInfo[] GetParameters()",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeMethodHandle get_MethodHandle()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MethodAttributes get_Attributes()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ReflectedType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_DeclaringType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception not_supported()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception not_created()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi beforefieldinit System.Reflection.Emit.ConstructorOnTypeBuilderInst extends System.Reflection.ConstructorInfo",
        "size": 116,
        "children": [
          {
            "type": "method",
            "name": "class System.Type get_DeclaringType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ReflectedType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MethodImplAttributes GetMethodImplementationFlags()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ParameterInfo[] GetParameters()",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeMethodHandle get_MethodHandle()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MethodAttributes get_Attributes()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi beforefieldinit System.Reflection.Emit.CustomAttributeBuilder extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi beforefieldinit System.Reflection.Emit.ArrayType extends System.Reflection.Emit.SymbolType",
        "size": 127,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Type elementType, int32 rank)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsArrayImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetArrayRank()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatName(string elementName)",
            "size": 93,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi beforefieldinit System.Reflection.Emit.ByRefType extends System.Reflection.Emit.SymbolType",
        "size": 71,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Type elementType)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsByRefImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatName(string elementName)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeArrayType()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeArrayType(int32 rank)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeByRefType()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakePointerType()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi beforefieldinit System.Reflection.Emit.PointerType extends System.Reflection.Emit.SymbolType",
        "size": 27,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Type elementType)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPointerImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatName(string elementName)",
            "size": 17,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.Reflection.Emit.DynamicILInfo extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Reflection.Emit.DynamicMethod extends System.Reflection.MethodInfo",
        "size": 141,
        "children": [
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 65,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MethodImplAttributes GetMethodImplementationFlags()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ParameterInfo[] GetParameters()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MethodAttributes get_Attributes()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_DeclaringType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeMethodHandle get_MethodHandle()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ReflectedType()",
            "size": 2,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Reflection.Emit.EnumBuilder extends System.Reflection.TypeInfo",
        "size": 287,
        "children": [
          {
            "type": "method",
            "name": "class System.Reflection.Assembly get_Assembly()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_AssemblyQualifiedName()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_BaseType()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_FullName()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Module get_Module()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_UnderlyingSystemType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.TypeAttributes GetAttributeFlagsImpl()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ConstructorInfo[] GetConstructors(valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetElementType()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.EventInfo GetEvent(string name, valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetInterfaces()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetMethodImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 39,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.PropertyInfo GetPropertyImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool HasElementTypeImpl()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsArrayImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsByRefImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPointerImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPrimitiveImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception CreateNotSupportedException()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Reflection.Emit.EventBuilder extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Reflection.Emit.FieldBuilder extends System.Reflection.FieldInfo",
        "size": 96,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.Reflection.FieldAttributes get_Attributes()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_DeclaringType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeFieldHandle get_FieldHandle()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_FieldType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ReflectedType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "object GetValue(object obj)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception CreateNotSupportedException()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi beforefieldinit System.Reflection.Emit.FieldOnTypeBuilderInst extends System.Reflection.FieldInfo",
        "size": 68,
        "children": [
          {
            "type": "method",
            "name": "class System.Type get_DeclaringType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ReflectedType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.FieldAttributes get_Attributes()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeFieldHandle get_FieldHandle()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_FieldType()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "object GetValue(object obj)",
            "size": 6,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Reflection.Emit.GenericTypeParameterBuilder extends System.Reflection.TypeInfo",
        "size": 139,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.Reflection.TypeAttributes GetAttributeFlagsImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ConstructorInfo[] GetConstructors(valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.EventInfo GetEvent(string name, valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetInterfaces()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetMethodImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.PropertyInfo GetPropertyImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool HasElementTypeImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsArrayImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsByRefImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPointerImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPrimitiveImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetElementType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_UnderlyingSystemType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Assembly get_Assembly()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_AssemblyQualifiedName()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_BaseType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_FullName()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Module get_Module()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception not_supported()",
            "size": 6,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Reflection.Emit.ILExceptionBlock extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Reflection.Emit.ILExceptionInfo extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Reflection.Emit.ILTokenInfo extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface private abstract auto ansi System.Reflection.Emit.TokenGenerator",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public sequential ansi beforefieldinit System.Reflection.Emit.ILGenerator extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Reflection.Emit.SequencePointList extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Reflection.Emit.Label extends System.ValueType implements class System.IEquatable\u00601\u003Cvaluetype System.Reflection.Emit.Label\u003E",
        "size": 67,
        "children": [
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(valuetype System.Reflection.Emit.Label obj)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 15,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Reflection.Emit.LocalBuilder extends System.Reflection.LocalVariableInfo",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Reflection.Emit.MethodBuilder extends System.Reflection.MethodInfo",
        "size": 116,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.RuntimeMethodHandle get_MethodHandle()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ReflectedType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_DeclaringType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MethodAttributes get_Attributes()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MethodImplAttributes GetMethodImplementationFlags()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ParameterInfo[] GetParameters()",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception NotSupported()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi beforefieldinit System.Reflection.Emit.MethodOnTypeBuilderInst extends System.Reflection.MethodInfo",
        "size": 75,
        "children": [
          {
            "type": "method",
            "name": "class System.Type get_DeclaringType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ReflectedType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MethodImplAttributes GetMethodImplementationFlags()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ParameterInfo[] GetParameters()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeMethodHandle get_MethodHandle()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.MethodAttributes get_Attributes()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi beforefieldinit System.Reflection.Emit.ModuleBuilder extends System.Reflection.Module",
        "size": 58,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.Guid Mono_GetGuid(class System.Reflection.Emit.ModuleBuilder mb)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 51,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Reflection.Emit.ModuleBuilderTokenGenerator extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed System.Reflection.Emit.PEFileKinds extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public sequential ansi beforefieldinit System.Reflection.Emit.ParameterBuilder extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Reflection.Emit.PropertyBuilder extends System.Reflection.PropertyInfo",
        "size": 74,
        "children": [
          {
            "type": "method",
            "name": "class System.Type get_DeclaringType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_PropertyType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_ReflectedType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetGetMethod(bool nonPublic)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ParameterInfo[] GetIndexParameters()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetSetMethod(bool nonPublic)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception not_supported()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Reflection.Emit.SignatureHelper extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Reflection.Emit.TypeBuilder extends System.Reflection.TypeInfo",
        "size": 1213,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.Reflection.TypeAttributes GetAttributeFlagsImpl()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Assembly get_Assembly()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_AssemblyQualifiedName()",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_BaseType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_UnderlyingSystemType()",
            "size": 62,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_FullName()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Module get_Module()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ConstructorInfo[] GetConstructors(valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetElementType()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.EventInfo GetEvent(string name, valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 158,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 186,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetInterfaces()",
            "size": 63,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo[] GetMethodsByName(string name, valuetype System.Reflection.BindingFlags bindingAttr, bool ignoreCase, class System.Type reflected_type)",
            "size": 436,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetMethodImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 45,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.PropertyInfo GetPropertyImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool HasElementTypeImpl()",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsArrayImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsByRefImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPointerImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPrimitiveImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_is_created()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception not_supported()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void check_created()",
            "size": 16,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Reflection.Emit.TypeBuilderInstantiation extends System.Reflection.TypeInfo",
        "size": 640,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Type tb, class System.Type[] args)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsCreated()",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_BaseType()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetInterfaces()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsValueTypeImpl()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bf)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.ConstructorInfo[] GetConstructors(valuetype System.Reflection.BindingFlags bf)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bf)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsAssignableFrom(class System.Type c)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_UnderlyingSystemType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Assembly get_Assembly()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Module get_Module()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_FullName()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_AssemblyQualifiedName()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "string format_name(bool full_name, bool assembly_qualified)",
            "size": 241,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetGenericTypeDefinition()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetGenericArguments()",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_ContainsGenericParameters()",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsGenericTypeDefinition()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsGenericType()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type get_DeclaringType()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeTypeHandle get_TypeHandle()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeArrayType()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeArrayType(int32 rank)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeByRefType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakePointerType()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type GetElementType()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "bool HasElementTypeImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPrimitiveImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsArrayImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsByRefImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPointerImpl()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.TypeAttributes GetAttributeFlagsImpl()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.EventInfo GetEvent(string name, valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodInfo GetMethodImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.PropertyInfo GetPropertyImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDefined(class System.Type attributeType, bool inherit)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit)",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type MakeGenericType(class System.Type \u0027type\u0027, class System.Type[] typeArguments)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsConstructedGenericType()",
            "size": 2,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Reflection.Emit.UnmanagedMarshal extends System.Object",
        "size": 58,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(valuetype System.Runtime.InteropServices.UnmanagedType maint, valuetype System.Runtime.InteropServices.UnmanagedType elemt)",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.Emit.UnmanagedMarshal DefineLPArrayInternal(valuetype System.Runtime.InteropServices.UnmanagedType elemType, int32 sizeConst, int32 sizeParamIndex)",
            "size": 30,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Numerics.ConstantHelper extends System.Object",
        "size": 115,
        "children": [
          {
            "type": "method",
            "name": "uint8 GetByteWithAllBitsSet()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "int8 GetSByteWithAllBitsSet()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "uint16 GetUInt16WithAllBitsSet()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "int16 GetInt16WithAllBitsSet()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "uint32 GetUInt32WithAllBitsSet()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetInt32WithAllBitsSet()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 GetUInt64WithAllBitsSet()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 GetInt64WithAllBitsSet()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "float32 GetSingleWithAllBitsSet()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "float64 GetDoubleWithAllBitsSet()",
            "size": 18,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private explicit ansi sealed beforefieldinit System.Numerics.Register extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public sequential ansi sealed beforefieldinit System.Numerics.Vector\u00601\u003Cvaluetype .ctor (System.ValueType) T\u003E extends System.ValueType implements class System.IEquatable\u00601\u003Cvaluetype System.Numerics.Vector\u00601\u003C!T\u003E\u003E, System.IFormattable",
        "size": 15127,
        "children": [
          {
            "type": "method",
            "name": "int32 get_Count()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Numerics.Vector\u00601\u003C!T\u003E get_Zero()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 InitializeCount()",
            "size": 377,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(!T \u0027value\u0027)",
            "size": 2646,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(void* dataPointer)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(void* dataPointer, int32 offset)",
            "size": 985,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(valuetype System.Numerics.Register\u0026 existingRegister)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !T get_Item(int32 index)",
            "size": 631,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(valuetype System.Numerics.Vector\u00601\u003C!T\u003E other)",
            "size": 2028,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 2673,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format, class System.IFormatProvider formatProvider)",
            "size": 146,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(valuetype System.Numerics.Vector\u00601\u003C!T\u003E left, valuetype System.Numerics.Vector\u00601\u003C!T\u003E right)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Inequality(valuetype System.Numerics.Vector\u00601\u003C!T\u003E left, valuetype System.Numerics.Vector\u00601\u003C!T\u003E right)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Numerics.Vector\u00601\u003Cuint64\u003E op_Explicit(valuetype System.Numerics.Vector\u00601\u003C!T\u003E \u0027value\u0027)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Numerics.Vector\u00601\u003C!T\u003E Equals(valuetype System.Numerics.Vector\u00601\u003C!T\u003E left, valuetype System.Numerics.Vector\u00601\u003C!T\u003E right)",
            "size": 4095,
            "children": null
          },
          {
            "type": "method",
            "name": "bool ScalarEquals(!T left, !T right)",
            "size": 531,
            "children": null
          },
          {
            "type": "method",
            "name": "static !T GetOneValue()",
            "size": 415,
            "children": null
          },
          {
            "type": "method",
            "name": "static !T GetAllBitsSetValue()",
            "size": 441,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 52,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Numerics.Vector extends System.Object",
        "size": 17,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.Numerics.Vector\u00601\u003C!!T\u003E Equals\u003Cvaluetype .ctor (System.ValueType) T\u003E(valuetype System.Numerics.Vector\u00601\u003C!!T\u003E left, valuetype System.Numerics.Vector\u00601\u003C!!T\u003E right)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsHardwareAccelerated()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Numerics.Vector\u00601\u003Cuint64\u003E AsVectorUInt64\u003Cvaluetype .ctor (System.ValueType) T\u003E(valuetype System.Numerics.Vector\u00601\u003C!!T\u003E \u0027value\u0027)",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Numerics.Hashing.HashHelpers extends System.Object",
        "size": 39,
        "children": [
          {
            "type": "method",
            "name": "int32 Combine(int32 h1, int32 h2)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 26,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.IO.DirectoryNotFoundException extends System.IO.IOException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.IO.Error extends System.Object",
        "size": 23,
        "children": [
          {
            "type": "method",
            "name": "class System.Exception GetStreamIsClosed()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception GetWriteNotSupported()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.IO.FileAccess extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.IO.FileLoadException extends System.IO.IOException",
        "size": 329,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Message()",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_FileName()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_FusionLog()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 190,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "string FormatFileLoadExceptionMessage(string fileName, int32 hResult)",
            "size": 21,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.IO.FileMode extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.IO.FileNotFoundException extends System.IO.IOException",
        "size": 401,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, string fileName)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Message()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetMessageField()",
            "size": 73,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_FileName()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_FusionLog()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 190,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 43,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.IO.FileOptions extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.IO.FileShare extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.IO.IOException extends System.SystemException",
        "size": 66,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, int32 \u0027hresult\u0027)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.IO.PathInternal extends System.Object",
        "size": 2,
        "children": [
          {
            "type": "method",
            "name": "bool IsPartiallyQualified(string path)",
            "size": 2,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.IO.PathTooLongException extends System.IO.IOException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.IO.SeekOrigin extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.IO.StreamReader extends System.IO.TextReader",
        "size": 425,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.IO.Stream \u0027stream\u0027, class System.Text.Encoding encoding)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.IO.Stream \u0027stream\u0027, class System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int32 bufferSize, bool leaveOpen)",
            "size": 98,
            "children": null
          },
          {
            "type": "method",
            "name": "void Init(class System.IO.Stream \u0027stream\u0027, class System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int32 bufferSize, bool leaveOpen)",
            "size": 149,
            "children": null
          },
          {
            "type": "method",
            "name": "void Init(class System.IO.Stream \u0027stream\u0027)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose(bool disposing)",
            "size": 108,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_LeaveOpen()",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.IO.StreamWriter extends System.IO.TextWriter",
        "size": 1213,
        "children": [
          {
            "type": "method",
            "name": "void CheckAsyncTaskInProgress()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowAsyncIOInProgress()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.Encoding get_UTF8NoBOM()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.IO.Stream \u0027stream\u0027, class System.Text.Encoding encoding, int32 bufferSize, bool leaveOpen)",
            "size": 96,
            "children": null
          },
          {
            "type": "method",
            "name": "void Init(class System.IO.Stream streamArg, class System.Text.Encoding encodingArg, int32 bufferSize, bool shouldLeaveOpen)",
            "size": 135,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose(bool disposing)",
            "size": 111,
            "children": null
          },
          {
            "type": "method",
            "name": "void Flush(bool flushStream, bool flushEncoder)",
            "size": 162,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_AutoFlush(bool \u0027value\u0027)",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_LeaveOpen()",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "void Write(char \u0027value\u0027)",
            "size": 73,
            "children": null
          },
          {
            "type": "method",
            "name": "void Write(char[] buffer)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void Write(char[] buffer, int32 index, int32 count)",
            "size": 99,
            "children": null
          },
          {
            "type": "method",
            "name": "void WriteSpan(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E buffer, bool appendNewLine)",
            "size": 372,
            "children": null
          },
          {
            "type": "method",
            "name": "void Write(string \u0027value\u0027)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void WriteLine(string \u0027value\u0027)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 27,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.IO.TextReader extends System.MarshalByRefObject implements System.IDisposable",
        "size": 53,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose(bool disposing)",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.IO.TextReader Synchronized(class System.IO.TextReader reader)",
            "size": 31,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.IO.TextWriter extends System.MarshalByRefObject implements System.IDisposable",
        "size": 322,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.IFormatProvider formatProvider)",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.IFormatProvider get_FormatProvider()",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose(bool disposing)",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void Write(char \u0027value\u0027)",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "void Write(char[] buffer)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void Write(char[] buffer, int32 index, int32 count)",
            "size": 102,
            "children": null
          },
          {
            "type": "method",
            "name": "void Write(string \u0027value\u0027)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "void WriteLine(string \u0027value\u0027)",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.IO.TextWriter Synchronized(class System.IO.TextWriter writer)",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 26,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.IO.UnmanagedMemoryStream extends System.IO.Stream",
        "size": 1024,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(uint8* pointer, int64 length)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void Initialize(uint8* pointer, int64 length, int64 capacity, valuetype System.IO.FileAccess access)",
            "size": 188,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_CanRead()",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_CanSeek()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_CanWrite()",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose(bool disposing)",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void EnsureNotClosed()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void EnsureWriteable()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void Flush()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 get_Length()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 get_Position()",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "instance uint8* get_PositionPointer()",
            "size": 67,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 Seek(int64 offset, valuetype System.IO.SeekOrigin loc)",
            "size": 174,
            "children": null
          },
          {
            "type": "method",
            "name": "void Write(uint8[] buffer, int32 offset, int32 count)",
            "size": 98,
            "children": null
          },
          {
            "type": "method",
            "name": "void Write(valuetype System.ReadOnlySpan\u00601\u003Cuint8\u003E buffer)",
            "size": 39,
            "children": null
          },
          {
            "type": "method",
            "name": "void WriteCore(valuetype System.ReadOnlySpan\u00601\u003Cuint8\u003E buffer)",
            "size": 286,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.IO.DriveNotFoundException extends System.IO.IOException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.IO.Directory extends System.Object",
        "size": 75,
        "children": [
          {
            "type": "method",
            "name": "bool Exists(string path)",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetCurrentDirectory()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "string InsecureGetCurrentDirectory()",
            "size": 18,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.IO.FileSystem extends System.Object",
        "size": 94,
        "children": [
          {
            "type": "method",
            "name": "bool DirectoryExists(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E fullPath)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "bool DirectoryExists(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E fullPath, [out] valuetype Interop/ErrorInfo\u0026 errorInfo)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "bool FileExists(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E fullPath, int32 fileType, [out] valuetype Interop/ErrorInfo\u0026 errorInfo)",
            "size": 72,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.IO.FileAttributes extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.IO.Stream extends System.MarshalByRefObject implements System.IDisposable",
        "size": 540,
        "children": [
          {
            "type": "method",
            "name": "class System.Threading.SemaphoreSlim EnsureAsyncActiveSemaphoreInitialized()",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "void Close()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose(bool disposing)",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.IAsyncResult BeginWrite(uint8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.IAsyncResult BeginWriteInternal(uint8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state, bool serializeAsynchronously, bool apm)",
            "size": 112,
            "children": null
          },
          {
            "type": "method",
            "name": "void RunReadWriteTaskWhenReady(class System.Threading.Tasks.Task asyncWaiter, class System.IO.Stream/ReadWriteTask readWriteTask)",
            "size": 75,
            "children": null
          },
          {
            "type": "method",
            "name": "void RunReadWriteTask(class System.IO.Stream/ReadWriteTask readWriteTask)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "void FinishTrackingAsyncOperation()",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void EndWrite(class System.IAsyncResult asyncResult)",
            "size": 95,
            "children": null
          },
          {
            "type": "method",
            "name": "void Write(valuetype System.ReadOnlySpan\u00601\u003Cuint8\u003E buffer)",
            "size": 62,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.IAsyncResult BlockingBeginWrite(uint8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state)",
            "size": 44,
            "children": null
          },
          {
            "type": "method",
            "name": "void BlockingEndWrite(class System.IAsyncResult asyncResult)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.IO.__Error extends System.Object",
        "size": 636,
        "children": [
          {
            "type": "method",
            "name": "string GetDisplayablePath(string path, bool isInvalidPath)",
            "size": 104,
            "children": null
          },
          {
            "type": "method",
            "name": "void WinIOError(int32 errorCode, string maybeFullPath)",
            "size": 532,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.IO.FileStream extends System.IO.Stream",
        "size": 2855,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int handle, valuetype System.IO.FileAccess access, bool ownsHandle, int32 bufferSize, bool isAsync, bool isConsoleWrapper)",
            "size": 73,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access)",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, int32 bufferSize, bool isAsync, bool anonymous)",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, int32 bufferSize, bool anonymous, valuetype System.IO.FileOptions options)",
            "size": 627,
            "children": null
          },
          {
            "type": "method",
            "name": "void Init(class Microsoft.Win32.SafeHandles.SafeFileHandle safeHandle, valuetype System.IO.FileAccess access, bool ownsHandle, int32 bufferSize, bool isAsync, bool isConsoleWrapper)",
            "size": 233,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_CanRead()",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_CanWrite()",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_CanSeek()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 get_Length()",
            "size": 85,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 get_Position()",
            "size": 105,
            "children": null
          },
          {
            "type": "method",
            "name": "void ExposeHandle()",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "void Write(uint8[] \u0027array\u0027, int32 offset, int32 count)",
            "size": 154,
            "children": null
          },
          {
            "type": "method",
            "name": "void WriteInternal(uint8[] src, int32 offset, int32 count)",
            "size": 191,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.IAsyncResult BeginWrite(uint8[] \u0027array\u0027, int32 offset, int32 numBytes, class System.AsyncCallback userCallback, object stateObject)",
            "size": 192,
            "children": null
          },
          {
            "type": "method",
            "name": "void EndWrite(class System.IAsyncResult asyncResult)",
            "size": 91,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin)",
            "size": 197,
            "children": null
          },
          {
            "type": "method",
            "name": "void Flush()",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "void Finalize()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose(bool disposing)",
            "size": 206,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 WriteSegment(uint8[] src, int32 src_offset, int32 count)",
            "size": 104,
            "children": null
          },
          {
            "type": "method",
            "name": "void FlushBuffer()",
            "size": 188,
            "children": null
          },
          {
            "type": "method",
            "name": "void FlushBufferIfDirty()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void InitBuffer(int32 size, bool isZeroSize)",
            "size": 162,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetSecureFileName(string filename)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetSecureFileName(string filename, bool full)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.IO.FileStreamAsyncResult extends System.Object implements System.IAsyncResult",
        "size": 80,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.AsyncCallback cb, object state)",
            "size": 59,
            "children": null
          },
          {
            "type": "method",
            "name": "void CBWrapper(class System.IAsyncResult ares)",
            "size": 21,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.IO.MonoFileType extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.IO.MonoIO extends System.Object",
        "size": 879,
        "children": [
          {
            "type": "method",
            "name": "class System.Exception GetException(valuetype System.IO.MonoIOError \u0027error\u0027)",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception GetException(string path, valuetype System.IO.MonoIOError \u0027error\u0027)",
            "size": 614,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.IO.MonoFileType GetFileType(class System.Runtime.InteropServices.SafeHandle safeHandle, [out] valuetype System.IO.MonoIOError\u0026 \u0027error\u0027)",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "int Open(string filename, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, valuetype System.IO.FileOptions options, [out] valuetype System.IO.MonoIOError\u0026 \u0027error\u0027)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Write(class System.Runtime.InteropServices.SafeHandle safeHandle, uint8[] src, int32 src_offset, int32 count, [out] valuetype System.IO.MonoIOError\u0026 \u0027error\u0027)",
            "size": 41,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 Seek(class System.Runtime.InteropServices.SafeHandle safeHandle, int64 offset, valuetype System.IO.SeekOrigin origin, [out] valuetype System.IO.MonoIOError\u0026 \u0027error\u0027)",
            "size": 39,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 GetLength(class System.Runtime.InteropServices.SafeHandle safeHandle, [out] valuetype System.IO.MonoIOError\u0026 \u0027error\u0027)",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 31,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.IO.MonoIOError extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.IO.MonoIOStat extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed System.IO.Path extends System.Object",
        "size": 2261,
        "children": [
          {
            "type": "method",
            "name": "string Combine(string path1, string path2)",
            "size": 168,
            "children": null
          },
          {
            "type": "method",
            "name": "string CleanPath(string s)",
            "size": 368,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetDirectoryName(string path)",
            "size": 252,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetFileName(string path)",
            "size": 66,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetFullPath(string path)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string InsecureGetFullPath(string path)",
            "size": 510,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsDirectorySeparator(char c)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetPathRoot(string path)",
            "size": 349,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPathRooted(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E path)",
            "size": 75,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPathRooted(string path)",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "static char[] GetInvalidPathChars()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 151,
            "children": null
          },
          {
            "type": "method",
            "name": "string CanonicalizePath(string path)",
            "size": 234,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi System.IO.UnexceptionalStreamReader extends System.IO.StreamReader",
        "size": 57,
        "children": [
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 48,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.IO.Stream \u0027stream\u0027, class System.Text.Encoding encoding)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.IO.UnexceptionalStreamWriter extends System.IO.StreamWriter",
        "size": 69,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.IO.Stream \u0027stream\u0027, class System.Text.Encoding encoding)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void Write(char[] buffer, int32 index, int32 count)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void Write(char \u0027value\u0027)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void Write(char[] \u0027value\u0027)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void Write(string \u0027value\u0027)",
            "size": 13,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Globalization.CompareInfo extends System.Object",
        "size": 1595,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Globalization.CultureInfo culture)",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnDeserializing(valuetype System.Runtime.Serialization.StreamingContext ctx)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext ctx)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnDeserialized()",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnSerializing(valuetype System.Runtime.Serialization.StreamingContext ctx)",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Compare(string string1, string string2)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Compare(string string1, string string2, valuetype System.Globalization.CompareOptions options)",
            "size": 161,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Compare(string string1, int32 offset1, int32 length1, string string2, int32 offset2, int32 length2, valuetype System.Globalization.CompareOptions options)",
            "size": 357,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareOrdinalIgnoreCase(string strA, int32 indexA, int32 lengthA, string strB, int32 indexB, int32 lengthB)",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareOrdinalIgnoreCase(valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E strA, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E strB)",
            "size": 231,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsPrefix(string source, string prefix, valuetype System.Globalization.CompareOptions options)",
            "size": 143,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsSuffix(string source, string suffix, valuetype System.Globalization.CompareOptions options)",
            "size": 143,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object \u0027value\u0027)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 internal_compare_switch(string str1, int32 offset1, int32 length1, string str2, int32 offset2, int32 length2, valuetype System.Globalization.CompareOptions options)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 internal_compare(string str1, int32 offset1, int32 length1, string str2, int32 offset2, int32 length2, valuetype System.Globalization.CompareOptions options)",
            "size": 56,
            "children": null
          },
          {
            "type": "method",
            "name": "void InitSort(class System.Globalization.CultureInfo culture)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareStringOrdinalIgnoreCase(char* pString1, int32 length1, char* pString2, int32 length2)",
            "size": 91,
            "children": null
          },
          {
            "type": "method",
            "name": "bool StartsWith(string source, string prefix, valuetype System.Globalization.CompareOptions options)",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "bool EndsWith(string source, string suffix, valuetype System.Globalization.CompareOptions options)",
            "size": 55,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 16,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Globalization.CompareOptions extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Globalization.CultureNotFoundException extends System.ArgumentException",
        "size": 237,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string paramName, string message)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 73,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Nullable\u00601\u003Cint32\u003E get_InvalidCultureId()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_InvalidCultureName()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_DefaultMessage()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_FormatedInvalidCultureId()",
            "size": 58,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Message()",
            "size": 65,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.Globalization.MonthNameStyles extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.Globalization.DateTimeFormatFlags extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Globalization.DateTimeFormatInfo extends System.Object implements System.IFormatProvider",
        "size": 2972,
        "children": [
          {
            "type": "method",
            "name": "instance string[] internalGetAbbreviatedDayOfWeekNames()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] internalGetAbbreviatedDayOfWeekNamesCore()",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] internalGetDayOfWeekNames()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] internalGetDayOfWeekNamesCore()",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] internalGetAbbreviatedMonthNames()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] internalGetAbbreviatedMonthNamesCore()",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] internalGetMonthNames()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] internalGetMonthNamesCore()",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 78,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Globalization.CultureData cultureData, class System.Globalization.Calendar cal)",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "void InitializeOverridableProperties(class System.Globalization.CultureData cultureData, int32 calendarId)",
            "size": 197,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.DateTimeFormatInfo get_InvariantInfo()",
            "size": 48,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.DateTimeFormatInfo get_CurrentInfo()",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.DateTimeFormatInfo GetInstance(class System.IFormatProvider provider)",
            "size": 79,
            "children": null
          },
          {
            "type": "method",
            "name": "object GetFormat(class System.Type formatType)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "object Clone()",
            "size": 41,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_AMDesignator()",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.Calendar get_Calendar()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_Calendar(class System.Globalization.Calendar \u0027value\u0027)",
            "size": 338,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Globalization.CalendarId[] get_OptionalCalendars()",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] get_EraNames()",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetEraName(int32 era)",
            "size": 61,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_DateSeparator()",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_FullDateTimePattern()",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_LongDatePattern()",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_LongTimePattern()",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_MonthDayPattern()",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_PMDesignator()",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_RFC1123Pattern()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_ShortDatePattern()",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_ShortTimePattern()",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_SortableDateTimePattern()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_GeneralShortTimePattern()",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_GeneralLongTimePattern()",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_DateTimeOffsetPattern()",
            "size": 212,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_TimeSeparator()",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_UniversalSortableDateTimePattern()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_YearMonthPattern()",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] get_AbbreviatedDayNames()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] get_DayNames()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] get_AbbreviatedMonthNames()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] get_MonthNames()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "string internalGetMonthName(int32 month, valuetype System.Globalization.MonthNameStyles style, bool abbreviated)",
            "size": 100,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] internalGetGenitiveMonthNames(bool abbreviated)",
            "size": 89,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] internalGetLeapYearMonthNames()",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetAbbreviatedDayName(valuetype System.DayOfWeek dayofweek)",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetDayName(valuetype System.DayOfWeek dayofweek)",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetAbbreviatedMonthName(int32 month)",
            "size": 54,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetMonthName(int32 month)",
            "size": 54,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] get_UnclonedYearMonthPatterns()",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] get_UnclonedShortDatePatterns()",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] get_UnclonedLongDatePatterns()",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] get_UnclonedShortTimePatterns()",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] get_UnclonedLongTimePatterns()",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsReadOnly()",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_FullTimeSpanPositivePattern()",
            "size": 89,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_FullTimeSpanNegativePattern()",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Globalization.DateTimeFormatFlags get_FormatFlags()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Globalization.DateTimeFormatFlags InitializeFormatFlags()",
            "size": 111,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_HasForceTwoDigitYears()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void ClearTokenHashTable()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 25,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.Globalization.FORMATFLAGS extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.Globalization.CalendarId extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Globalization.DateTimeFormatInfoScanner extends System.Object",
        "size": 474,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.Globalization.FORMATFLAGS GetFormatFlagGenitiveMonth(string[] monthNames, string[] genitveMonthNames, string[] abbrevMonthNames, string[] genetiveAbbrevMonthNames)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Globalization.FORMATFLAGS GetFormatFlagUseSpaceInMonthNames(string[] monthNames, string[] genitveMonthNames, string[] abbrevMonthNames, string[] genetiveAbbrevMonthNames)",
            "size": 77,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Globalization.FORMATFLAGS GetFormatFlagUseSpaceInDayNames(string[] dayNames, string[] abbrevDayNames)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Globalization.FORMATFLAGS GetFormatFlagUseHebrewCalendar(int32 calID)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "bool EqualStringArrays(string[] array1, string[] array2)",
            "size": 47,
            "children": null
          },
          {
            "type": "method",
            "name": "bool ArrayElementsHaveSpace(string[] \u0027array\u0027)",
            "size": 53,
            "children": null
          },
          {
            "type": "method",
            "name": "bool ArrayElementsBeginWithDigit(string[] \u0027array\u0027)",
            "size": 245,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Globalization.DateTimeStyles extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Globalization.HebrewNumber extends System.Object",
        "size": 381,
        "children": [
          {
            "type": "method",
            "name": "string ToString(int32 Number)",
            "size": 381,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Globalization.NumberStyles extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Globalization.SortVersion extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Globalization.TimeSpanFormat extends System.Object",
        "size": 1565,
        "children": [
          {
            "type": "method",
            "name": "void AppendNonNegativeInt32(class System.Text.StringBuilder sb, int32 n, int32 digits)",
            "size": 102,
            "children": null
          },
          {
            "type": "method",
            "name": "string Format(valuetype System.TimeSpan \u0027value\u0027, string format, class System.IFormatProvider formatProvider)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.TimeSpan \u0027value\u0027, valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.IFormatProvider formatProvider)",
            "size": 66,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder FormatToBuilder(valuetype System.TimeSpan \u0027value\u0027, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.IFormatProvider formatProvider)",
            "size": 163,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder FormatStandard(valuetype System.TimeSpan \u0027value\u0027, bool isInvariant, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, valuetype System.Globalization.TimeSpanFormat/Pattern pattern)",
            "size": 456,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Text.StringBuilder FormatCustomized(valuetype System.TimeSpan \u0027value\u0027, valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, class System.Globalization.DateTimeFormatInfo dtfi, class System.Text.StringBuilder result)",
            "size": 736,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 23,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Globalization.TimeSpanParse extends System.Object",
        "size": 104,
        "children": [
          {
            "type": "method",
            "name": "int64 Pow10(int32 pow)",
            "size": 104,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Globalization.UnicodeCategory extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Globalization.GlobalizationMode extends System.Object",
        "size": 19,
        "children": [
          {
            "type": "method",
            "name": "bool get_Invariant()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "bool GetGlobalizationInvariantMode()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Globalization.Calendar extends System.Object",
        "size": 116,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.DateTime get_MinSupportedDateTime()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime get_MaxSupportedDateTime()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_ID()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_BaseCalendarID()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "object Clone()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetReadOnlyState(bool readOnly)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_CurrentEraValue()",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsLeapYear(int32 year)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi System.Globalization.CalendarData extends System.Object",
        "size": 2655,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 910,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string localeName, int32 calendarId, bool bUseUserOverrides)",
            "size": 628,
            "children": null
          },
          {
            "type": "method",
            "name": "void InitializeEraNames(string localeName, int32 calendarId)",
            "size": 476,
            "children": null
          },
          {
            "type": "method",
            "name": "static string[] GetJapaneseEraNames()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "static string[] GetJapaneseEnglishEraNames()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void InitializeAbbreviatedEraNames(string localeName, int32 calendarId)",
            "size": 358,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.CalendarData GetCalendarData(int32 calendarId)",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "string CalendarIdToCultureName(int32 calendarId)",
            "size": 158,
            "children": null
          },
          {
            "type": "method",
            "name": "bool nativeGetCalendarData(class System.Globalization.CalendarData data, string localeName, int32 calendarId)",
            "size": 46,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Globalization.CharUnicodeInfo extends System.Object",
        "size": 344,
        "children": [
          {
            "type": "method",
            "name": "uint32 EndianSwap(uint32 \u0027value\u0027)",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "uint16 EndianSwap(uint16 \u0027value\u0027)",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "bool InitTable()",
            "size": 123,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsWhiteSpace(char c)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char ch)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Globalization.UnicodeCategory InternalGetUnicodeCategory(int32 ch)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint8 InternalGetCategoryValue(int32 ch, int32 offset)",
            "size": 76,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Globalization.GlobalizationAssembly extends System.Object",
        "size": 36,
        "children": [
          {
            "type": "method",
            "name": "static uint8* GetGlobalizationResourceBytePtr(class System.Reflection.Assembly \u0027assembly\u0027, string tableName)",
            "size": 36,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Globalization.GregorianCalendar extends System.Globalization.Calendar",
        "size": 637,
        "children": [
          {
            "type": "method",
            "name": "void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext ctx)",
            "size": 71,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime get_MinSupportedDateTime()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime get_MaxSupportedDateTime()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.Calendar GetDefaultInstance()",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(valuetype System.Globalization.GregorianCalendarTypes \u0027type\u0027)",
            "size": 69,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_ID()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetDatePart(int64 ticks, int32 part)",
            "size": 210,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetDayOfMonth(valuetype System.DateTime time)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time)",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetEra(valuetype System.DateTime time)",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetMonth(valuetype System.DateTime time)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetYear(valuetype System.DateTime time)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsLeapYear(int32 year, int32 era)",
            "size": 113,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 47,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable beforefieldinit System.Globalization.EraInfo extends System.Object",
        "size": 85,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(int32 era, int32 startYear, int32 startMonth, int32 startDay, int32 yearOffset, int32 minEraYear, int32 maxEraYear, string eraName, string abbrevEraName, string englishEraName)",
            "size": 85,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable beforefieldinit System.Globalization.GregorianCalendarHelper extends System.Object",
        "size": 1032,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Globalization.Calendar cal, class System.Globalization.EraInfo[] eraInfo)",
            "size": 87,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetYearOffset(int32 year, int32 era, bool throwOnError)",
            "size": 300,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetGregorianYear(int32 year, int32 era)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetDatePart(int64 ticks, int32 part)",
            "size": 217,
            "children": null
          },
          {
            "type": "method",
            "name": "void CheckTicksRange(int64 ticks)",
            "size": 108,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetDayOfMonth(valuetype System.DateTime time)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time)",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetEra(valuetype System.DateTime time)",
            "size": 73,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetMonth(valuetype System.DateTime time)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetYear(valuetype System.DateTime time)",
            "size": 84,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsLeapYear(int32 year, int32 era)",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 47,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed System.Globalization.GregorianCalendarTypes extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Globalization.JapaneseCalendar extends System.Globalization.Calendar",
        "size": 524,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.DateTime get_MinSupportedDateTime()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime get_MaxSupportedDateTime()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.EraInfo[] GetEraInfo()",
            "size": 258,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.EraInfo[] GetErasFromRegistry()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 56,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_ID()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetDayOfMonth(valuetype System.DateTime time)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetEra(valuetype System.DateTime time)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetMonth(valuetype System.DateTime time)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetYear(valuetype System.DateTime time)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsLeapYear(int32 year, int32 era)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "static string[] EraNames()",
            "size": 48,
            "children": null
          },
          {
            "type": "method",
            "name": "static string[] EnglishEraNames()",
            "size": 48,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 19,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Globalization.NumberFormatInfo extends System.Object implements System.IFormatProvider",
        "size": 1070,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnSerializing(valuetype System.Runtime.Serialization.StreamingContext ctx)",
            "size": 127,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnDeserializing(valuetype System.Runtime.Serialization.StreamingContext ctx)",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext ctx)",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Globalization.CultureData cultureData)",
            "size": 377,
            "children": null
          },
          {
            "type": "method",
            "name": "void VerifyWritable()",
            "size": 25,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.NumberFormatInfo get_InvariantInfo()",
            "size": 41,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.NumberFormatInfo GetInstance(class System.IFormatProvider formatProvider)",
            "size": 87,
            "children": null
          },
          {
            "type": "method",
            "name": "object Clone()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_CurrencyDecimalDigits()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_CurrencyDecimalSeparator()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsReadOnly()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_CurrencyGroupSeparator()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_CurrencySymbol()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.NumberFormatInfo get_CurrentInfo()",
            "size": 55,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_NaNSymbol()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_NaNSymbol(string \u0027value\u0027)",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_CurrencyNegativePattern()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_NumberNegativePattern()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_PercentPositivePattern()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_PercentNegativePattern()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_NegativeInfinitySymbol()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_NegativeSign()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_NumberDecimalDigits()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_NumberDecimalSeparator()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_NumberGroupSeparator()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_CurrencyPositivePattern()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_PositiveInfinitySymbol()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_PositiveSign()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_PercentDecimalDigits()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_PercentDecimalSeparator()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_PercentGroupSeparator()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_PercentSymbol()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_PerMilleSymbol()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "object GetFormat(class System.Type formatType)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.NumberFormatInfo ReadOnly(class System.Globalization.NumberFormatInfo nfi)",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "void ValidateParseStyleInteger(valuetype System.Globalization.NumberStyles style)",
            "size": 65,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Globalization.TextInfo extends System.Object",
        "size": 1943,
        "children": [
          {
            "type": "method",
            "name": "class System.Globalization.TextInfo get_Invariant()",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Globalization.CultureData cultureData)",
            "size": 48,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnDeserializing(valuetype System.Runtime.Serialization.StreamingContext ctx)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnDeserialized()",
            "size": 126,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext ctx)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnSerializing(valuetype System.Runtime.Serialization.StreamingContext ctx)",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_CultureName()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetReadOnlyState(bool readOnly)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "char ToLower(char c)",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToLower(string str)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "char ToLowerAsciiInvariant(char c)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "char ToUpper(char c)",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "char ToUpperAsciiInvariant(char c)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsAscii(char c)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsAsciiCasingSameAsInvariant()",
            "size": 86,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToLowerInternal(string str)",
            "size": 118,
            "children": null
          },
          {
            "type": "method",
            "name": "char ToUpperInternal(char c)",
            "size": 688,
            "children": null
          },
          {
            "type": "method",
            "name": "char ToLowerInternal(char c)",
            "size": 569,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable beforefieldinit System.Globalization.SortKey extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface private abstract auto ansi System.Globalization.ISimpleCollator",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi beforefieldinit System.Globalization.CultureData extends System.Object",
        "size": 1853,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string name)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.CultureData get_Invariant()",
            "size": 262,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.CultureData GetCultureData(string cultureName, bool useUserOverride)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.CultureData GetCultureData(string cultureName, bool useUserOverride, int32 datetimeIndex, int32 calendarId, int32 numberIndex, string iso2lang, int32 ansiCodePage, int32 oemCodePage, int32 macCodePage, int32 ebcdicCodePage, bool rightToLeft, string listSeparator)",
            "size": 106,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.CalendarData GetCalendar(int32 calendarId)",
            "size": 67,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] get_LongTimes()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] get_ShortTimes()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_SISO639LANGNAME()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_IFIRSTDAYOFWEEK()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_IFIRSTWEEKOFYEAR()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_SAM1159()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_SPM2359()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_TimeSeparator()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "instance int32[] get_CalendarIds()",
            "size": 186,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Globalization.CalendarId[] GetCalendarIds()",
            "size": 47,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsInvariantCulture()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_CultureName()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_STEXTINFO()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_UseUserOverride()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] EraNames(int32 calendarId)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] ShortDates(int32 calendarId)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] LongDates(int32 calendarId)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] YearMonths(int32 calendarId)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] DayNames(int32 calendarId)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] AbbreviatedDayNames(int32 calendarId)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] MonthNames(int32 calendarId)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] GenitiveMonthNames(int32 calendarId)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] AbbreviatedMonthNames(int32 calendarId)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] AbbreviatedGenitiveMonthNames(int32 calendarId)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "instance string[] LeapYearMonthNames(int32 calendarId)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "string MonthDay(int32 calendarId)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "string DateSeparator(int32 calendarId)",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetDateSeparator(string format)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetSeparator(string format, string timeParts)",
            "size": 85,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOfTimePart(string format, int32 startIndex, string timeParts)",
            "size": 104,
            "children": null
          },
          {
            "type": "method",
            "name": "string UnescapeNlsString(string str, int32 start, int32 end)",
            "size": 154,
            "children": null
          },
          {
            "type": "method",
            "name": "static string[] ReescapeWin32Strings(string[] \u0027array\u0027)",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "string ReescapeWin32String(string str)",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 strlen(uint8* s)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "string idx2string(uint8* data, int32 idx)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "instance int32[] create_group_sizes_array(int32 gs0, int32 gs1)",
            "size": 41,
            "children": null
          },
          {
            "type": "method",
            "name": "void GetNFIValues(class System.Globalization.NumberFormatInfo nfi)",
            "size": 430,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable beforefieldinit System.Globalization.CodePageDataItem extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Globalization.TextInfoToUpperData extends System.Object",
        "size": 194,
        "children": [
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 194,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Globalization.TextInfoToLowerData extends System.Object",
        "size": 217,
        "children": [
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 217,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable beforefieldinit System.Globalization.CultureInfo extends System.Object implements System.IFormatProvider",
        "size": 9066,
        "children": [
          {
            "type": "method",
            "name": "class System.Globalization.CultureData get__cultureData()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get__isInherited()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.CultureInfo get_InvariantCulture()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.CultureInfo get_CurrentCulture()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.CultureInfo ConstructCurrentCulture()",
            "size": 69,
            "children": null
          },
          {
            "type": "method",
            "name": "string get__name()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_LCID()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Name()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.Calendar get_Calendar()",
            "size": 46,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.TextInfo get_TextInfo()",
            "size": 87,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object \u0027value\u0027)",
            "size": 44,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Globalization.CultureInfo/Data GetTextInfoData()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.CompareInfo get_CompareInfo()",
            "size": 81,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsNeutralCulture()",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "void CheckNeutral()",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.NumberFormatInfo get_NumberFormat()",
            "size": 52,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.DateTimeFormatInfo get_DateTimeFormat()",
            "size": 107,
            "children": null
          },
          {
            "type": "method",
            "name": "object GetFormat(class System.Type formatType)",
            "size": 56,
            "children": null
          },
          {
            "type": "method",
            "name": "void Construct()",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void ConstructInvariant(bool read_only)",
            "size": 139,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.TextInfo CreateTextInfo(bool readOnly)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 culture)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 culture, bool useUserOverride)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 culture, bool useUserOverride, bool read_only)",
            "size": 236,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string name)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string name, bool useUserOverride)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string name, bool useUserOverride, bool read_only)",
            "size": 210,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void insert_into_shared_tables(class System.Globalization.CultureInfo c)",
            "size": 62,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.CultureInfo GetCultureInfo(int32 culture)",
            "size": 93,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.CultureInfo GetCultureInfo(string name)",
            "size": 87,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.CultureInfo CreateSpecificCulture(string name)",
            "size": 227,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.CultureInfo CreateSpecificCultureFromNeutral(string name)",
            "size": 6998,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_CalendarType()",
            "size": 55,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.Calendar CreateCalendar(int32 calendarType)",
            "size": 128,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Exception CreateNotFoundException(string name)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.CultureInfo get_DefaultThreadCurrentCulture()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_SortName()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Globalization.CultureInfo get_UserDefaultCulture()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 27,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable beforefieldinit System.Globalization.RegionInfo extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Diagnostics.StackTraceHiddenAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Diagnostics.DebuggerStepThroughAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Diagnostics.DebuggerHiddenAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Diagnostics.DebuggerNonUserCodeAttribute extends System.Attribute",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Diagnostics.DebuggableAttribute extends System.Attribute",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(valuetype System.Diagnostics.DebuggableAttribute/DebuggingModes modes)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Diagnostics.DebuggerTypeProxyAttribute extends System.Attribute",
        "size": 39,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Type \u0027type\u0027)",
            "size": 39,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Diagnostics.DebuggerDisplayAttribute extends System.Attribute",
        "size": 52,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string \u0027value\u0027)",
            "size": 52,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit System.Diagnostics.Debugger extends System.Object",
        "size": 1,
        "children": [
          {
            "type": "method",
            "name": "void NotifyOfCrossThreadDependency()",
            "size": 1,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable beforefieldinit System.Diagnostics.StackFrame extends System.Object",
        "size": 422,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 65,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 skipFrames, bool fNeedFileInfo)",
            "size": 67,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetFileLineNumber()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetFileName()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetSecureFileName()",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetILOffset()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Reflection.MethodBase GetMethod()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetNativeOffset()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 GetMethodAddress()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "uint32 GetMethodIndex()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetInternalMethodName()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 203,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Diagnostics.StackTrace extends System.Object",
        "size": 1452,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(bool fNeedFileInfo)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 skipFrames, bool fNeedFileInfo)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void init_frames(int32 skipFrames, bool fNeedFileInfo)",
            "size": 90,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Exception e, bool fNeedFileInfo)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Exception e, int32 skipFrames, bool fNeedFileInfo)",
            "size": 67,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_FrameCount()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Diagnostics.StackFrame GetFrame(int32 index)",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetAotId()",
            "size": 52,
            "children": null
          },
          {
            "type": "method",
            "name": "bool AddFrames(class System.Text.StringBuilder sb, bool separator, [out] bool\u0026 isAsync)",
            "size": 404,
            "children": null
          },
          {
            "type": "method",
            "name": "void GetFullNameForStackTrace(class System.Text.StringBuilder sb, class System.Reflection.MethodBase mi, bool needsNewLine, [out] bool\u0026 skipped, [out] bool\u0026 isAsync)",
            "size": 487,
            "children": null
          },
          {
            "type": "method",
            "name": "void ConvertAsyncStateMachineMethod(class System.Reflection.MethodBase\u0026 \u0027method\u0027, class System.Type\u0026 declaringType)",
            "size": 136,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 111,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(valuetype System.Diagnostics.StackTrace/TraceFormat traceFormat)",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Diagnostics.Contracts.Contract extends System.Object",
        "size": 81,
        "children": [
          {
            "type": "method",
            "name": "bool ForAll\u003CT\u003E(class System.Collections.Generic.IEnumerable\u00601\u003C!!T\u003E collection, class System.Predicate\u00601\u003C!!T\u003E predicate)",
            "size": 81,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Diagnostics.SymbolStore.ISymbolWriter",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.Diagnostics.Tracing.EventSource extends System.Object implements System.IDisposable",
        "size": 11,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void Finalize()",
            "size": 1,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsEnabled()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 1,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Configuration.Assemblies.AssemblyHashAlgorithm extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Configuration.Assemblies.AssemblyVersionCompatibility extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.Collections.Comparer extends System.Object implements System.Collections.IComparer",
        "size": 215,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Globalization.CultureInfo culture)",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 53,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Compare(object a, object b)",
            "size": 98,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 31,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Collections.HashHelpers extends System.Object",
        "size": 212,
        "children": [
          {
            "type": "method",
            "name": "bool IsPrime(int32 candidate)",
            "size": 40,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetPrime(int32 min)",
            "size": 85,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 ExpandPrime(int32 oldSize)",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Runtime.CompilerServices.ConditionalWeakTable\u00602\u003Cobject,class System.Runtime.Serialization.SerializationInfo\u003E get_SerializationInfoTable()",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 24,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Collections.IComparer",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Collections.IDictionary implements System.Collections.IEnumerable",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Collections.IEnumerable",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Collections.IEnumerator",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Collections.IEqualityComparer",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Collections.IStructuralComparable",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Collections.IStructuralEquatable",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Collections.Stack extends System.Object implements System.Collections.IEnumerable",
        "size": 34,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 34,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Collections.ArrayList extends System.Object implements System.Collections.IEnumerable",
        "size": 382,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 capacity)",
            "size": 64,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_Capacity(int32 \u0027value\u0027)",
            "size": 97,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Count()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Add(object \u0027value\u0027)",
            "size": 76,
            "children": null
          },
          {
            "type": "method",
            "name": "void CopyTo(class System.Array \u0027array\u0027)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void CopyTo(class System.Array \u0027array\u0027, int32 arrayIndex)",
            "size": 49,
            "children": null
          },
          {
            "type": "method",
            "name": "void EnsureCapacity(int32 min)",
            "size": 62,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Collections.Hashtable extends System.Object implements System.Collections.IDictionary, System.Collections.IEnumerable",
        "size": 247,
        "children": [
          {
            "type": "method",
            "name": "class System.Runtime.CompilerServices.ConditionalWeakTable\u00602\u003Cobject,class System.Runtime.Serialization.SerializationInfo\u003E get_SerializationInfoTable()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 capacity, float32 loadFactor)",
            "size": 204,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 19,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Collections.Concurrent.CDSCollectionETWBCLProvider extends System.Diagnostics.Tracing.EventSource",
        "size": 29,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void ConcurrentDictionary_AcquiringAllLocks(int32 numOfBuckets)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Collections.Concurrent.ConcurrentDictionary\u00602\u003CTKey,TValue\u003E extends System.Object implements class System.Collections.Generic.IDictionary\u00602\u003C!TKey,!TValue\u003E, class System.Collections.Generic.ICollection\u00601\u003Cvaluetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E\u003E, class System.Collections.Generic.IEnumerable\u00601\u003Cvaluetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E\u003E, System.Collections.IEnumerable, System.Collections.IDictionary, class System.Collections.Generic.IReadOnlyCollection\u00601\u003Cvaluetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E\u003E",
        "size": 2894,
        "children": [
          {
            "type": "method",
            "name": "bool IsValueWriteAtomic()",
            "size": 99,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "void InitializeFromCollection(class System.Collections.Generic.IEnumerable\u00601\u003Cvaluetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E\u003E collection)",
            "size": 156,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 concurrencyLevel, int32 capacity, bool growLockArray, class System.Collections.Generic.IEqualityComparer\u00601\u003C!TKey\u003E comparer)",
            "size": 152,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryAdd(!TKey key, !TValue \u0027value\u0027)",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryRemoveInternal(!TKey key, [out] !TValue\u0026 \u0027value\u0027, bool matchValue, !TValue oldValue)",
            "size": 309,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryGetValue(!TKey key, [out] !TValue\u0026 \u0027value\u0027)",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryGetValueInternal(!TKey key, int32 hashcode, [out] !TValue\u0026 \u0027value\u0027)",
            "size": 108,
            "children": null
          },
          {
            "type": "method",
            "name": "void Clear()",
            "size": 108,
            "children": null
          },
          {
            "type": "method",
            "name": "void \u0027System.Collections.Generic.ICollection\u003CSystem.Collections.Generic.KeyValuePair\u003CTKey,TValue\u003E\u003E.CopyTo\u0027(valuetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E[] \u0027array\u0027, int32 index)",
            "size": 139,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E[] ToArray()",
            "size": 102,
            "children": null
          },
          {
            "type": "method",
            "name": "void CopyToPairs(valuetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E[] \u0027array\u0027, int32 index)",
            "size": 76,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryAddInternal(!TKey key, int32 hashcode, !TValue \u0027value\u0027, bool updateIfExists, bool acquireLock, [out] !TValue\u0026 resultingValue)",
            "size": 375,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowKeyNullException()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Count()",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetCountInternal()",
            "size": 52,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !TValue GetOrAdd(!TKey key, class System.Func\u00602\u003C!TKey,!TValue\u003E valueFactory)",
            "size": 74,
            "children": null
          },
          {
            "type": "method",
            "name": "void \u0027System.Collections.Generic.IDictionary\u003CTKey,TValue\u003E.Add\u0027(!TKey key, !TValue \u0027value\u0027)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "void \u0027System.Collections.Generic.ICollection\u003CSystem.Collections.Generic.KeyValuePair\u003CTKey,TValue\u003E\u003E.Add\u0027(valuetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E keyValuePair)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool \u0027System.Collections.Generic.ICollection\u003CSystem.Collections.Generic.KeyValuePair\u003CTKey,TValue\u003E\u003E.Contains\u0027(valuetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E keyValuePair)",
            "size": 38,
            "children": null
          },
          {
            "type": "method",
            "name": "bool \u0027System.Collections.Generic.ICollection\u003CSystem.Collections.Generic.KeyValuePair\u003CTKey,TValue\u003E\u003E.get_IsReadOnly\u0027()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "bool \u0027System.Collections.Generic.ICollection\u003CSystem.Collections.Generic.KeyValuePair\u003CTKey,TValue\u003E\u003E.Remove\u0027(valuetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E keyValuePair)",
            "size": 54,
            "children": null
          },
          {
            "type": "method",
            "name": "void GrowTable(class System.Collections.Concurrent.ConcurrentDictionary\u00602/Tables\u003C!TKey,!TValue\u003E tables)",
            "size": 519,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetBucket(int32 hashcode, int32 bucketCount)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "void GetBucketAndLockNo(int32 hashcode, [out] int32\u0026 bucketNo, [out] int32\u0026 lockNo, int32 bucketCount, int32 lockCount)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_DefaultConcurrencyLevel()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "void AcquireAllLocks(int32\u0026 locksAcquired)",
            "size": 70,
            "children": null
          },
          {
            "type": "method",
            "name": "void AcquireLocks(int32 fromInclusive, int32 toExclusive, int32\u0026 locksAcquired)",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "void ReleaseLocks(int32 fromInclusive, int32 toExclusive)",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnSerializing(valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnSerialized(valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 101,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Collections.Concurrent.IDictionaryDebugView\u00602\u003CK,V\u003E extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Collections.ObjectModel.ReadOnlyCollection\u00601\u003CT\u003E extends System.Object implements class System.Collections.Generic.IList\u00601\u003C!T\u003E, class System.Collections.Generic.ICollection\u00601\u003C!T\u003E, class System.Collections.Generic.IEnumerable\u00601\u003C!T\u003E, System.Collections.IEnumerable, class System.Collections.Generic.IReadOnlyList\u00601\u003C!T\u003E, class System.Collections.Generic.IReadOnlyCollection\u00601\u003C!T\u003E",
        "size": 164,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Collections.Generic.IList\u00601\u003C!T\u003E list)",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Count()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !T get_Item(int32 index)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Contains(!T \u0027value\u0027)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void CopyTo(!T[] \u0027array\u0027, int32 index)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Collections.Generic.IEnumerator\u00601\u003C!T\u003E GetEnumerator()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOf(!T \u0027value\u0027)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "bool \u0027System.Collections.Generic.ICollection\u003CT\u003E.get_IsReadOnly\u0027()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !T \u0027System.Collections.Generic.IList\u003CT\u003E.get_Item\u0027(int32 index)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void \u0027System.Collections.Generic.IList\u003CT\u003E.set_Item\u0027(int32 index, !T \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void \u0027System.Collections.Generic.ICollection\u003CT\u003E.Add\u0027(!T \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void \u0027System.Collections.Generic.ICollection\u003CT\u003E.Clear\u0027()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void \u0027System.Collections.Generic.IList\u003CT\u003E.Insert\u0027(int32 index, !T \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool \u0027System.Collections.Generic.ICollection\u003CT\u003E.Remove\u0027(!T \u0027value\u0027)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void \u0027System.Collections.Generic.IList\u003CT\u003E.RemoveAt\u0027(int32 index)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed System.Collections.Generic.InsertionBehavior extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Collections.Generic.Dictionary\u00602\u003CTKey,TValue\u003E extends System.Object implements class System.Collections.Generic.IDictionary\u00602\u003C!TKey,!TValue\u003E, class System.Collections.Generic.ICollection\u00601\u003Cvaluetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E\u003E, class System.Collections.Generic.IEnumerable\u00601\u003Cvaluetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E\u003E, System.Collections.IEnumerable, System.Collections.IDictionary, class System.Collections.Generic.IReadOnlyCollection\u00601\u003Cvaluetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E\u003E",
        "size": 2298,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 capacity)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Collections.Generic.IEqualityComparer\u00601\u003C!TKey\u003E comparer)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 capacity, class System.Collections.Generic.IEqualityComparer\u00601\u003C!TKey\u003E comparer)",
            "size": 45,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Count()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !TValue get_Item(!TKey key)",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_Item(!TKey key, !TValue \u0027value\u0027)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void Add(!TKey key, !TValue \u0027value\u0027)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void \u0027System.Collections.Generic.ICollection\u003CSystem.Collections.Generic.KeyValuePair\u003CTKey,TValue\u003E\u003E.Add\u0027(valuetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E keyValuePair)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool \u0027System.Collections.Generic.ICollection\u003CSystem.Collections.Generic.KeyValuePair\u003CTKey,TValue\u003E\u003E.Contains\u0027(valuetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E keyValuePair)",
            "size": 58,
            "children": null
          },
          {
            "type": "method",
            "name": "bool \u0027System.Collections.Generic.ICollection\u003CSystem.Collections.Generic.KeyValuePair\u003CTKey,TValue\u003E\u003E.Remove\u0027(valuetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E keyValuePair)",
            "size": 72,
            "children": null
          },
          {
            "type": "method",
            "name": "void Clear()",
            "size": 80,
            "children": null
          },
          {
            "type": "method",
            "name": "bool ContainsKey(!TKey key)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void CopyTo(valuetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E[] \u0027array\u0027, int32 index)",
            "size": 122,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Collections.Generic.IEnumerator\u00601\u003Cvaluetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E\u003E \u0027System.Collections.Generic.IEnumerable\u003CSystem.Collections.Generic.KeyValuePair\u003CTKey,TValue\u003E\u003E.GetEnumerator\u0027()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 FindEntry(!TKey key)",
            "size": 375,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Initialize(int32 capacity)",
            "size": 40,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryInsert(!TKey key, !TValue \u0027value\u0027, valuetype System.Collections.Generic.InsertionBehavior behavior)",
            "size": 695,
            "children": null
          },
          {
            "type": "method",
            "name": "void Resize()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void Resize(int32 newSize, bool forceNewHashCodes)",
            "size": 223,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Remove(!TKey key)",
            "size": 331,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryGetValue(!TKey key, [out] !TValue\u0026 \u0027value\u0027)",
            "size": 46,
            "children": null
          },
          {
            "type": "method",
            "name": "bool \u0027System.Collections.Generic.ICollection\u003CSystem.Collections.Generic.KeyValuePair\u003CTKey,TValue\u003E\u003E.get_IsReadOnly\u0027()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "void \u0027System.Collections.Generic.ICollection\u003CSystem.Collections.Generic.KeyValuePair\u003CTKey,TValue\u003E\u003E.CopyTo\u0027(valuetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E[] \u0027array\u0027, int32 index)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Collections.Generic.ICollection\u00601\u003CT\u003E implements class System.Collections.Generic.IEnumerable\u00601\u003C!T\u003E, System.Collections.IEnumerable",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Collections.Generic.ICollectionDebugView\u00601\u003CT\u003E extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Collections.Generic.IComparer\u00601\u003C- T\u003E",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Collections.Generic.IDictionary\u00602\u003CTKey,TValue\u003E implements class System.Collections.Generic.ICollection\u00601\u003Cvaluetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E\u003E, class System.Collections.Generic.IEnumerable\u00601\u003Cvaluetype System.Collections.Generic.KeyValuePair\u00602\u003C!TKey,!TValue\u003E\u003E, System.Collections.IEnumerable",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Collections.Generic.IDictionaryDebugView\u00602\u003CK,V\u003E extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Collections.Generic.IEnumerable\u00601\u003C\u002B T\u003E implements System.Collections.IEnumerable",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Collections.Generic.IEnumerator\u00601\u003C\u002B T\u003E implements System.IDisposable, System.Collections.IEnumerator",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Collections.Generic.IEqualityComparer\u00601\u003C- T\u003E",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Collections.Generic.IList\u00601\u003CT\u003E implements class System.Collections.Generic.ICollection\u00601\u003C!T\u003E, class System.Collections.Generic.IEnumerable\u00601\u003C!T\u003E, System.Collections.IEnumerable",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Collections.Generic.IReadOnlyCollection\u00601\u003C\u002B T\u003E implements class System.Collections.Generic.IEnumerable\u00601\u003C!T\u003E, System.Collections.IEnumerable",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "interface public abstract auto ansi System.Collections.Generic.IReadOnlyList\u00601\u003C\u002B T\u003E implements class System.Collections.Generic.IReadOnlyCollection\u00601\u003C!T\u003E, class System.Collections.Generic.IEnumerable\u00601\u003C!T\u003E, System.Collections.IEnumerable",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Collections.Generic.KeyNotFoundException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Collections.Generic.KeyValuePair extends System.Object",
        "size": 67,
        "children": [
          {
            "type": "method",
            "name": "string PairToString(object key, object \u0027value\u0027)",
            "size": 67,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Collections.Generic.KeyValuePair\u00602\u003CTKey,TValue\u003E extends System.ValueType",
        "size": 57,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(!TKey key, !TValue \u0027value\u0027)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !TKey get_Key()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !TValue get_Value()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 28,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.Collections.Generic.List\u00601\u003CT\u003E extends System.Object implements class System.Collections.Generic.IList\u00601\u003C!T\u003E, class System.Collections.Generic.ICollection\u00601\u003C!T\u003E, class System.Collections.Generic.IEnumerable\u00601\u003C!T\u003E, System.Collections.IEnumerable, class System.Collections.Generic.IReadOnlyList\u00601\u003C!T\u003E, class System.Collections.Generic.IReadOnlyCollection\u00601\u003C!T\u003E",
        "size": 1250,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 capacity)",
            "size": 46,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Collections.Generic.IEnumerable\u00601\u003C!T\u003E collection)",
            "size": 106,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_Capacity(int32 \u0027value\u0027)",
            "size": 89,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Count()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool \u0027System.Collections.Generic.ICollection\u003CT\u003E.get_IsReadOnly\u0027()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !T get_Item(int32 index)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_Item(int32 index, !T \u0027value\u0027)",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "void Add(!T item)",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "void AddWithResize(!T item)",
            "size": 39,
            "children": null
          },
          {
            "type": "method",
            "name": "void Clear()",
            "size": 61,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Contains(!T item)",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "void CopyTo(!T[] \u0027array\u0027, int32 arrayIndex)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void EnsureCapacity(int32 min)",
            "size": 62,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Collections.Generic.List\u00601/Enumerator\u003C!T\u003E GetEnumerator()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Collections.Generic.IEnumerator\u00601\u003C!T\u003E \u0027System.Collections.Generic.IEnumerable\u003CT\u003E.GetEnumerator\u0027()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOf(!T item)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void Insert(int32 index, !T item)",
            "size": 128,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Remove(!T item)",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void RemoveAt(int32 index)",
            "size": 114,
            "children": null
          },
          {
            "type": "method",
            "name": "void Reverse()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void Reverse(int32 index, int32 count)",
            "size": 71,
            "children": null
          },
          {
            "type": "method",
            "name": "void Sort(class System.Collections.Generic.IComparer\u00601\u003C!T\u003E comparer)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void Sort(int32 index, int32 count, class System.Collections.Generic.IComparer\u00601\u003C!T\u003E comparer)",
            "size": 72,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !T[] ToArray()",
            "size": 48,
            "children": null
          },
          {
            "type": "method",
            "name": "void AddEnumerable(class System.Collections.Generic.IEnumerable\u00601\u003C!T\u003E enumerable)",
            "size": 110,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit System.Collections.Generic.ValueListBuilder\u00601\u003CT\u003E extends System.ValueType",
        "size": 220,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(valuetype System.Span\u00601\u003C!T\u003E initialSpan)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "void Append(!T item)",
            "size": 55,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.ReadOnlySpan\u00601\u003C!T\u003E AsSpan()",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "void Grow()",
            "size": 86,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Collections.Generic.LowLevelDictionary\u00602\u003CTKey,TValue\u003E extends System.Object",
        "size": 550,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 capacity, class System.Collections.Generic.IEqualityComparer\u00601\u003C!TKey\u003E comparer)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_Item(!TKey key, !TValue \u0027value\u0027)",
            "size": 62,
            "children": null
          },
          {
            "type": "method",
            "name": "void Clear([opt] int32 capacity)",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Remove(!TKey key)",
            "size": 136,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Collections.Generic.LowLevelDictionary\u00602/Entry\u003C!TKey,!TValue\u003E Find(!TKey key)",
            "size": 54,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Collections.Generic.LowLevelDictionary\u00602/Entry\u003C!TKey,!TValue\u003E UncheckedAdd(!TKey key, !TValue \u0027value\u0027)",
            "size": 92,
            "children": null
          },
          {
            "type": "method",
            "name": "void ExpandBuckets()",
            "size": 103,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetBucket(!TKey key, [opt] int32 numBuckets)",
            "size": 34,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Collections.Generic.LowLevelList\u00601\u003CT\u003E extends System.Object",
        "size": 1281,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 capacity)",
            "size": 49,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Capacity()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_Capacity(int32 \u0027value\u0027)",
            "size": 82,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Count()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !T get_Item(int32 index)",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_Item(int32 index, !T \u0027value\u0027)",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "void Add(!T item)",
            "size": 74,
            "children": null
          },
          {
            "type": "method",
            "name": "void EnsureCapacity(int32 min)",
            "size": 48,
            "children": null
          },
          {
            "type": "method",
            "name": "void AddRange(class System.Collections.Generic.IEnumerable\u00601\u003C!T\u003E collection)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "void Clear()",
            "size": 49,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Contains(!T item)",
            "size": 62,
            "children": null
          },
          {
            "type": "method",
            "name": "void CopyTo(!T[] \u0027array\u0027, int32 arrayIndex)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOf(!T item)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void Insert(int32 index, !T item)",
            "size": 130,
            "children": null
          },
          {
            "type": "method",
            "name": "void InsertRange(int32 index, class System.Collections.Generic.IEnumerable\u00601\u003C!T\u003E collection)",
            "size": 278,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Remove(!T item)",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 RemoveAll(class System.Predicate\u00601\u003C!T\u003E match)",
            "size": 201,
            "children": null
          },
          {
            "type": "method",
            "name": "void RemoveAt(int32 index)",
            "size": 113,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Collections.Generic.LowLevelListWithIList\u00601\u003CT\u003E extends class System.Collections.Generic.LowLevelList\u00601\u003C!T\u003E implements class System.Collections.Generic.IList\u00601\u003C!T\u003E, class System.Collections.Generic.ICollection\u00601\u003C!T\u003E, class System.Collections.Generic.IEnumerable\u00601\u003C!T\u003E, System.Collections.IEnumerable",
        "size": 29,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 capacity)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool \u0027System.Collections.Generic.ICollection\u003CT\u003E.get_IsReadOnly\u0027()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Collections.Generic.IEnumerator\u00601\u003C!T\u003E \u0027System.Collections.Generic.IEnumerable\u003CT\u003E.GetEnumerator\u0027()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Collections.Generic.IntrospectiveSortUtilities extends System.Object",
        "size": 36,
        "children": [
          {
            "type": "method",
            "name": "int32 FloorLog2PlusOne(int32 n)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowOrIgnoreBadComparer(object comparer)",
            "size": 17,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Collections.Generic.ArraySortHelper\u00601\u003CT\u003E extends System.Object",
        "size": 844,
        "children": [
          {
            "type": "method",
            "name": "void Sort(!T[] keys, int32 index, int32 length, class System.Collections.Generic.IComparer\u00601\u003C!T\u003E comparer)",
            "size": 59,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 BinarySearch(!T[] \u0027array\u0027, int32 index, int32 length, !T \u0027value\u0027, class System.Collections.Generic.IComparer\u00601\u003C!T\u003E comparer)",
            "size": 41,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 InternalBinarySearch(!T[] \u0027array\u0027, int32 index, int32 length, !T \u0027value\u0027, class System.Collections.Generic.IComparer\u00601\u003C!T\u003E comparer)",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "void SwapIfGreater(!T[] keys, class System.Comparison\u00601\u003C!T\u003E comparer, int32 a, int32 b)",
            "size": 58,
            "children": null
          },
          {
            "type": "method",
            "name": "void Swap(!T[] a, int32 i, int32 j)",
            "size": 35,
            "children": null
          },
          {
            "type": "method",
            "name": "void IntrospectiveSort(!T[] keys, int32 left, int32 length, class System.Comparison\u00601\u003C!T\u003E comparer)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "void IntroSort(!T[] keys, int32 lo, int32 hi, int32 depthLimit, class System.Comparison\u00601\u003C!T\u003E comparer)",
            "size": 142,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 PickPivotAndPartition(!T[] keys, int32 lo, int32 hi, class System.Comparison\u00601\u003C!T\u003E comparer)",
            "size": 131,
            "children": null
          },
          {
            "type": "method",
            "name": "void Heapsort(!T[] keys, int32 lo, int32 hi, class System.Comparison\u00601\u003C!T\u003E comparer)",
            "size": 67,
            "children": null
          },
          {
            "type": "method",
            "name": "void DownHeap(!T[] keys, int32 i, int32 n, int32 lo, class System.Comparison\u00601\u003C!T\u003E comparer)",
            "size": 122,
            "children": null
          },
          {
            "type": "method",
            "name": "void InsertionSort(!T[] keys, int32 lo, int32 hi, class System.Comparison\u00601\u003C!T\u003E comparer)",
            "size": 78,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Collections.Generic.ArraySortHelper\u00601\u003C!T\u003E get_Default()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit System.Collections.Generic.ArraySortHelper\u00602\u003CTKey,TValue\u003E extends System.Object",
        "size": 931,
        "children": [
          {
            "type": "method",
            "name": "void Sort(!TKey[] keys, !TValue[] values, int32 index, int32 length, class System.Collections.Generic.IComparer\u00601\u003C!TKey\u003E comparer)",
            "size": 58,
            "children": null
          },
          {
            "type": "method",
            "name": "void SwapIfGreaterWithItems(!TKey[] keys, !TValue[] values, class System.Collections.Generic.IComparer\u00601\u003C!TKey\u003E comparer, int32 a, int32 b)",
            "size": 94,
            "children": null
          },
          {
            "type": "method",
            "name": "void Swap(!TKey[] keys, !TValue[] values, int32 i, int32 j)",
            "size": 65,
            "children": null
          },
          {
            "type": "method",
            "name": "void IntrospectiveSort(!TKey[] keys, !TValue[] values, int32 left, int32 length, class System.Collections.Generic.IComparer\u00601\u003C!TKey\u003E comparer)",
            "size": 29,
            "children": null
          },
          {
            "type": "method",
            "name": "void IntroSort(!TKey[] keys, !TValue[] values, int32 lo, int32 hi, int32 depthLimit, class System.Collections.Generic.IComparer\u00601\u003C!TKey\u003E comparer)",
            "size": 153,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 PickPivotAndPartition(!TKey[] keys, !TValue[] values, int32 lo, int32 hi, class System.Collections.Generic.IComparer\u00601\u003C!TKey\u003E comparer)",
            "size": 142,
            "children": null
          },
          {
            "type": "method",
            "name": "void Heapsort(!TKey[] keys, !TValue[] values, int32 lo, int32 hi, class System.Collections.Generic.IComparer\u00601\u003C!TKey\u003E comparer)",
            "size": 72,
            "children": null
          },
          {
            "type": "method",
            "name": "void DownHeap(!TKey[] keys, !TValue[] values, int32 i, int32 n, int32 lo, class System.Collections.Generic.IComparer\u00601\u003C!TKey\u003E comparer)",
            "size": 179,
            "children": null
          },
          {
            "type": "method",
            "name": "void InsertionSort(!TKey[] keys, !TValue[] values, int32 lo, int32 hi, class System.Collections.Generic.IComparer\u00601\u003C!TKey\u003E comparer)",
            "size": 115,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Collections.Generic.ArraySortHelper\u00602\u003C!TKey,!TValue\u003E get_Default()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Collections.Generic.Comparer\u00601\u003CT\u003E extends System.Object implements System.Collections.IComparer, class System.Collections.Generic.IComparer\u00601\u003C!T\u003E",
        "size": 254,
        "children": [
          {
            "type": "method",
            "name": "class System.Collections.Generic.Comparer\u00601\u003C!T\u003E get_Default()",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Collections.Generic.Comparer\u00601\u003C!T\u003E CreateComparer()",
            "size": 162,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 System.Collections.IComparer.Compare(object x, object y)",
            "size": 58,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable beforefieldinit System.Collections.Generic.GenericComparer\u00601\u003C(class System.IComparable\u00601\u003C!T\u003E) T\u003E extends class System.Collections.Generic.Comparer\u00601\u003C!T\u003E",
        "size": 79,
        "children": [
          {
            "type": "method",
            "name": "int32 Compare(!T x, !T y)",
            "size": 45,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable beforefieldinit System.Collections.Generic.NullableComparer\u00601\u003Cvaluetype .ctor (class System.IComparable\u00601\u003C!T\u003E, System.ValueType) T\u003E extends class System.Collections.Generic.Comparer\u00601\u003Cvaluetype System.Nullable\u00601\u003C!T\u003E\u003E",
        "size": 92,
        "children": [
          {
            "type": "method",
            "name": "int32 Compare(valuetype System.Nullable\u00601\u003C!T\u003E x, valuetype System.Nullable\u00601\u003C!T\u003E y)",
            "size": 58,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable beforefieldinit System.Collections.Generic.ObjectComparer\u00601\u003CT\u003E extends class System.Collections.Generic.Comparer\u00601\u003C!T\u003E",
        "size": 57,
        "children": [
          {
            "type": "method",
            "name": "int32 Compare(!T x, !T y)",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi serializable beforefieldinit System.Collections.Generic.EqualityComparer\u00601\u003CT\u003E extends System.Object implements System.Collections.IEqualityComparer, class System.Collections.Generic.IEqualityComparer\u00601\u003C!T\u003E",
        "size": 535,
        "children": [
          {
            "type": "method",
            "name": "class System.Collections.Generic.EqualityComparer\u00601\u003C!T\u003E get_Default()",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Collections.Generic.EqualityComparer\u00601\u003C!T\u003E CreateComparer()",
            "size": 373,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOf(!T[] \u0027array\u0027, !T \u0027value\u0027, int32 startIndex, int32 count)",
            "size": 37,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 System.Collections.IEqualityComparer.GetHashCode(object obj)",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "bool System.Collections.IEqualityComparer.Equals(object x, object y)",
            "size": 57,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable beforefieldinit System.Collections.Generic.GenericEqualityComparer\u00601\u003C(class System.IEquatable\u00601\u003C!T\u003E) T\u003E extends class System.Collections.Generic.EqualityComparer\u00601\u003C!T\u003E",
        "size": 199,
        "children": [
          {
            "type": "method",
            "name": "bool Equals(!T x, !T y)",
            "size": 45,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode(!T obj)",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOf(!T[] \u0027array\u0027, !T \u0027value\u0027, int32 startIndex, int32 count)",
            "size": 96,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable beforefieldinit System.Collections.Generic.NullableEqualityComparer\u00601\u003Cvaluetype .ctor (class System.IEquatable\u00601\u003C!T\u003E, System.ValueType) T\u003E extends class System.Collections.Generic.EqualityComparer\u00601\u003Cvaluetype System.Nullable\u00601\u003C!T\u003E\u003E",
        "size": 211,
        "children": [
          {
            "type": "method",
            "name": "bool Equals(valuetype System.Nullable\u00601\u003C!T\u003E x, valuetype System.Nullable\u00601\u003C!T\u003E y)",
            "size": 58,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode(valuetype System.Nullable\u00601\u003C!T\u003E obj)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOf(valuetype System.Nullable\u00601\u003C!T\u003E[] \u0027array\u0027, valuetype System.Nullable\u00601\u003C!T\u003E \u0027value\u0027, int32 startIndex, int32 count)",
            "size": 105,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable beforefieldinit System.Collections.Generic.ObjectEqualityComparer\u00601\u003CT\u003E extends class System.Collections.Generic.EqualityComparer\u00601\u003C!T\u003E",
        "size": 209,
        "children": [
          {
            "type": "method",
            "name": "bool Equals(!T x, !T y)",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode(!T obj)",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOf(!T[] \u0027array\u0027, !T \u0027value\u0027, int32 startIndex, int32 count)",
            "size": 101,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable beforefieldinit System.Collections.Generic.ByteEqualityComparer extends class System.Collections.Generic.EqualityComparer\u00601\u003Cuint8\u003E",
        "size": 178,
        "children": [
          {
            "type": "method",
            "name": "bool Equals(uint8 x, uint8 y)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode(uint8 b)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOf(uint8[] \u0027array\u0027, uint8 \u0027value\u0027, int32 startIndex, int32 count)",
            "size": 131,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable beforefieldinit System.Collections.Generic.EnumEqualityComparer\u00601\u003Cvaluetype .ctor (System.ValueType) T\u003E extends class System.Collections.Generic.EqualityComparer\u00601\u003C!T\u003E",
        "size": 73,
        "children": [
          {
            "type": "method",
            "name": "bool Equals(!T x, !T y)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode(!T obj)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo information, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 17,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable sealed beforefieldinit System.Collections.Generic.SByteEnumEqualityComparer\u00601\u003Cvaluetype .ctor (System.ValueType) T\u003E extends class System.Collections.Generic.EnumEqualityComparer\u00601\u003C!T\u003E",
        "size": 30,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo information, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode(!T obj)",
            "size": 16,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable sealed beforefieldinit System.Collections.Generic.ShortEnumEqualityComparer\u00601\u003Cvaluetype .ctor (System.ValueType) T\u003E extends class System.Collections.Generic.EnumEqualityComparer\u00601\u003C!T\u003E",
        "size": 30,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo information, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode(!T obj)",
            "size": 16,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable sealed beforefieldinit System.Collections.Generic.LongEnumEqualityComparer\u00601\u003Cvaluetype .ctor (System.ValueType) T\u003E extends class System.Collections.Generic.EqualityComparer\u00601\u003C!T\u003E",
        "size": 73,
        "children": [
          {
            "type": "method",
            "name": "bool Equals(!T x, !T y)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode(!T obj)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 10,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo information, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi serializable sealed beforefieldinit System.Collections.Generic.InternalStringComparer extends class System.Collections.Generic.EqualityComparer\u00601\u003Cstring\u003E",
        "size": 77,
        "children": [
          {
            "type": "method",
            "name": "int32 GetHashCode(string obj)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(string x, string y)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 IndexOf(string[] \u0027array\u0027, string \u0027value\u0027, int32 startIndex, int32 count)",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi beforefieldinit System.Buffers.ArrayPool\u00601\u003CT\u003E extends System.Object",
        "size": 24,
        "children": [
          {
            "type": "method",
            "name": "class System.Buffers.ArrayPool\u00601\u003C!T\u003E get_Shared()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Buffers.ArrayPoolEventSource extends System.Diagnostics.Tracing.EventSource",
        "size": 73,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void BufferRented(int32 bufferId, int32 bufferSize, int32 poolId, int32 bucketId)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void BufferAllocated(int32 bufferId, int32 bufferSize, int32 poolId, int32 bucketId, valuetype System.Buffers.ArrayPoolEventSource/BufferAllocatedReason reason)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void BufferReturned(int32 bufferId, int32 bufferSize, int32 poolId)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void BufferTrimmed(int32 bufferId, int32 bufferSize, int32 poolId)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void BufferTrimPoll(int32 milliseconds, int32 pressure)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit System.Buffers.TlsOverPerCoreLockedStacksArrayPool\u00601\u003CT\u003E extends class System.Buffers.ArrayPool\u00601\u003C!T\u003E",
        "size": 975,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 58,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Buffers.TlsOverPerCoreLockedStacksArrayPool\u00601/PerCoreLockedStacks\u003C!T\u003E CreatePerCoreLockedStacks(int32 bucketIndex)",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Id()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "instance !T[] Rent(int32 minimumLength)",
            "size": 254,
            "children": null
          },
          {
            "type": "method",
            "name": "void Return(!T[] \u0027array\u0027, [opt] bool clearArray)",
            "size": 232,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Trim()",
            "size": 291,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Gen2GcCallbackFunc(object target)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Buffers.TlsOverPerCoreLockedStacksArrayPool\u00601/MemoryPressure\u003C!T\u003E GetMemoryPressure()",
            "size": 57,
            "children": null
          },
          {
            "type": "method",
            "name": "bool GetTrimBuffers()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 31,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Buffers.Utilities extends System.Object",
        "size": 89,
        "children": [
          {
            "type": "method",
            "name": "int32 SelectBucketIndex(int32 bufferSize)",
            "size": 81,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetMaxSizeForBucket(int32 binIndex)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit System.Buffers.Text.FormattingHelpers extends System.Object",
        "size": 279,
        "children": [
          {
            "type": "method",
            "name": "int32 CountDigits(uint64 \u0027value\u0027)",
            "size": 140,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CountDigits(uint32 \u0027value\u0027)",
            "size": 73,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CountHexDigits(uint64 \u0027value\u0027)",
            "size": 66,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit Internal.Threading.Tasks.Tracing.TaskTrace extends System.Object",
        "size": 106,
        "children": [
          {
            "type": "method",
            "name": "bool get_Enabled()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void TaskWaitBegin_Asynchronous(int32 OriginatingTaskSchedulerID, int32 OriginatingTaskID, int32 TaskID)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void TaskWaitBegin_Synchronous(int32 OriginatingTaskSchedulerID, int32 OriginatingTaskID, int32 TaskID)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void TaskWaitEnd(int32 OriginatingTaskSchedulerID, int32 OriginatingTaskID, int32 TaskID)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void TaskScheduled(int32 OriginatingTaskSchedulerID, int32 OriginatingTaskID, int32 TaskID, int32 CreatingTaskID, int32 TaskCreationOptions)",
            "size": 23,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed Internal.Runtime.Augments.AsyncStatus extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private abstract auto ansi beforefieldinit Internal.Runtime.Augments.TaskTraceCallbacks extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private auto ansi beforefieldinit Internal.Runtime.Augments.RuntimeAugments extends System.Object",
        "size": 2,
        "children": [
          {
            "type": "method",
            "name": "void ReportUnhandledException(class System.Exception exception)",
            "size": 2,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit Internal.Runtime.Augments.RuntimeThread extends System.Object",
        "size": 31,
        "children": [
          {
            "type": "method",
            "name": "void Sleep(int32 millisecondsTimeout)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Yield()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "bool SpinWait(int32 iterations)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetCurrentProcessorId()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit \u0027\u003CPrivateImplementationDetails\u003E\u0027 extends System.Object",
        "size": 44,
        "children": [
          {
            "type": "method",
            "name": "uint32 ComputeStringHash(string s)",
            "size": 44,
            "children": null
          }
        ]
      }
    ]
  },
  {
    "type": "assembly",
    "name": "WebApp",
    "size": 208264,
    "children": [
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit Interop extends System.Object",
        "size": 800,
        "children": [
          {
            "type": "method",
            "name": "void GetRandomBytes(uint8* buffer, int32 length)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit Locale extends System.Object",
        "size": 2,
        "children": [
          {
            "type": "method",
            "name": "string GetText(string msg)",
            "size": 2,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit SR extends System.Object",
        "size": 29,
        "children": [
          {
            "type": "method",
            "name": "string Format(string resourceFormat, object p1)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "string Format(string resourceFormat, object p1, object p2)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "string GetResourceString(string str)",
            "size": 2,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit Mono.Runtime extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.RuntimeClassHandle extends System.ValueType",
        "size": 109,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(valuetype Mono.RuntimeStructs/MonoClass* \u0027value\u0027)",
            "size": 380,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype Mono.RuntimeStructs/MonoClass* get_Value()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 57,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.RuntimeTypeHandle GetTypeHandle()",
            "size": 17,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.RuntimeGenericParamInfoHandle extends System.ValueType",
        "size": 146,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int ptr)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] get_Constraints()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.Reflection.GenericParameterAttributes get_Attributes()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "class System.Type[] GetConstraints()",
            "size": 720,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetConstraintsCount()",
            "size": 426,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.RuntimeEventHandle extends System.ValueType",
        "size": 87,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int v)",
            "size": 486,
            "children": null
          },
          {
            "type": "method",
            "name": "int get_Value()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 603,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 120,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.RuntimePropertyHandle extends System.ValueType",
        "size": 87,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int v)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int get_Value()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 60,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 12,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.RuntimeGPtrArrayHandle extends System.ValueType",
        "size": 95,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int ptr)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Length()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int get_Item(int32 i)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int Lookup(int32 i)",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "void DestroyAndFree(valuetype Mono.RuntimeGPtrArrayHandle\u0026 h)",
            "size": 20,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit Mono.RuntimeMarshal extends System.Object",
        "size": 7,
        "children": [
          {
            "type": "method",
            "name": "valuetype Mono.SafeStringMarshal MarshalString(string str)",
            "size": 7,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit Mono.RuntimeStructs extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.ValueTuple extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.ValueTuple\u00601\u003CT1\u003E extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.ValueTuple\u00602\u003CT1,T2\u003E extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.ValueTuple\u00603\u003CT1,T2,T3\u003E extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.ValueTuple\u00604\u003CT1,T2,T3,T4\u003E extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.ValueTuple\u00605\u003CT1,T2,T3,T4, T5\u003E extends System.ValueType",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.SafeGPtrArrayHandle extends System.ValueType implements System.IDisposable",
        "size": 50,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int ptr)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Length()",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int get_Item(int32 i)",
            "size": 13,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private sequential ansi sealed beforefieldinit Mono.SafeStringMarshal extends System.ValueType implements System.IDisposable",
        "size": 110,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string str)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "int get_Value()",
            "size": 50,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 41,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "private auto ansi sealed beforefieldinit Mono.Security.StrongName extends System.Object",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "private abstract auto ansi sealed beforefieldinit Microsoft.Win32.Win32Native extends System.Object",
        "size": 26,
        "children": [
          {
            "type": "method",
            "name": "string GetMessage(int32 hr)",
            "size": 18,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 MakeHRFromErrorCode(int32 errorCode)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit Microsoft.Win32.SafeHandles.SafeFileHandle extends Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid",
        "size": 34,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int preexistingHandle, bool ownsHandle)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool ReleaseHandle()",
            "size": 19,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed beforefieldinit Microsoft.Win32.SafeHandles.SafeWaitHandle extends Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid",
        "size": 28,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(native int existingHandle, bool ownsHandle)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool ReleaseHandle()",
            "size": 13,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi beforefieldinit Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid extends System.Runtime.InteropServices.SafeHandle",
        "size": 46,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(bool ownsHandle)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_IsInvalid()",
            "size": 33,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Action extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Action\u00601\u003C- T\u003E extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Action\u00602\u003C- T1,- T2\u003E extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Func\u00601\u003C\u002B TResult\u003E extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Func\u00602\u003C- T,\u002B TResult\u003E extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Comparison\u00601\u003C- T\u003E extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.Predicate\u00601\u003C- T\u003E extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.AggregateException extends System.Exception",
        "size": 723,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 28,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Collections.Generic.IEnumerable\u00601\u003Cclass System.Exception\u003E innerExceptions)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Exception[] innerExceptions)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Collections.Generic.IEnumerable\u00601\u003Cclass System.Exception\u003E innerExceptions)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Exception[] innerExceptions)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Collections.Generic.IList\u00601\u003Cclass System.Exception\u003E innerExceptions)",
            "size": 108,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Collections.Generic.IEnumerable\u00601\u003Cclass System.Runtime.ExceptionServices.ExceptionDispatchInfo\u003E innerExceptionInfos)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Collections.Generic.IEnumerable\u00601\u003Cclass System.Runtime.ExceptionServices.ExceptionDispatchInfo\u003E innerExceptionInfos)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Collections.Generic.IList\u00601\u003Cclass System.Runtime.ExceptionServices.ExceptionDispatchInfo\u003E innerExceptionInfos)",
            "size": 132,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 76,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Message()",
            "size": 138,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 133,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.ApplicationException extends System.Exception",
        "size": 71,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, class System.Exception innerException)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.ArgumentException extends System.SystemException",
        "size": 146,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, string paramName)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Message()",
            "size": 52,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.ArgumentNullException extends System.ArgumentException",
        "size": 76,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string paramName)",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string paramName, string message)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.ArgumentOutOfRangeException extends System.ArgumentException",
        "size": 187,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string paramName)",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string paramName, string message)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string paramName, object actualValue, string message)",
            "size": 27,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 36,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Message()",
            "size": 57,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.ArithmeticException extends System.SystemException",
        "size": 51,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.ArrayTypeMismatchException extends System.SystemException",
        "size": 32,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 9,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi beforefieldinit System.AssemblyLoadEventArgs extends System.EventArgs",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(class System.Reflection.Assembly loadedAssembly)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed System.AssemblyLoadEventHandler extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed System.AsyncCallback extends System.MulticastDelegate",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi sealed System.AttributeTargets extends System.Enum",
        "size": 0,
        "children": []
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.AttributeUsageAttribute extends System.Attribute",
        "size": 78,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(valuetype System.AttributeTargets validOn)",
            "size": 32,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_AllowMultiple()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_AllowMultiple(bool \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool get_Inherited()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void set_Inherited(bool \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 16,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable beforefieldinit System.BadImageFormatException extends System.SystemException",
        "size": 379,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 23,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(string message, string fileName)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 43,
            "children": null
          },
          {
            "type": "method",
            "name": "string get_Message()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "void SetMessageField()",
            "size": 65,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 190,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed System.BitConverter extends System.Object",
        "size": 32,
        "children": [
          {
            "type": "method",
            "name": "int64 DoubleToInt64Bits(float64 \u0027value\u0027)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 SingleToInt32Bits(float32 \u0027value\u0027)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 22,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Boolean extends System.ValueType implements System.IComparable, System.IConvertible, class System.IComparable\u00601\u003Cbool\u003E, class System.IEquatable\u00601\u003Cbool\u003E",
        "size": 149,
        "children": [
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(bool obj)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(object obj)",
            "size": 44,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(bool \u0027value\u0027)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 21,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Byte extends System.ValueType implements System.IComparable, System.IConvertible, System.IFormattable, class System.IComparable\u00601\u003Cuint8\u003E, class System.IEquatable\u00601\u003Cuint8\u003E, System.ISpanFormattable",
        "size": 145,
        "children": [
          {
            "type": "method",
            "name": "int32 CompareTo(object \u0027value\u0027)",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(uint8 \u0027value\u0027)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(uint8 obj)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format, class System.IFormatProvider provider)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, [opt] valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, [opt] class System.IFormatProvider provider)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.CLSCompliantAttribute extends System.Attribute",
        "size": 14,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(bool isCompliant)",
            "size": 14,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public sequential ansi serializable sealed beforefieldinit System.Char extends System.ValueType implements System.IComparable, class System.IComparable\u00601\u003Cchar\u003E, class System.IEquatable\u00601\u003Cchar\u003E, System.IConvertible",
        "size": 440,
        "children": [
          {
            "type": "method",
            "name": "bool IsLatin1(char ch)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object obj)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(char obj)",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(object \u0027value\u0027)",
            "size": 34,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(char \u0027value\u0027)",
            "size": 5,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(char c)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsWhiteSpaceLatin1(char c)",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsWhiteSpace(char c)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsSurrogate(char c)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsSurrogate(string s, int32 index)",
            "size": 47,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsHighSurrogate(char c)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsHighSurrogate(string s, int32 index)",
            "size": 51,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsLowSurrogate(char c)",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 ConvertToUtf32(char highSurrogate, char lowSurrogate)",
            "size": 76,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 27,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.CharEnumerator extends System.Object implements System.Collections.IEnumerator, class System.Collections.Generic.IEnumerator\u00601\u003Cchar\u003E, System.IDisposable",
        "size": 190,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(string str)",
            "size": 21,
            "children": null
          },
          {
            "type": "method",
            "name": "bool MoveNext()",
            "size": 79,
            "children": null
          },
          {
            "type": "method",
            "name": "void Dispose()",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "char get_Current()",
            "size": 57,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public abstract auto ansi sealed beforefieldinit System.Convert extends System.Object",
        "size": 271,
        "children": [
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode(object \u0027value\u0027)",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowInt64OverflowException()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void ThrowUInt64OverflowException()",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "uint8 ToByte(bool \u0027value\u0027)",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(object \u0027value\u0027, class System.IFormatProvider provider)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(bool \u0027value\u0027)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(char \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(int8 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(uint8 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(int16 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(uint16 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(int32 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(uint32 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(uint64 \u0027value\u0027)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(float32 \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(float64 \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 ToInt64(string \u0027value\u0027, class System.IFormatProvider provider)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(object \u0027value\u0027, class System.IFormatProvider provider)",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(bool \u0027value\u0027)",
            "size": 9,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(char \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(int8 \u0027value\u0027)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(uint8 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(int16 \u0027value\u0027)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(uint16 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(int32 \u0027value\u0027)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(uint32 \u0027value\u0027)",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(int64 \u0027value\u0027)",
            "size": 12,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(float32 \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(float64 \u0027value\u0027)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 ToUInt64(string \u0027value\u0027, class System.IFormatProvider provider)",
            "size": 15,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.DBNull extends System.Object implements System.IConvertible",
        "size": 65,
        "children": [
          {
            "type": "method",
            "name": "void .ctor()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 6,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 2,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 11,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 11,
            "children": null
          }
        ]
      },
      {
        "type": "class",
        "name": "public auto ansi serializable sealed beforefieldinit System.DateTime extends System.ValueType implements System.IComparable, System.IFormattable, System.IConvertible, class System.IComparable\u00601\u003Cvaluetype System.DateTime\u003E, class System.IEquatable\u00601\u003Cvaluetype System.DateTime\u003E, System.ISpanFormattable",
        "size": 1967,
        "children": [
          {
            "type": "method",
            "name": "void .ctor(uint64 dateData)",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int64 ticks, valuetype System.DateTimeKind kind)",
            "size": 71,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int64 ticks, valuetype System.DateTimeKind kind, bool isAmbiguousDst)",
            "size": 65,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(int32 year, int32 month, int32 day)",
            "size": 15,
            "children": null
          },
          {
            "type": "method",
            "name": "void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context)",
            "size": 202,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 get_InternalTicks()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 get_InternalKind()",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 Compare(valuetype System.DateTime t1, valuetype System.DateTime t2)",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(object \u0027value\u0027)",
            "size": 42,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 CompareTo(valuetype System.DateTime \u0027value\u0027)",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 DateToTicks(int32 year, int32 month, int32 day)",
            "size": 120,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 DaysInMonth(int32 year, int32 month)",
            "size": 56,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(object \u0027value\u0027)",
            "size": 33,
            "children": null
          },
          {
            "type": "method",
            "name": "bool Equals(valuetype System.DateTime \u0027value\u0027)",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime SpecifyKind(valuetype System.DateTime \u0027value\u0027, valuetype System.DateTimeKind kind)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime get_Date()",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetDatePart(int32 part)",
            "size": 217,
            "children": null
          },
          {
            "type": "method",
            "name": "void GetDatePart([out] int32\u0026 year, [out] int32\u0026 month, [out] int32\u0026 day)",
            "size": 206,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Day()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DayOfWeek get_DayOfWeek()",
            "size": 24,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 GetHashCode()",
            "size": 16,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Hour()",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTimeKind get_Kind()",
            "size": 30,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Minute()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Month()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime get_Now()",
            "size": 87,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Second()",
            "size": 19,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 get_Ticks()",
            "size": 7,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TimeSpan get_TimeOfDay()",
            "size": 22,
            "children": null
          },
          {
            "type": "method",
            "name": "int32 get_Year()",
            "size": 8,
            "children": null
          },
          {
            "type": "method",
            "name": "bool IsLeapYear(int32 year)",
            "size": 54,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString()",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "string ToString(string format, class System.IFormatProvider provider)",
            "size": 14,
            "children": null
          },
          {
            "type": "method",
            "name": "bool TryFormat(valuetype System.Span\u00601\u003Cchar\u003E destination, [out] int32\u0026 charsWritten, [opt] valuetype System.ReadOnlySpan\u00601\u003Cchar\u003E format, [opt] class System.IFormatProvider provider)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime ToUniversalTime()",
            "size": 13,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime op_Addition(valuetype System.DateTime d, valuetype System.TimeSpan t)",
            "size": 69,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime op_Subtraction(valuetype System.DateTime d, valuetype System.TimeSpan t)",
            "size": 66,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_Equality(valuetype System.DateTime d1, valuetype System.DateTime d2)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_LessThan(valuetype System.DateTime t1, valuetype System.DateTime t2)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_LessThanOrEqual(valuetype System.DateTime t1, valuetype System.DateTime t2)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_GreaterThan(valuetype System.DateTime t1, valuetype System.DateTime t2)",
            "size": 17,
            "children": null
          },
          {
            "type": "method",
            "name": "bool op_GreaterThanOrEqual(valuetype System.DateTime t1, valuetype System.DateTime t2)",
            "size": 20,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.TypeCode GetTypeCode()",
            "size": 3,
            "children": null
          },
          {
            "type": "method",
            "name": "int64 System.IConvertible.ToInt64(class System.IFormatProvider provider)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "uint64 System.IConvertible.ToUInt64(class System.IFormatProvider provider)",
            "size": 26,
            "children": null
          },
          {
            "type": "method",
            "name": "valuetype System.DateTime get_UtcNow()",
            "size": 31,
            "children": null
          },
          {
            "type": "method",
            "name": "void .cctor()",
            "size": 100,
            "children": null
          }
        ]
      }
    ]
  }
]
